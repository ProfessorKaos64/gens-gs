# Makefile.in generated by automake 1.14.1 from Makefile.am.
# src/gens/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Linux-specific Makefile.am

# Win32-specific Makefile.am

# Haiku-specific Makefile.am



am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/gens
pkgincludedir = $(includedir)/gens
pkglibdir = $(libdir)/gens
pkglibexecdir = $(libexecdir)/gens
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
#am__append_1 = -I../../src/extlib/zlib/
#am__append_2 = -I../../src/extlib/libpng/
bin_PROGRAMS = gens$(EXEEXT)
#am__append_3 = \
#		emulator/sighandler.c

am__append_4 = \
		debugger/debugger.cpp \
		debugger/m68kd.c \
		debugger/sh2d.c \
		debugger/z80dis.c \
		debugger/mcd_cell_dump.asm

am__append_5 = \
		debugger/mcd_cell_dump.o

am__append_6 = \
		segacd/cdda_mp3.c

am__append_7 = \
		util/file/decompressor/md_gzip.c \
		util/file/decompressor/md_zip.c

am__append_8 = \
		util/file/decompressor/md_7z.c

#am__append_9 = \
#		emulator/sighandler.h

am__append_10 = \
		debugger/debugger.hpp \
		debugger/m68kd.h \
		debugger/sh2d.h \
		debugger/z80dis.h \
		debugger/mcd_cell_dump.h

am__append_11 = \
		segacd/cd_aspi.hpp

am__append_12 = \
		segacd/cdda_mp3.h

am__append_13 = \
		util/file/decompressor/md_gzip.h \
		util/file/decompressor/md_zip.h

am__append_14 = \
		util/file/decompressor/md_7z.h

am__append_15 = $(top_builddir)/src/extlib/mp3_dec/libmp3_dec.la
am__append_16 = $(top_builddir)/src/extlib/minizip/libminizip.la
#am__append_17 = $(top_builddir)/src/extlib/zlib/libz.la
am__append_18 = -lz
am__append_19 = $(top_builddir)/src/libgsft/libgsft_png.la
#am__append_20 = $(top_builddir)/src/extlib/libpng/libpng.la
am__append_21 = $(top_builddir)/src/extlib/lzma/liblzma.la
am__append_22 = $(top_builddir)/src/extlib/mp3_dec/libmp3_dec.la
am__append_23 = $(top_builddir)/src/extlib/minizip/libminizip.la
#am__append_24 = $(top_builddir)/src/extlib/zlib/libz.la
am__append_25 = $(top_builddir)/src/libgsft/libgsft_png.la
#am__append_26 = $(top_builddir)/src/extlib/libpng/libpng.la
am__append_27 = $(top_builddir)/src/extlib/lzma/liblzma.la
DIST_COMMON = $(srcdir)/Makefile.unix.inc.am \
	$(srcdir)/Makefile.win32.inc.am \
	$(srcdir)/Makefile.haiku.inc.am $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.am $(top_srcdir)/mkinstalldirs \
	$(top_srcdir)/depcomp $(am__noinst_HEADERS_DIST)
am__append_28 = -I./ui/gtk/
am__append_29 = \
		emulator/g_main_unix.cpp \
		port/ini_old.c \
		port/timer.c \
		charset/iconv_string.cpp \
		video/vdraw_sdl_common.c \
		video/vdraw_sdl.c \
		input/input_sdl.c \
		input/input_sdl_events.cpp \
		input/input_sdl_key_names.c \
		audio/audio_sdl.c

am__append_30 = \
                segacd/cd_aspi_linux.cpp

am__append_31 = \
		ui/gtk/gens_ui_gtk.cpp \
		ui/gtk/gtk-misc.c \
		ui/gtk/gtk-uri.c \
		ui/gtk/gens/gens_window.c \
		ui/gtk/gens/gens_window_callbacks.cpp \
		ui/gtk/gens/gens_window_sync.cpp \
		ui/gtk/gens/gens_menu.cpp \
		ui/gtk/controller_config/cc_window.c \
		ui/gtk/bios_misc_files/bmf_window.cpp \
		ui/gtk/directory_config/dir_window.cpp \
		ui/gtk/general_options/genopt_window.cpp \
		ui/gtk/color_adjust/ca_window.c \
		ui/gtk/country_code/ccode_window.c \
		ui/gtk/zip_select/zipsel_dialog.c \
		ui/gtk/plugin_manager/pmgr_window.cpp \
		ui/gtk/about/about_window.cpp

am__append_32 = \
		video/vdraw_sdl_gl.c \
		ui/gtk/opengl_resolution/glres_window.cpp

#am__append_33 = video/vdraw_gl_cgl.c
am__append_34 = video/vdraw_gl_glx.c
am__append_35 = \
		ui/gtk/select_cdrom/selcd_window.cpp

am__append_36 = \
		emulator/g_main_unix.hpp \
		port/ini_old.h \
		port/timer.h \
		charset/iconv_string.hpp \
		video/vdraw_sdl_common.h \
		video/vdraw_sdl.h \
		input/input_sdl.h \
		input/input_sdl_events.hpp \
		input/input_sdl_keys.h \
		input/input_sdl_key_names.h \
		input/input_sdl_joystate.h \
		audio/audio_sdl.h

am__append_37 = \
                segacd/cd_aspi.hpp \
		segacd/aspi.h

am__append_38 = \
		ui/gtk/gtk-misc.h \
		ui/gtk/gtk-uri.h \
		ui/gtk/gtk-compat.h \
		ui/gtk/gens/gens_window.h \
		ui/gtk/gens/gens_window_callbacks.hpp \
		ui/gtk/gens/gens_window_sync.hpp \
		ui/gtk/gens/gens_menu.hpp \
		ui/gtk/controller_config/cc_window.h \
		ui/gtk/bios_misc_files/bmf_window.hpp \
		ui/gtk/directory_config/dir_window.hpp \
		ui/gtk/general_options/genopt_window.hpp \
		ui/gtk/color_adjust/ca_window.h \
		ui/gtk/country_code/ccode_window.h \
		ui/gtk/zip_select/zipsel_dialog.h \
		ui/gtk/plugin_manager/pmgr_window.hpp \
		ui/gtk/about/about_window.hpp

am__append_39 = \
		video/vdraw_sdl_gl.h \
		video/vdraw_gl.h \
		ui/gtk/opengl_resolution/glres_window.hpp

am__append_40 = \
		ui/gtk/select_cdrom/selcd_window.hpp

am__append_41 = \
		-DGENS_DATADIR=\"${datarootdir}/gens\" \
		-DGENS_MDP_DIR=\"@libdir/mdp@\" \
		-DGENS_DOC_DIR=\"${datarootdir}/doc/${PACKAGE_TARNAME}\" \
		-I/usr/include/SDL2-i386 -D_GNU_SOURCE=1 -D_REENTRANT

am__append_42 = \
		-DGENS_DATADIR=\"${datarootdir}/gens\" \
		-DGENS_MDP_DIR=\"${exec_prefix}/lib/mdp\" \
		-DGENS_DOC_DIR=\"${datarootdir}/doc/${PACKAGE_TARNAME}\" \
		-I/usr/include/SDL2-i386 -D_GNU_SOURCE=1 -D_REENTRANT

am__append_43 = -L/usr/lib/i386-linux-gnu -lSDL2-i386 -lpthread
am__append_44 = -pthread -I/usr/include/gtk-2.0 -I/usr/lib/i386-linux-gnu/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/pango-1.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/freetype2 -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/libpng12 -I/usr/include/harfbuzz   -DGSEAL_ENABLE
am__append_45 = -pthread -I/usr/include/gtk-2.0 -I/usr/lib/i386-linux-gnu/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/pango-1.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/freetype2 -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/libpng12 -I/usr/include/harfbuzz   -DGSEAL_ENABLE
am__append_46 = -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo -lpango-1.0 -lfontconfig -lgobject-2.0 -lglib-2.0 -lfreetype  
am__append_47 = -lGL -ldl -lX11
#am__append_48 = -I./ui/win32/
#am__append_49 = \
#		emulator/g_main_win32.cpp \
#		port/argc_argv.c \
#		video/vdraw_gdi.c \
#		video/vdraw_ddraw_t.c \
#		video/vdraw_ddraw.cpp \
#		input/input_dinput.cpp \
#		input/input_dinput_t.c \
#		input/input_dinput_key_names.c \
#		audio/audio_dsound_t.c \
#		audio/audio_dsound.cpp \
#		plugins/mdp_host_gens_win32.c \
#		util/file/decompressor/popen_wrapper.c \
#		charset/cp1252.cpp \
#		ui/win32/fonts.c \
#		ui/win32/cc6.c \
#		ui/win32/gens_ui_win32.cpp \
#		ui/win32/gens/gens_window.c \
#		ui/win32/gens/gens_window_callbacks.cpp \
#		ui/win32/gens/gens_window_sync.cpp \
#		ui/win32/gens/gens_menu.cpp \
#		ui/win32/controller_config/cc_window.c \
#		ui/win32/bios_misc_files/bmf_window.cpp \
#		ui/win32/directory_config/dir_window.cpp \
#		ui/win32/general_options/genopt_window.cpp \
#		ui/win32/color_adjust/ca_window.c \
#		ui/win32/country_code/ccode_window.c \
#		ui/win32/zip_select/zipsel_dialog.c \
#		ui/win32/plugin_manager/pmgr_window.cpp \
#		ui/win32/about/about_window.cpp \
#		ui/win32/resource.rc

#am__append_50 = \
#                segacd/cd_aspi_win32.cpp \
#		ui/win32/select_cdrom/selcd_window.cpp

#am__append_51 = \
#		emulator/g_main_win32.hpp \
#		port/argc_argv.h \
#		video/vdraw_gdi.h \
#		video/vdraw_ddraw_t.h \
#		video/vdraw_ddraw.hpp \
#		input/input_dinput.hpp \
#		input/input_dinput_t.h \
#		input/input_dinput_key_names.h \
#		input/input_win32_keys.h \
#		audio/audio_dsound_t.h \
#		audio/audio_dsound.hpp \
#		plugins/mdp_host_gens_win32.h \
#		charset/cp1252.hpp \
#		ui/win32/fonts.h \
#		ui/win32/cc6.h \
#		ui/win32/gens/gens_window.h \
#		ui/win32/gens/gens_window_callbacks.hpp \
#		ui/win32/gens/gens_window_sync.hpp \
#		ui/win32/gens/gens_menu.hpp \
#		ui/win32/controller_config/cc_window.h \
#		ui/win32/bios_misc_files/bmf_window.hpp \
#		ui/win32/directory_config/dir_window.hpp \
#		ui/win32/general_options/genopt_window.hpp \
#		ui/win32/color_adjust/ca_window.h \
#		ui/win32/country_code/ccode_window.h \
#		ui/win32/zip_select/zipsel_dialog.h \
#		ui/win32/plugin_manager/pmgr_window.cpp \
#		ui/win32/about/about_window.hpp

#am__append_52 = \
#                segacd/cd_aspi.hpp \
#		segacd/aspi.h \
#		ui/win32/select_cdrom/selcd_window.hpp


# libgsft Win32 libraries.
#am__append_53 = -lgdi32 -lcomctl32 -lcomdlg32 \
#	-lole32 -ldxguid -lddraw -ldinput -ldsound \
#	$(top_builddir)/src/libgsft/libgsft_win32.la
#am__append_54 = $(top_builddir)/src/libgsft/libgsft_win32.la

# Haiku UI Header Files
#am__append_55 = -I./ui/haiku/

#if GENS_CDROM
#if GENS_OS_HAIKU
#gens_SOURCES += \
#                segacd/cd_aspi_haiku.cpp
#endif # GENS_OS_HAIKU
#endif # GENS_CDROM

# UI sources.
#am__append_56 = emulator/g_main_haiku.cpp \
#	port/ini_old.c port/timer.c \
#	input/input_haiku_t.c \
#	input/input_haiku.cpp \
#	video/vdraw_haiku_t.c \
#	video/vdraw_haiku.cpp audio/audio_haiku.c \
#	ui/haiku/gens_ui_haiku.cpp \
#	ui/haiku/gens/gens_app.cpp \
#	ui/haiku/gens/gens_window.cpp \
#	ui/haiku/gens/gens_window_callbacks.cpp \
#	ui/haiku/gens/gens_window_sync.cpp \
#	ui/haiku/gens/gens_menu.cpp \
#	ui/haiku/controller_config/cc_window.cpp \
#	ui/haiku/bios_misc_files/bmf_window.cpp \
#	ui/haiku/directory_config/dir_window.cpp \
#	ui/haiku/general_options/genopt_window.cpp \
#	ui/haiku/color_adjust/ca_window.cpp \
#	ui/haiku/country_code/ccode_window.cpp \
#	ui/haiku/zip_select/zipsel_dialog.cpp \
#	ui/haiku/plugin_manager/pmgr_window.cpp \
#	ui/haiku/about/about_window.cpp

#if GENS_OPENGL
#gens_SOURCES += \
#		video/vdraw_haiku_gl.c \
#		ui/haiku/opengl_resolution/glres_window.cpp
#endif # GENS_OPENGL

#if GENS_CDROM
#gens_SOURCES += \
#		ui/haiku/select_cdrom/selcd_window.cpp
#endif # GENS_CDROM

#if GENS_CDROM
#noinst_HEADERS += \
#		segacd/cd_aspi.hpp \
#		segacd/aspi.h
#endif

# UI headers.
#am__append_57 = emulator/g_main_haiku.hpp \
#	port/ini_old.h port/timer.h \
#	video/vdraw_haiku_t.h \
#	input/input_haiku.hpp \
#	input/input_haiku_t.h audio/audio_haiku.h \
#	ui/haiku/gens/gens_window.h \
#	ui/haiku/gens/gens_window_callbacks.hpp \
#	ui/haiku/gens/gens_window_sync.hpp \
#	ui/haiku/gens/gens_menu.hpp \
#	ui/haiku/controller_config/cc_window.h \
#	ui/haiku/bios_misc_files/bmf_window.hpp \
#	ui/haiku/directory_config/dir_window.hpp \
#	ui/haiku/general_options/genopt_window.hpp \
#	ui/haiku/color_adjust/ca_window.h \
#	ui/haiku/country_code/ccode_window.h \
#	ui/haiku/zip_select/zipsel_dialog.h \
#	ui/haiku/plugin_manager/pmgr_window.hpp \
#	ui/haiku/about/about_window.hpp

#if GENS_OPENGL
#noinst_HEADERS += \
#		video/vdraw_haiku_gl.h \
#		video/vdraw_gl.h \
#		ui/haiku/opengl_resolution/glres_window.hpp
#endif # GENS_OPENGL

#if GENS_CDROM
#noinst_HEADERS += \
#		ui/haiku/select_cdrom/selcd_window.hpp
#endif # GENS_CDROM
#am__append_58 = -lbe
#am__append_59 = \
#		-DGENS_DATADIR=\"${datarootdir}/gens\" \
#		-DGENS_MDP_DIR=\"${exec_prefix}/lib\" \
#		-DGENS_DOC_DIR=\"${datarootdir}/doc/${PACKAGE_TARNAME}\"

#am__append_60 = \
#		-DGENS_DATADIR=\"${datarootdir}/gens\" \
#		-DGENS_MDP_DIR=\"${exec_prefix}/lib\" \
#		-DGENS_DOC_DIR=\"${datarootdir}/doc/${PACKAGE_TARNAME}\"

subdir = src/gens
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/gtk-2.0.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/pkg.m4 \
	$(top_srcdir)/m4/sdl.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__gens_SOURCES_DIST = emulator/gens.cpp emulator/g_main.cpp \
	emulator/g_md.cpp emulator/g_mcd.cpp emulator/g_32x.cpp \
	emulator/md_palette.cpp emulator/g_update.cpp \
	emulator/parse.cpp emulator/options.cpp gens_core/nasmhead.inc \
	gens_core/cpu/68k/cpu_68k.c gens_core/cpu/sh2/cpu_sh2.c \
	gens_core/cpu/sh2/sh2a.asm gens_core/cpu/sh2/sh2_io.asm \
	gens_core/cpu/sh2/sh2.c gens_core/cpu/z80/cpu_z80.c \
	gens_core/sound/pcm.c gens_core/sound/psg.c \
	gens_core/sound/ym2612.cpp gens_core/sound/pwm.c \
	gens_core/mem/mem_m68k.asm gens_core/mem/mem_m68k_cd.asm \
	gens_core/mem/mem_m68k_32x.asm gens_core/mem/mem_s68k.asm \
	gens_core/mem/mem_sh2.asm gens_core/mem/mem_z80.c \
	gens_core/misc/misc.asm gens_core/gfx/fastblur.cpp \
	gens_core/misc/cpuflags.c gens_core/gfx/fastblur_16_x86.S \
	gens_core/gfx/fastblur_32_x86.S audio/audio_mmx.S \
	gens_core/gfx/gfx_cd.asm gens_core/io/io.c \
	gens_core/io/io_teamplayer.c gens_core/vdp/vdp_io_x86.asm \
	gens_core/vdp/vdp_io.c gens_core/vdp/vdp_rend_x86.asm \
	gens_core/vdp/vdp_rend.cpp gens_core/vdp/vdp_32x_x86.asm \
	gens_core/vdp/vdp_32x.c gens_core/vdp/vdp_32x_32bit.c \
	macros/log_msg.c port/ini.cpp segacd/cd_file.c \
	segacd/cd_sys.cpp segacd/lc89510.c ui/gens_ui.cpp \
	ui/common/gens/gens_menu.c \
	ui/common/gens/gens_menu_callbacks.cpp \
	ui/common/gens/gens_window_sync.c \
	ui/common/about_window_data.c ui/common/dir_window_common.c \
	ui/common/pmgr_window_common.cpp ui/common/bmf_window_common.c \
	util/file/config_file.cpp util/file/rom.cpp util/file/save.cpp \
	util/file/file.cpp util/file/decompressor/decompressor.c \
	util/file/decompressor/dummy.c \
	util/file/decompressor/md_rar.cpp \
	util/file/decompressor/md_rar_t.c util/gfx/imageutil.cpp \
	util/sound/gym.cpp util/sound/wave.c video/C64_charset.c \
	video/osd_charset.cpp video/vdraw.c video/vdraw_cpp.cpp \
	video/vdraw_text.cpp video/v_effects.cpp video/vdraw_RGB.c \
	input/input.c input/input_update.c audio/audio.c \
	plugins/pluginmgr.cpp plugins/rendermgr.cpp \
	plugins/mdp_host_gens.c plugins/mdp_host_gens_cpp.cpp \
	plugins/mdp_host_gens_menu.cpp plugins/mdp_host_gens_event.cpp \
	plugins/mdp_host_gens_mem.c plugins/mdp_host_gens_emuctrl.cpp \
	plugins/mdp_host_gens_z.c plugins/mdp_host_gens_config.cpp \
	plugins/mdp_host_gens_dir.cpp plugins/reg/reg_get.c \
	plugins/reg/reg_set.c plugins/reg/reg_get_all.c \
	plugins/reg/reg_set_all.c plugins/eventmgr.cpp \
	plugins/mdp_incompat.cpp emulator/sighandler.c \
	debugger/debugger.cpp debugger/m68kd.c debugger/sh2d.c \
	debugger/z80dis.c debugger/mcd_cell_dump.asm segacd/cdda_mp3.c \
	util/file/decompressor/md_gzip.c \
	util/file/decompressor/md_zip.c util/file/decompressor/md_7z.c \
	emulator/g_main_unix.cpp port/ini_old.c port/timer.c \
	charset/iconv_string.cpp video/vdraw_sdl_common.c \
	video/vdraw_sdl.c input/input_sdl.c input/input_sdl_events.cpp \
	input/input_sdl_key_names.c audio/audio_sdl.c \
	segacd/cd_aspi_linux.cpp ui/gtk/gens_ui_gtk.cpp \
	ui/gtk/gtk-misc.c ui/gtk/gtk-uri.c ui/gtk/gens/gens_window.c \
	ui/gtk/gens/gens_window_callbacks.cpp \
	ui/gtk/gens/gens_window_sync.cpp ui/gtk/gens/gens_menu.cpp \
	ui/gtk/controller_config/cc_window.c \
	ui/gtk/bios_misc_files/bmf_window.cpp \
	ui/gtk/directory_config/dir_window.cpp \
	ui/gtk/general_options/genopt_window.cpp \
	ui/gtk/color_adjust/ca_window.c \
	ui/gtk/country_code/ccode_window.c \
	ui/gtk/zip_select/zipsel_dialog.c \
	ui/gtk/plugin_manager/pmgr_window.cpp \
	ui/gtk/about/about_window.cpp video/vdraw_sdl_gl.c \
	ui/gtk/opengl_resolution/glres_window.cpp video/vdraw_gl_cgl.c \
	video/vdraw_gl_glx.c ui/gtk/select_cdrom/selcd_window.cpp \
	emulator/g_main_win32.cpp port/argc_argv.c video/vdraw_gdi.c \
	video/vdraw_ddraw_t.c video/vdraw_ddraw.cpp \
	input/input_dinput.cpp input/input_dinput_t.c \
	input/input_dinput_key_names.c audio/audio_dsound_t.c \
	audio/audio_dsound.cpp plugins/mdp_host_gens_win32.c \
	util/file/decompressor/popen_wrapper.c charset/cp1252.cpp \
	ui/win32/fonts.c ui/win32/cc6.c ui/win32/gens_ui_win32.cpp \
	ui/win32/gens/gens_window.c \
	ui/win32/gens/gens_window_callbacks.cpp \
	ui/win32/gens/gens_window_sync.cpp ui/win32/gens/gens_menu.cpp \
	ui/win32/controller_config/cc_window.c \
	ui/win32/bios_misc_files/bmf_window.cpp \
	ui/win32/directory_config/dir_window.cpp \
	ui/win32/general_options/genopt_window.cpp \
	ui/win32/color_adjust/ca_window.c \
	ui/win32/country_code/ccode_window.c \
	ui/win32/zip_select/zipsel_dialog.c \
	ui/win32/plugin_manager/pmgr_window.cpp \
	ui/win32/about/about_window.cpp ui/win32/resource.rc \
	segacd/cd_aspi_win32.cpp \
	ui/win32/select_cdrom/selcd_window.cpp \
	emulator/g_main_haiku.cpp input/input_haiku_t.c \
	input/input_haiku.cpp video/vdraw_haiku_t.c \
	video/vdraw_haiku.cpp audio/audio_haiku.c \
	ui/haiku/gens_ui_haiku.cpp ui/haiku/gens/gens_app.cpp \
	ui/haiku/gens/gens_window.cpp \
	ui/haiku/gens/gens_window_callbacks.cpp \
	ui/haiku/gens/gens_window_sync.cpp ui/haiku/gens/gens_menu.cpp \
	ui/haiku/controller_config/cc_window.cpp \
	ui/haiku/bios_misc_files/bmf_window.cpp \
	ui/haiku/directory_config/dir_window.cpp \
	ui/haiku/general_options/genopt_window.cpp \
	ui/haiku/color_adjust/ca_window.cpp \
	ui/haiku/country_code/ccode_window.cpp \
	ui/haiku/zip_select/zipsel_dialog.cpp \
	ui/haiku/plugin_manager/pmgr_window.cpp \
	ui/haiku/about/about_window.cpp
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = gens_core/gfx/gens-fastblur_16_x86.$(OBJEXT) \
	gens_core/gfx/gens-fastblur_32_x86.$(OBJEXT) \
	audio/gens-audio_mmx.$(OBJEXT)
#am__objects_2 = emulator/gens-sighandler.$(OBJEXT)
am__objects_3 = debugger/gens-debugger.$(OBJEXT) \
	debugger/gens-m68kd.$(OBJEXT) \
	debugger/gens-sh2d.$(OBJEXT) \
	debugger/gens-z80dis.$(OBJEXT)
am__objects_4 = segacd/gens-cdda_mp3.$(OBJEXT)
am__objects_5 =  \
	util/file/decompressor/gens-md_gzip.$(OBJEXT) \
	util/file/decompressor/gens-md_zip.$(OBJEXT)
am__objects_6 =  \
	util/file/decompressor/gens-md_7z.$(OBJEXT)
am__objects_7 =  \
	emulator/gens-g_main_unix.$(OBJEXT) \
	port/gens-ini_old.$(OBJEXT) \
	port/gens-timer.$(OBJEXT) \
	charset/gens-iconv_string.$(OBJEXT) \
	video/gens-vdraw_sdl_common.$(OBJEXT) \
	video/gens-vdraw_sdl.$(OBJEXT) \
	input/gens-input_sdl.$(OBJEXT) \
	input/gens-input_sdl_events.$(OBJEXT) \
	input/gens-input_sdl_key_names.$(OBJEXT) \
	audio/gens-audio_sdl.$(OBJEXT)
am__objects_8 = segacd/gens-cd_aspi_linux.$(OBJEXT)
am__objects_9 = ui/gtk/gens-gens_ui_gtk.$(OBJEXT) \
	ui/gtk/gens-gtk-misc.$(OBJEXT) \
	ui/gtk/gens-gtk-uri.$(OBJEXT) \
	ui/gtk/gens/gens-gens_window.$(OBJEXT) \
	ui/gtk/gens/gens-gens_window_callbacks.$(OBJEXT) \
	ui/gtk/gens/gens-gens_window_sync.$(OBJEXT) \
	ui/gtk/gens/gens-gens_menu.$(OBJEXT) \
	ui/gtk/controller_config/gens-cc_window.$(OBJEXT) \
	ui/gtk/bios_misc_files/gens-bmf_window.$(OBJEXT) \
	ui/gtk/directory_config/gens-dir_window.$(OBJEXT) \
	ui/gtk/general_options/gens-genopt_window.$(OBJEXT) \
	ui/gtk/color_adjust/gens-ca_window.$(OBJEXT) \
	ui/gtk/country_code/gens-ccode_window.$(OBJEXT) \
	ui/gtk/zip_select/gens-zipsel_dialog.$(OBJEXT) \
	ui/gtk/plugin_manager/gens-pmgr_window.$(OBJEXT) \
	ui/gtk/about/gens-about_window.$(OBJEXT)
am__objects_10 = video/gens-vdraw_sdl_gl.$(OBJEXT) \
	ui/gtk/opengl_resolution/gens-glres_window.$(OBJEXT)
#am__objects_11 = video/gens-vdraw_gl_cgl.$(OBJEXT)
am__objects_12 = video/gens-vdraw_gl_glx.$(OBJEXT)
am__objects_13 = ui/gtk/select_cdrom/gens-selcd_window.$(OBJEXT)
#am__objects_14 =  \
#	emulator/gens-g_main_win32.$(OBJEXT) \
#	port/gens-argc_argv.$(OBJEXT) \
#	video/gens-vdraw_gdi.$(OBJEXT) \
#	video/gens-vdraw_ddraw_t.$(OBJEXT) \
#	video/gens-vdraw_ddraw.$(OBJEXT) \
#	input/gens-input_dinput.$(OBJEXT) \
#	input/gens-input_dinput_t.$(OBJEXT) \
#	input/gens-input_dinput_key_names.$(OBJEXT) \
#	audio/gens-audio_dsound_t.$(OBJEXT) \
#	audio/gens-audio_dsound.$(OBJEXT) \
#	plugins/gens-mdp_host_gens_win32.$(OBJEXT) \
#	util/file/decompressor/gens-popen_wrapper.$(OBJEXT) \
#	charset/gens-cp1252.$(OBJEXT) \
#	ui/win32/gens-fonts.$(OBJEXT) \
#	ui/win32/gens-cc6.$(OBJEXT) \
#	ui/win32/gens-gens_ui_win32.$(OBJEXT) \
#	ui/win32/gens/gens-gens_window.$(OBJEXT) \
#	ui/win32/gens/gens-gens_window_callbacks.$(OBJEXT) \
#	ui/win32/gens/gens-gens_window_sync.$(OBJEXT) \
#	ui/win32/gens/gens-gens_menu.$(OBJEXT) \
#	ui/win32/controller_config/gens-cc_window.$(OBJEXT) \
#	ui/win32/bios_misc_files/gens-bmf_window.$(OBJEXT) \
#	ui/win32/directory_config/gens-dir_window.$(OBJEXT) \
#	ui/win32/general_options/gens-genopt_window.$(OBJEXT) \
#	ui/win32/color_adjust/gens-ca_window.$(OBJEXT) \
#	ui/win32/country_code/gens-ccode_window.$(OBJEXT) \
#	ui/win32/zip_select/gens-zipsel_dialog.$(OBJEXT) \
#	ui/win32/plugin_manager/gens-pmgr_window.$(OBJEXT) \
#	ui/win32/about/gens-about_window.$(OBJEXT) \
#	ui/win32/resource.$(OBJEXT)
#am__objects_15 = segacd/gens-cd_aspi_win32.$(OBJEXT) \
#	ui/win32/select_cdrom/gens-selcd_window.$(OBJEXT)
#am__objects_16 =  \
#	emulator/gens-g_main_haiku.$(OBJEXT) \
#	port/gens-ini_old.$(OBJEXT) \
#	port/gens-timer.$(OBJEXT) \
#	input/gens-input_haiku_t.$(OBJEXT) \
#	input/gens-input_haiku.$(OBJEXT) \
#	video/gens-vdraw_haiku_t.$(OBJEXT) \
#	video/gens-vdraw_haiku.$(OBJEXT) \
#	audio/gens-audio_haiku.$(OBJEXT) \
#	ui/haiku/gens-gens_ui_haiku.$(OBJEXT) \
#	ui/haiku/gens/gens-gens_app.$(OBJEXT) \
#	ui/haiku/gens/gens-gens_window.$(OBJEXT) \
#	ui/haiku/gens/gens-gens_window_callbacks.$(OBJEXT) \
#	ui/haiku/gens/gens-gens_window_sync.$(OBJEXT) \
#	ui/haiku/gens/gens-gens_menu.$(OBJEXT) \
#	ui/haiku/controller_config/gens-cc_window.$(OBJEXT) \
#	ui/haiku/bios_misc_files/gens-bmf_window.$(OBJEXT) \
#	ui/haiku/directory_config/gens-dir_window.$(OBJEXT) \
#	ui/haiku/general_options/gens-genopt_window.$(OBJEXT) \
#	ui/haiku/color_adjust/gens-ca_window.$(OBJEXT) \
#	ui/haiku/country_code/gens-ccode_window.$(OBJEXT) \
#	ui/haiku/zip_select/gens-zipsel_dialog.$(OBJEXT) \
#	ui/haiku/plugin_manager/gens-pmgr_window.$(OBJEXT) \
#	ui/haiku/about/gens-about_window.$(OBJEXT)
am_gens_OBJECTS = emulator/gens-gens.$(OBJEXT) \
	emulator/gens-g_main.$(OBJEXT) emulator/gens-g_md.$(OBJEXT) \
	emulator/gens-g_mcd.$(OBJEXT) emulator/gens-g_32x.$(OBJEXT) \
	emulator/gens-md_palette.$(OBJEXT) \
	emulator/gens-g_update.$(OBJEXT) emulator/gens-parse.$(OBJEXT) \
	emulator/gens-options.$(OBJEXT) \
	gens_core/cpu/68k/gens-cpu_68k.$(OBJEXT) \
	gens_core/cpu/sh2/gens-cpu_sh2.$(OBJEXT) \
	gens_core/cpu/sh2/gens-sh2.$(OBJEXT) \
	gens_core/cpu/z80/gens-cpu_z80.$(OBJEXT) \
	gens_core/sound/gens-pcm.$(OBJEXT) \
	gens_core/sound/gens-psg.$(OBJEXT) \
	gens_core/sound/gens-ym2612.$(OBJEXT) \
	gens_core/sound/gens-pwm.$(OBJEXT) \
	gens_core/mem/gens-mem_z80.$(OBJEXT) \
	gens_core/gfx/gens-fastblur.$(OBJEXT) \
	gens_core/misc/gens-cpuflags.$(OBJEXT) $(am__objects_1) \
	gens_core/io/gens-io.$(OBJEXT) \
	gens_core/io/gens-io_teamplayer.$(OBJEXT) \
	gens_core/vdp/gens-vdp_io.$(OBJEXT) \
	gens_core/vdp/gens-vdp_rend.$(OBJEXT) \
	gens_core/vdp/gens-vdp_32x.$(OBJEXT) \
	gens_core/vdp/gens-vdp_32x_32bit.$(OBJEXT) \
	macros/gens-log_msg.$(OBJEXT) port/gens-ini.$(OBJEXT) \
	segacd/gens-cd_file.$(OBJEXT) segacd/gens-cd_sys.$(OBJEXT) \
	segacd/gens-lc89510.$(OBJEXT) ui/gens-gens_ui.$(OBJEXT) \
	ui/common/gens/gens-gens_menu.$(OBJEXT) \
	ui/common/gens/gens-gens_menu_callbacks.$(OBJEXT) \
	ui/common/gens/gens-gens_window_sync.$(OBJEXT) \
	ui/common/gens-about_window_data.$(OBJEXT) \
	ui/common/gens-dir_window_common.$(OBJEXT) \
	ui/common/gens-pmgr_window_common.$(OBJEXT) \
	ui/common/gens-bmf_window_common.$(OBJEXT) \
	util/file/gens-config_file.$(OBJEXT) \
	util/file/gens-rom.$(OBJEXT) util/file/gens-save.$(OBJEXT) \
	util/file/gens-file.$(OBJEXT) \
	util/file/decompressor/gens-decompressor.$(OBJEXT) \
	util/file/decompressor/gens-dummy.$(OBJEXT) \
	util/file/decompressor/gens-md_rar.$(OBJEXT) \
	util/file/decompressor/gens-md_rar_t.$(OBJEXT) \
	util/gfx/gens-imageutil.$(OBJEXT) \
	util/sound/gens-gym.$(OBJEXT) util/sound/gens-wave.$(OBJEXT) \
	video/gens-C64_charset.$(OBJEXT) \
	video/gens-osd_charset.$(OBJEXT) video/gens-vdraw.$(OBJEXT) \
	video/gens-vdraw_cpp.$(OBJEXT) video/gens-vdraw_text.$(OBJEXT) \
	video/gens-v_effects.$(OBJEXT) video/gens-vdraw_RGB.$(OBJEXT) \
	input/gens-input.$(OBJEXT) input/gens-input_update.$(OBJEXT) \
	audio/gens-audio.$(OBJEXT) plugins/gens-pluginmgr.$(OBJEXT) \
	plugins/gens-rendermgr.$(OBJEXT) \
	plugins/gens-mdp_host_gens.$(OBJEXT) \
	plugins/gens-mdp_host_gens_cpp.$(OBJEXT) \
	plugins/gens-mdp_host_gens_menu.$(OBJEXT) \
	plugins/gens-mdp_host_gens_event.$(OBJEXT) \
	plugins/gens-mdp_host_gens_mem.$(OBJEXT) \
	plugins/gens-mdp_host_gens_emuctrl.$(OBJEXT) \
	plugins/gens-mdp_host_gens_z.$(OBJEXT) \
	plugins/gens-mdp_host_gens_config.$(OBJEXT) \
	plugins/gens-mdp_host_gens_dir.$(OBJEXT) \
	plugins/reg/gens-reg_get.$(OBJEXT) \
	plugins/reg/gens-reg_set.$(OBJEXT) \
	plugins/reg/gens-reg_get_all.$(OBJEXT) \
	plugins/reg/gens-reg_set_all.$(OBJEXT) \
	plugins/gens-eventmgr.$(OBJEXT) \
	plugins/gens-mdp_incompat.$(OBJEXT) $(am__objects_2) \
	$(am__objects_3) $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) $(am__objects_7) $(am__objects_8) \
	$(am__objects_9) $(am__objects_10) $(am__objects_11) \
	$(am__objects_12) $(am__objects_13) $(am__objects_14) \
	$(am__objects_15) $(am__objects_16)
gens_OBJECTS = $(am_gens_OBJECTS)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1) gens_core/gfx/gfx_cd.o \
	gens_core/mem/mem_m68k.o gens_core/mem/mem_m68k_cd.o \
	gens_core/mem/mem_m68k_32x.o gens_core/mem/mem_s68k.o \
	gens_core/mem/mem_sh2.o gens_core/misc/misc.o \
	gens_core/cpu/sh2/sh2a.o gens_core/cpu/sh2/sh2_io.o \
	gens_core/vdp/vdp_32x_x86.o gens_core/vdp/vdp_io_x86.o \
	gens_core/vdp/vdp_rend_x86.o $(am__append_5)
#am__DEPENDENCIES_3 = $(top_builddir)/src/libgsft/libgsft_win32.la
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
gens_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(gens_CXXFLAGS) \
	$(CXXFLAGS) $(gens_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CPPASCOMPILE = $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS)
LTCPPASCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CCASFLAGS) $(CCASFLAGS)
AM_V_CPPAS = $(am__v_CPPAS_$(V))
am__v_CPPAS_ = $(am__v_CPPAS_$(AM_DEFAULT_VERBOSITY))
am__v_CPPAS_0 = @echo "  CPPAS   " $@;
am__v_CPPAS_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(gens_SOURCES)
DIST_SOURCES = $(am__gens_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__noinst_HEADERS_DIST = emulator/gens.hpp emulator/g_main.hpp \
	emulator/g_md.hpp emulator/g_mcd.hpp emulator/g_32x.hpp \
	emulator/md_palette.hpp emulator/g_update.hpp \
	emulator/parse.hpp emulator/options.hpp \
	gens_core/cpu/68k/cpu_68k.h gens_core/cpu/68k/star_68k.h \
	gens_core/cpu/sh2/sh2.h gens_core/cpu/sh2/cpu_sh2.h \
	gens_core/cpu/z80/cpu_z80.h gens_core/sound/pcm.h \
	gens_core/sound/psg.h gens_core/sound/ym2612.hpp \
	gens_core/sound/pwm.h gens_core/mem/mem_m68k.h \
	gens_core/mem/mem_m68k_cd.h gens_core/mem/mem_m68k_32x.h \
	gens_core/mem/mem_s68k.h gens_core/mem/mem_sh2.h \
	gens_core/mem/mem_z80.h gens_core/misc/misc.h \
	gens_core/gfx/fastblur.hpp gens_core/misc/cpuflags.h \
	gens_core/gfx/fastblur_x86.h audio/audio_mmx.h \
	gens_core/gfx/gfx_cd.h gens_core/io/io.h \
	gens_core/io/io_teamplayer.h gens_core/vdp/vdp_io.h \
	gens_core/vdp/vdp_rend.h gens_core/vdp/vdp_32x.h \
	gens_core/vdp/vdp_32x_32bit.h macros/git.h macros/log_msg.h \
	port/ini.hpp segacd/cd_file.h segacd/cd_sys.hpp \
	segacd/lc89510.h ui/gens_ui.hpp ui/common/gens/gens_menu.h \
	ui/common/gens/gens_menu_callbacks.cpp \
	ui/common/gens/gens_window_sync.h \
	ui/common/about_window_data.h ui/common/dir_window_common.h \
	ui/common/pmgr_window_common.hpp ui/common/bmf_window_common.h \
	util/file/config_file.hpp util/file/rom.hpp util/file/save.hpp \
	util/file/file.hpp util/file/gsx_struct.h util/file/gsx_v6.h \
	util/file/gsx_v7.h util/file/decompressor/decompressor.h \
	util/file/decompressor/popen_wrapper.h \
	util/file/decompressor/dummy.h \
	util/file/decompressor/md_rar.hpp \
	util/file/decompressor/md_rar_t.h util/gfx/imageutil.hpp \
	util/sound/gym.hpp util/sound/wave.h video/C64_charset.h \
	video/osd_charset.hpp video/vdraw.h video/vdraw_cpp.hpp \
	video/vdraw_text.hpp video/v_effects.hpp video/vdraw_RGB.h \
	input/input.h input/input_update.h audio/audio.h \
	plugins/pluginmgr.hpp plugins/rendermgr.hpp \
	plugins/mdp_host_gens.h plugins/mdp_host_gens_cpp.hpp \
	plugins/mdp_host_gens_menu.hpp plugins/mdp_host_gens_event.hpp \
	plugins/mdp_host_gens_mem.h plugins/mdp_host_gens_emuctrl.hpp \
	plugins/mdp_host_gens_z.h plugins/mdp_host_gens_config.hpp \
	plugins/mdp_host_gens_dir.hpp plugins/reg/reg_get.h \
	plugins/reg/reg_set.h plugins/reg/reg_get_all.h \
	plugins/reg/reg_set_all.h plugins/eventmgr.hpp \
	plugins/mdp_incompat.hpp emulator/sighandler.h \
	debugger/debugger.hpp debugger/m68kd.h debugger/sh2d.h \
	debugger/z80dis.h debugger/mcd_cell_dump.h segacd/cd_aspi.hpp \
	segacd/cdda_mp3.h util/file/decompressor/md_gzip.h \
	util/file/decompressor/md_zip.h util/file/decompressor/md_7z.h \
	emulator/g_main_unix.hpp port/ini_old.h port/timer.h \
	charset/iconv_string.hpp video/vdraw_sdl_common.h \
	video/vdraw_sdl.h input/input_sdl.h input/input_sdl_events.hpp \
	input/input_sdl_keys.h input/input_sdl_key_names.h \
	input/input_sdl_joystate.h audio/audio_sdl.h segacd/aspi.h \
	ui/gtk/gtk-misc.h ui/gtk/gtk-uri.h ui/gtk/gtk-compat.h \
	ui/gtk/gens/gens_window.h \
	ui/gtk/gens/gens_window_callbacks.hpp \
	ui/gtk/gens/gens_window_sync.hpp ui/gtk/gens/gens_menu.hpp \
	ui/gtk/controller_config/cc_window.h \
	ui/gtk/bios_misc_files/bmf_window.hpp \
	ui/gtk/directory_config/dir_window.hpp \
	ui/gtk/general_options/genopt_window.hpp \
	ui/gtk/color_adjust/ca_window.h \
	ui/gtk/country_code/ccode_window.h \
	ui/gtk/zip_select/zipsel_dialog.h \
	ui/gtk/plugin_manager/pmgr_window.hpp \
	ui/gtk/about/about_window.hpp video/vdraw_sdl_gl.h \
	video/vdraw_gl.h ui/gtk/opengl_resolution/glres_window.hpp \
	ui/gtk/select_cdrom/selcd_window.hpp emulator/g_main_win32.hpp \
	port/argc_argv.h video/vdraw_gdi.h video/vdraw_ddraw_t.h \
	video/vdraw_ddraw.hpp input/input_dinput.hpp \
	input/input_dinput_t.h input/input_dinput_key_names.h \
	input/input_win32_keys.h audio/audio_dsound_t.h \
	audio/audio_dsound.hpp plugins/mdp_host_gens_win32.h \
	charset/cp1252.hpp ui/win32/fonts.h ui/win32/cc6.h \
	ui/win32/gens/gens_window.h \
	ui/win32/gens/gens_window_callbacks.hpp \
	ui/win32/gens/gens_window_sync.hpp ui/win32/gens/gens_menu.hpp \
	ui/win32/controller_config/cc_window.h \
	ui/win32/bios_misc_files/bmf_window.hpp \
	ui/win32/directory_config/dir_window.hpp \
	ui/win32/general_options/genopt_window.hpp \
	ui/win32/color_adjust/ca_window.h \
	ui/win32/country_code/ccode_window.h \
	ui/win32/zip_select/zipsel_dialog.h \
	ui/win32/plugin_manager/pmgr_window.cpp \
	ui/win32/about/about_window.hpp \
	ui/win32/select_cdrom/selcd_window.hpp \
	emulator/g_main_haiku.hpp video/vdraw_haiku_t.h \
	input/input_haiku.hpp input/input_haiku_t.h \
	audio/audio_haiku.h ui/haiku/gens/gens_window.h \
	ui/haiku/gens/gens_window_callbacks.hpp \
	ui/haiku/gens/gens_window_sync.hpp ui/haiku/gens/gens_menu.hpp \
	ui/haiku/controller_config/cc_window.h \
	ui/haiku/bios_misc_files/bmf_window.hpp \
	ui/haiku/directory_config/dir_window.hpp \
	ui/haiku/general_options/genopt_window.hpp \
	ui/haiku/color_adjust/ca_window.h \
	ui/haiku/country_code/ccode_window.h \
	ui/haiku/zip_select/zipsel_dialog.h \
	ui/haiku/plugin_manager/pmgr_window.hpp \
	ui/haiku/about/about_window.hpp
HEADERS = $(noinst_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = aclocal-1.14
ALLOCA = 
AMTAR = $${TAR-tar}
AM_CFLAGS =  -Wall -Wextra -O0 -ggdb 
AM_CPPFLAGS = 
AM_CXXFLAGS =  -Wall -Wextra -O0 -ggdb  -fvisibility-inlines-hidden
AM_DEFAULT_VERBOSITY = 1
AM_LDFLAGS =  -Wl,--as-needed -Wl,--hash-style=both  
AR = ar
AUTOCONF = autoconf
AUTOHEADER = autoheader
AUTOMAKE = automake-1.14
AWK = mawk
CC = gcc -std=gnu99
CCAS = gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -g -O2
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GETTIMEFLAG = 
GL_LIBS = -lGL -ldl -lX11
GREP = /bin/grep
GTK_CFLAGS = -pthread -I/usr/include/gtk-2.0 -I/usr/lib/i386-linux-gnu/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/pango-1.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/freetype2 -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/libpng12 -I/usr/include/harfbuzz   -DGSEAL_ENABLE
GTK_LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo -lpango-1.0 -lfontconfig -lgobject-2.0 -lglib-2.0 -lfreetype  
ICONV_LIBS = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NASM = /usr/bin/nasm -O99 -f elf -D __GCC2 -g -F dwarf -I$(top_srcdir)/src/ -w-orphan-labels $(NASM_INCLUDES)
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = gens
PACKAGE_BUGREPORT = gerbilsoft@verizon.net
PACKAGE_NAME = gens
PACKAGE_STRING = gens 2.16.7
PACKAGE_TARNAME = gens
PACKAGE_URL = 
PACKAGE_VERSION = 2.16.7
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PNG_LIBS = -lpng
RANLIB = ranlib
RC = 
RT_LIBS = -lrt
SDL2_CONFIG = /usr/bin/sdl2-i386-config
SDL_CFLAGS = -I/usr/include/SDL2-i386 -D_GNU_SOURCE=1 -D_REENTRANT
SDL_LIBS = -L/usr/lib/i386-linux-gnu -lSDL2-i386 -lpthread
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 2.16.7
X11_CFLAGS =  
X11_LIBS = -lX11  
XMKMF = 
YASM = 
abs_builddir = /home/yo/gens-gs/src/gens
abs_srcdir = /home/yo/gens-gs/src/gens
abs_top_builddir = /home/yo/gens-gs
abs_top_srcdir = /home/yo/gens-gs
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/yo/gens-gs/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
AUTOMAKE_OPTIONS = subdir-objects
SUBDIRS = plugins fw
#gens_x86_asm_o = 
gens_x86_asm_o = 
#gens_x86_asm_src = 
gens_x86_asm_src = \
		gens_core/gfx/fastblur_16_x86.S \
		gens_core/gfx/fastblur_32_x86.S \
		audio/audio_mmx.S

#gens_x86_asm_h = 
gens_x86_asm_h = \
		gens_core/gfx/fastblur_x86.h \
		audio/audio_mmx.h

ASMFILES = $(gens_x86_asm_o) gens_core/gfx/gfx_cd.o \
	gens_core/mem/mem_m68k.o gens_core/mem/mem_m68k_cd.o \
	gens_core/mem/mem_m68k_32x.o gens_core/mem/mem_s68k.o \
	gens_core/mem/mem_sh2.o gens_core/misc/misc.o \
	gens_core/cpu/sh2/sh2a.o gens_core/cpu/sh2/sh2_io.o \
	gens_core/vdp/vdp_32x_x86.o gens_core/vdp/vdp_io_x86.o \
	gens_core/vdp/vdp_rend_x86.o $(am__append_5)
NASM_INCLUDES = \
-I./gens_core/ -I./gens_core/io/ -I./gens_core/misc/ \
-I./gens_core/vdp/ -I./gens_core/sound/ -I./gens_core/gfx/ \
-I./gens_core/cpu/sh2/ -I./gens_core/cpu/z80/ -I./gens_core/mem/

INCLUDES = -I./ -I../../src/ -I../../src/extlib/ \
	-I./ui/ $(am__append_1) $(am__append_2) \
	$(am__append_28) $(am__append_48) $(am__append_55)
gens_CCASFLAGS = $(INCLUDES)
gens_SOURCES = emulator/gens.cpp emulator/g_main.cpp emulator/g_md.cpp \
	emulator/g_mcd.cpp emulator/g_32x.cpp emulator/md_palette.cpp \
	emulator/g_update.cpp emulator/parse.cpp emulator/options.cpp \
	gens_core/nasmhead.inc gens_core/cpu/68k/cpu_68k.c \
	gens_core/cpu/sh2/cpu_sh2.c gens_core/cpu/sh2/sh2a.asm \
	gens_core/cpu/sh2/sh2_io.asm gens_core/cpu/sh2/sh2.c \
	gens_core/cpu/z80/cpu_z80.c gens_core/sound/pcm.c \
	gens_core/sound/psg.c gens_core/sound/ym2612.cpp \
	gens_core/sound/pwm.c gens_core/mem/mem_m68k.asm \
	gens_core/mem/mem_m68k_cd.asm gens_core/mem/mem_m68k_32x.asm \
	gens_core/mem/mem_s68k.asm gens_core/mem/mem_sh2.asm \
	gens_core/mem/mem_z80.c gens_core/misc/misc.asm \
	gens_core/gfx/fastblur.cpp gens_core/misc/cpuflags.c \
	$(gens_x86_asm_src) gens_core/gfx/gfx_cd.asm gens_core/io/io.c \
	gens_core/io/io_teamplayer.c gens_core/vdp/vdp_io_x86.asm \
	gens_core/vdp/vdp_io.c gens_core/vdp/vdp_rend_x86.asm \
	gens_core/vdp/vdp_rend.cpp gens_core/vdp/vdp_32x_x86.asm \
	gens_core/vdp/vdp_32x.c gens_core/vdp/vdp_32x_32bit.c \
	macros/log_msg.c port/ini.cpp segacd/cd_file.c \
	segacd/cd_sys.cpp segacd/lc89510.c ui/gens_ui.cpp \
	ui/common/gens/gens_menu.c \
	ui/common/gens/gens_menu_callbacks.cpp \
	ui/common/gens/gens_window_sync.c \
	ui/common/about_window_data.c ui/common/dir_window_common.c \
	ui/common/pmgr_window_common.cpp ui/common/bmf_window_common.c \
	util/file/config_file.cpp util/file/rom.cpp util/file/save.cpp \
	util/file/file.cpp util/file/decompressor/decompressor.c \
	util/file/decompressor/dummy.c \
	util/file/decompressor/md_rar.cpp \
	util/file/decompressor/md_rar_t.c util/gfx/imageutil.cpp \
	util/sound/gym.cpp util/sound/wave.c video/C64_charset.c \
	video/osd_charset.cpp video/vdraw.c video/vdraw_cpp.cpp \
	video/vdraw_text.cpp video/v_effects.cpp video/vdraw_RGB.c \
	input/input.c input/input_update.c audio/audio.c \
	plugins/pluginmgr.cpp plugins/rendermgr.cpp \
	plugins/mdp_host_gens.c plugins/mdp_host_gens_cpp.cpp \
	plugins/mdp_host_gens_menu.cpp plugins/mdp_host_gens_event.cpp \
	plugins/mdp_host_gens_mem.c plugins/mdp_host_gens_emuctrl.cpp \
	plugins/mdp_host_gens_z.c plugins/mdp_host_gens_config.cpp \
	plugins/mdp_host_gens_dir.cpp plugins/reg/reg_get.c \
	plugins/reg/reg_set.c plugins/reg/reg_get_all.c \
	plugins/reg/reg_set_all.c plugins/eventmgr.cpp \
	plugins/mdp_incompat.cpp $(am__append_3) $(am__append_4) \
	$(am__append_6) $(am__append_7) $(am__append_8) \
	$(am__append_29) $(am__append_30) $(am__append_31) \
	$(am__append_32) $(am__append_33) $(am__append_34) \
	$(am__append_35) $(am__append_49) $(am__append_50) \
	$(am__append_56)
noinst_HEADERS = emulator/gens.hpp emulator/g_main.hpp \
	emulator/g_md.hpp emulator/g_mcd.hpp emulator/g_32x.hpp \
	emulator/md_palette.hpp emulator/g_update.hpp \
	emulator/parse.hpp emulator/options.hpp \
	gens_core/cpu/68k/cpu_68k.h gens_core/cpu/68k/star_68k.h \
	gens_core/cpu/sh2/sh2.h gens_core/cpu/sh2/cpu_sh2.h \
	gens_core/cpu/z80/cpu_z80.h gens_core/sound/pcm.h \
	gens_core/sound/psg.h gens_core/sound/ym2612.hpp \
	gens_core/sound/pwm.h gens_core/mem/mem_m68k.h \
	gens_core/mem/mem_m68k_cd.h gens_core/mem/mem_m68k_32x.h \
	gens_core/mem/mem_s68k.h gens_core/mem/mem_sh2.h \
	gens_core/mem/mem_z80.h gens_core/misc/misc.h \
	gens_core/gfx/fastblur.hpp gens_core/misc/cpuflags.h \
	$(gens_x86_asm_h) gens_core/gfx/gfx_cd.h gens_core/io/io.h \
	gens_core/io/io_teamplayer.h gens_core/vdp/vdp_io.h \
	gens_core/vdp/vdp_rend.h gens_core/vdp/vdp_32x.h \
	gens_core/vdp/vdp_32x_32bit.h macros/git.h macros/log_msg.h \
	port/ini.hpp segacd/cd_file.h segacd/cd_sys.hpp \
	segacd/lc89510.h ui/gens_ui.hpp ui/common/gens/gens_menu.h \
	ui/common/gens/gens_menu_callbacks.cpp \
	ui/common/gens/gens_window_sync.h \
	ui/common/about_window_data.h ui/common/dir_window_common.h \
	ui/common/pmgr_window_common.hpp ui/common/bmf_window_common.h \
	util/file/config_file.hpp util/file/rom.hpp util/file/save.hpp \
	util/file/file.hpp util/file/gsx_struct.h util/file/gsx_v6.h \
	util/file/gsx_v7.h util/file/decompressor/decompressor.h \
	util/file/decompressor/popen_wrapper.h \
	util/file/decompressor/dummy.h \
	util/file/decompressor/md_rar.hpp \
	util/file/decompressor/md_rar_t.h util/gfx/imageutil.hpp \
	util/sound/gym.hpp util/sound/wave.h video/C64_charset.h \
	video/osd_charset.hpp video/vdraw.h video/vdraw_cpp.hpp \
	video/vdraw_text.hpp video/v_effects.hpp video/vdraw_RGB.h \
	input/input.h input/input_update.h audio/audio.h \
	plugins/pluginmgr.hpp plugins/rendermgr.hpp \
	plugins/mdp_host_gens.h plugins/mdp_host_gens_cpp.hpp \
	plugins/mdp_host_gens_menu.hpp plugins/mdp_host_gens_event.hpp \
	plugins/mdp_host_gens_mem.h plugins/mdp_host_gens_emuctrl.hpp \
	plugins/mdp_host_gens_z.h plugins/mdp_host_gens_config.hpp \
	plugins/mdp_host_gens_dir.hpp plugins/reg/reg_get.h \
	plugins/reg/reg_set.h plugins/reg/reg_get_all.h \
	plugins/reg/reg_set_all.h plugins/eventmgr.hpp \
	plugins/mdp_incompat.hpp $(am__append_9) $(am__append_10) \
	$(am__append_11) $(am__append_12) $(am__append_13) \
	$(am__append_14) $(am__append_36) $(am__append_37) \
	$(am__append_38) $(am__append_39) $(am__append_40) \
	$(am__append_51) $(am__append_52) $(am__append_57)

# Statically-linked MDP plugins.
# TODO: Add built-in renderers automatically.
gens_mdp_static = \
		plugins/render/normal/libmdp_render_1x.la \
		plugins/render/double/libmdp_render_2x.la

gens_LDADD = ${ASMFILES} ${gens_mdp_static} \
	$(top_builddir)/src/starscream/libstarscream.la \
	$(top_builddir)/src/mdZ80/libmdZ80.la \
	$(top_builddir)/src/libgsft/libgsft.la fw/libgens_fw.la -lm \
	-lrt  -lpng $(am__append_15) \
	$(am__append_16) $(am__append_17) $(am__append_18) \
	$(am__append_19) $(am__append_20) $(am__append_21) \
	$(am__append_43) $(am__append_46) $(am__append_47) \
	$(am__append_53) $(am__append_58)
gens_DEPENDENCIES = ${ASMFILES} ${gens_mdp_static} \
	$(top_builddir)/src/starscream/libstarscream.la \
	$(top_builddir)/src/mdZ80/libmdZ80.la \
	$(top_builddir)/src/libgsft/libgsft.la fw/libgens_fw.la \
	$(am__append_22) $(am__append_23) $(am__append_24) \
	$(am__append_25) $(am__append_26) $(am__append_27) \
	$(am__append_54)
CLEANFILES = ${ASMFILES}

# Initialize CFLAGS, CXXFLAGS, and LDFLAGS.
gens_CFLAGS = $(AM_CFLAGS) $(am__append_41) $(am__append_44) \
	$(am__append_59)
gens_CXXFLAGS = $(AM_CXXFLAGS) $(am__append_42) $(am__append_45) \
	$(am__append_60)
gens_LDFLAGS = $(AM_LDFLAGS)
all: all-recursive

.SUFFIXES:
.SUFFIXES: .S .c .cpp .lo .o .obj .rc
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/Makefile.unix.inc.am $(srcdir)/Makefile.win32.inc.am $(srcdir)/Makefile.haiku.inc.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/gens/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/gens/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/Makefile.unix.inc.am $(srcdir)/Makefile.win32.inc.am $(srcdir)/Makefile.haiku.inc.am:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
emulator/$(am__dirstamp):
	@$(MKDIR_P) emulator
	@: > emulator/$(am__dirstamp)
emulator/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) emulator/$(DEPDIR)
	@: > emulator/$(DEPDIR)/$(am__dirstamp)
emulator/gens-gens.$(OBJEXT): emulator/$(am__dirstamp) \
	emulator/$(DEPDIR)/$(am__dirstamp)
emulator/gens-g_main.$(OBJEXT): emulator/$(am__dirstamp) \
	emulator/$(DEPDIR)/$(am__dirstamp)
emulator/gens-g_md.$(OBJEXT): emulator/$(am__dirstamp) \
	emulator/$(DEPDIR)/$(am__dirstamp)
emulator/gens-g_mcd.$(OBJEXT): emulator/$(am__dirstamp) \
	emulator/$(DEPDIR)/$(am__dirstamp)
emulator/gens-g_32x.$(OBJEXT): emulator/$(am__dirstamp) \
	emulator/$(DEPDIR)/$(am__dirstamp)
emulator/gens-md_palette.$(OBJEXT): emulator/$(am__dirstamp) \
	emulator/$(DEPDIR)/$(am__dirstamp)
emulator/gens-g_update.$(OBJEXT): emulator/$(am__dirstamp) \
	emulator/$(DEPDIR)/$(am__dirstamp)
emulator/gens-parse.$(OBJEXT): emulator/$(am__dirstamp) \
	emulator/$(DEPDIR)/$(am__dirstamp)
emulator/gens-options.$(OBJEXT): emulator/$(am__dirstamp) \
	emulator/$(DEPDIR)/$(am__dirstamp)
gens_core/cpu/68k/$(am__dirstamp):
	@$(MKDIR_P) gens_core/cpu/68k
	@: > gens_core/cpu/68k/$(am__dirstamp)
gens_core/cpu/68k/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) gens_core/cpu/68k/$(DEPDIR)
	@: > gens_core/cpu/68k/$(DEPDIR)/$(am__dirstamp)
gens_core/cpu/68k/gens-cpu_68k.$(OBJEXT):  \
	gens_core/cpu/68k/$(am__dirstamp) \
	gens_core/cpu/68k/$(DEPDIR)/$(am__dirstamp)
gens_core/cpu/sh2/$(am__dirstamp):
	@$(MKDIR_P) gens_core/cpu/sh2
	@: > gens_core/cpu/sh2/$(am__dirstamp)
gens_core/cpu/sh2/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) gens_core/cpu/sh2/$(DEPDIR)
	@: > gens_core/cpu/sh2/$(DEPDIR)/$(am__dirstamp)
gens_core/cpu/sh2/gens-cpu_sh2.$(OBJEXT):  \
	gens_core/cpu/sh2/$(am__dirstamp) \
	gens_core/cpu/sh2/$(DEPDIR)/$(am__dirstamp)
gens_core/cpu/sh2/gens-sh2.$(OBJEXT):  \
	gens_core/cpu/sh2/$(am__dirstamp) \
	gens_core/cpu/sh2/$(DEPDIR)/$(am__dirstamp)
gens_core/cpu/z80/$(am__dirstamp):
	@$(MKDIR_P) gens_core/cpu/z80
	@: > gens_core/cpu/z80/$(am__dirstamp)
gens_core/cpu/z80/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) gens_core/cpu/z80/$(DEPDIR)
	@: > gens_core/cpu/z80/$(DEPDIR)/$(am__dirstamp)
gens_core/cpu/z80/gens-cpu_z80.$(OBJEXT):  \
	gens_core/cpu/z80/$(am__dirstamp) \
	gens_core/cpu/z80/$(DEPDIR)/$(am__dirstamp)
gens_core/sound/$(am__dirstamp):
	@$(MKDIR_P) gens_core/sound
	@: > gens_core/sound/$(am__dirstamp)
gens_core/sound/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) gens_core/sound/$(DEPDIR)
	@: > gens_core/sound/$(DEPDIR)/$(am__dirstamp)
gens_core/sound/gens-pcm.$(OBJEXT): gens_core/sound/$(am__dirstamp) \
	gens_core/sound/$(DEPDIR)/$(am__dirstamp)
gens_core/sound/gens-psg.$(OBJEXT): gens_core/sound/$(am__dirstamp) \
	gens_core/sound/$(DEPDIR)/$(am__dirstamp)
gens_core/sound/gens-ym2612.$(OBJEXT):  \
	gens_core/sound/$(am__dirstamp) \
	gens_core/sound/$(DEPDIR)/$(am__dirstamp)
gens_core/sound/gens-pwm.$(OBJEXT): gens_core/sound/$(am__dirstamp) \
	gens_core/sound/$(DEPDIR)/$(am__dirstamp)
gens_core/mem/$(am__dirstamp):
	@$(MKDIR_P) gens_core/mem
	@: > gens_core/mem/$(am__dirstamp)
gens_core/mem/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) gens_core/mem/$(DEPDIR)
	@: > gens_core/mem/$(DEPDIR)/$(am__dirstamp)
gens_core/mem/gens-mem_z80.$(OBJEXT): gens_core/mem/$(am__dirstamp) \
	gens_core/mem/$(DEPDIR)/$(am__dirstamp)
gens_core/gfx/$(am__dirstamp):
	@$(MKDIR_P) gens_core/gfx
	@: > gens_core/gfx/$(am__dirstamp)
gens_core/gfx/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) gens_core/gfx/$(DEPDIR)
	@: > gens_core/gfx/$(DEPDIR)/$(am__dirstamp)
gens_core/gfx/gens-fastblur.$(OBJEXT): gens_core/gfx/$(am__dirstamp) \
	gens_core/gfx/$(DEPDIR)/$(am__dirstamp)
gens_core/misc/$(am__dirstamp):
	@$(MKDIR_P) gens_core/misc
	@: > gens_core/misc/$(am__dirstamp)
gens_core/misc/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) gens_core/misc/$(DEPDIR)
	@: > gens_core/misc/$(DEPDIR)/$(am__dirstamp)
gens_core/misc/gens-cpuflags.$(OBJEXT):  \
	gens_core/misc/$(am__dirstamp) \
	gens_core/misc/$(DEPDIR)/$(am__dirstamp)
gens_core/gfx/gens-fastblur_16_x86.$(OBJEXT):  \
	gens_core/gfx/$(am__dirstamp) \
	gens_core/gfx/$(DEPDIR)/$(am__dirstamp)
gens_core/gfx/gens-fastblur_32_x86.$(OBJEXT):  \
	gens_core/gfx/$(am__dirstamp) \
	gens_core/gfx/$(DEPDIR)/$(am__dirstamp)
audio/$(am__dirstamp):
	@$(MKDIR_P) audio
	@: > audio/$(am__dirstamp)
audio/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) audio/$(DEPDIR)
	@: > audio/$(DEPDIR)/$(am__dirstamp)
audio/gens-audio_mmx.$(OBJEXT): audio/$(am__dirstamp) \
	audio/$(DEPDIR)/$(am__dirstamp)
gens_core/io/$(am__dirstamp):
	@$(MKDIR_P) gens_core/io
	@: > gens_core/io/$(am__dirstamp)
gens_core/io/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) gens_core/io/$(DEPDIR)
	@: > gens_core/io/$(DEPDIR)/$(am__dirstamp)
gens_core/io/gens-io.$(OBJEXT): gens_core/io/$(am__dirstamp) \
	gens_core/io/$(DEPDIR)/$(am__dirstamp)
gens_core/io/gens-io_teamplayer.$(OBJEXT):  \
	gens_core/io/$(am__dirstamp) \
	gens_core/io/$(DEPDIR)/$(am__dirstamp)
gens_core/vdp/$(am__dirstamp):
	@$(MKDIR_P) gens_core/vdp
	@: > gens_core/vdp/$(am__dirstamp)
gens_core/vdp/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) gens_core/vdp/$(DEPDIR)
	@: > gens_core/vdp/$(DEPDIR)/$(am__dirstamp)
gens_core/vdp/gens-vdp_io.$(OBJEXT): gens_core/vdp/$(am__dirstamp) \
	gens_core/vdp/$(DEPDIR)/$(am__dirstamp)
gens_core/vdp/gens-vdp_rend.$(OBJEXT): gens_core/vdp/$(am__dirstamp) \
	gens_core/vdp/$(DEPDIR)/$(am__dirstamp)
gens_core/vdp/gens-vdp_32x.$(OBJEXT): gens_core/vdp/$(am__dirstamp) \
	gens_core/vdp/$(DEPDIR)/$(am__dirstamp)
gens_core/vdp/gens-vdp_32x_32bit.$(OBJEXT):  \
	gens_core/vdp/$(am__dirstamp) \
	gens_core/vdp/$(DEPDIR)/$(am__dirstamp)
macros/$(am__dirstamp):
	@$(MKDIR_P) macros
	@: > macros/$(am__dirstamp)
macros/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) macros/$(DEPDIR)
	@: > macros/$(DEPDIR)/$(am__dirstamp)
macros/gens-log_msg.$(OBJEXT): macros/$(am__dirstamp) \
	macros/$(DEPDIR)/$(am__dirstamp)
port/$(am__dirstamp):
	@$(MKDIR_P) port
	@: > port/$(am__dirstamp)
port/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) port/$(DEPDIR)
	@: > port/$(DEPDIR)/$(am__dirstamp)
port/gens-ini.$(OBJEXT): port/$(am__dirstamp) \
	port/$(DEPDIR)/$(am__dirstamp)
segacd/$(am__dirstamp):
	@$(MKDIR_P) segacd
	@: > segacd/$(am__dirstamp)
segacd/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) segacd/$(DEPDIR)
	@: > segacd/$(DEPDIR)/$(am__dirstamp)
segacd/gens-cd_file.$(OBJEXT): segacd/$(am__dirstamp) \
	segacd/$(DEPDIR)/$(am__dirstamp)
segacd/gens-cd_sys.$(OBJEXT): segacd/$(am__dirstamp) \
	segacd/$(DEPDIR)/$(am__dirstamp)
segacd/gens-lc89510.$(OBJEXT): segacd/$(am__dirstamp) \
	segacd/$(DEPDIR)/$(am__dirstamp)
ui/$(am__dirstamp):
	@$(MKDIR_P) ui
	@: > ui/$(am__dirstamp)
ui/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/$(DEPDIR)
	@: > ui/$(DEPDIR)/$(am__dirstamp)
ui/gens-gens_ui.$(OBJEXT): ui/$(am__dirstamp) \
	ui/$(DEPDIR)/$(am__dirstamp)
ui/common/gens/$(am__dirstamp):
	@$(MKDIR_P) ui/common/gens
	@: > ui/common/gens/$(am__dirstamp)
ui/common/gens/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/common/gens/$(DEPDIR)
	@: > ui/common/gens/$(DEPDIR)/$(am__dirstamp)
ui/common/gens/gens-gens_menu.$(OBJEXT):  \
	ui/common/gens/$(am__dirstamp) \
	ui/common/gens/$(DEPDIR)/$(am__dirstamp)
ui/common/gens/gens-gens_menu_callbacks.$(OBJEXT):  \
	ui/common/gens/$(am__dirstamp) \
	ui/common/gens/$(DEPDIR)/$(am__dirstamp)
ui/common/gens/gens-gens_window_sync.$(OBJEXT):  \
	ui/common/gens/$(am__dirstamp) \
	ui/common/gens/$(DEPDIR)/$(am__dirstamp)
ui/common/$(am__dirstamp):
	@$(MKDIR_P) ui/common
	@: > ui/common/$(am__dirstamp)
ui/common/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/common/$(DEPDIR)
	@: > ui/common/$(DEPDIR)/$(am__dirstamp)
ui/common/gens-about_window_data.$(OBJEXT): ui/common/$(am__dirstamp) \
	ui/common/$(DEPDIR)/$(am__dirstamp)
ui/common/gens-dir_window_common.$(OBJEXT): ui/common/$(am__dirstamp) \
	ui/common/$(DEPDIR)/$(am__dirstamp)
ui/common/gens-pmgr_window_common.$(OBJEXT):  \
	ui/common/$(am__dirstamp) ui/common/$(DEPDIR)/$(am__dirstamp)
ui/common/gens-bmf_window_common.$(OBJEXT): ui/common/$(am__dirstamp) \
	ui/common/$(DEPDIR)/$(am__dirstamp)
util/file/$(am__dirstamp):
	@$(MKDIR_P) util/file
	@: > util/file/$(am__dirstamp)
util/file/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) util/file/$(DEPDIR)
	@: > util/file/$(DEPDIR)/$(am__dirstamp)
util/file/gens-config_file.$(OBJEXT): util/file/$(am__dirstamp) \
	util/file/$(DEPDIR)/$(am__dirstamp)
util/file/gens-rom.$(OBJEXT): util/file/$(am__dirstamp) \
	util/file/$(DEPDIR)/$(am__dirstamp)
util/file/gens-save.$(OBJEXT): util/file/$(am__dirstamp) \
	util/file/$(DEPDIR)/$(am__dirstamp)
util/file/gens-file.$(OBJEXT): util/file/$(am__dirstamp) \
	util/file/$(DEPDIR)/$(am__dirstamp)
util/file/decompressor/$(am__dirstamp):
	@$(MKDIR_P) util/file/decompressor
	@: > util/file/decompressor/$(am__dirstamp)
util/file/decompressor/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) util/file/decompressor/$(DEPDIR)
	@: > util/file/decompressor/$(DEPDIR)/$(am__dirstamp)
util/file/decompressor/gens-decompressor.$(OBJEXT):  \
	util/file/decompressor/$(am__dirstamp) \
	util/file/decompressor/$(DEPDIR)/$(am__dirstamp)
util/file/decompressor/gens-dummy.$(OBJEXT):  \
	util/file/decompressor/$(am__dirstamp) \
	util/file/decompressor/$(DEPDIR)/$(am__dirstamp)
util/file/decompressor/gens-md_rar.$(OBJEXT):  \
	util/file/decompressor/$(am__dirstamp) \
	util/file/decompressor/$(DEPDIR)/$(am__dirstamp)
util/file/decompressor/gens-md_rar_t.$(OBJEXT):  \
	util/file/decompressor/$(am__dirstamp) \
	util/file/decompressor/$(DEPDIR)/$(am__dirstamp)
util/gfx/$(am__dirstamp):
	@$(MKDIR_P) util/gfx
	@: > util/gfx/$(am__dirstamp)
util/gfx/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) util/gfx/$(DEPDIR)
	@: > util/gfx/$(DEPDIR)/$(am__dirstamp)
util/gfx/gens-imageutil.$(OBJEXT): util/gfx/$(am__dirstamp) \
	util/gfx/$(DEPDIR)/$(am__dirstamp)
util/sound/$(am__dirstamp):
	@$(MKDIR_P) util/sound
	@: > util/sound/$(am__dirstamp)
util/sound/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) util/sound/$(DEPDIR)
	@: > util/sound/$(DEPDIR)/$(am__dirstamp)
util/sound/gens-gym.$(OBJEXT): util/sound/$(am__dirstamp) \
	util/sound/$(DEPDIR)/$(am__dirstamp)
util/sound/gens-wave.$(OBJEXT): util/sound/$(am__dirstamp) \
	util/sound/$(DEPDIR)/$(am__dirstamp)
video/$(am__dirstamp):
	@$(MKDIR_P) video
	@: > video/$(am__dirstamp)
video/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) video/$(DEPDIR)
	@: > video/$(DEPDIR)/$(am__dirstamp)
video/gens-C64_charset.$(OBJEXT): video/$(am__dirstamp) \
	video/$(DEPDIR)/$(am__dirstamp)
video/gens-osd_charset.$(OBJEXT): video/$(am__dirstamp) \
	video/$(DEPDIR)/$(am__dirstamp)
video/gens-vdraw.$(OBJEXT): video/$(am__dirstamp) \
	video/$(DEPDIR)/$(am__dirstamp)
video/gens-vdraw_cpp.$(OBJEXT): video/$(am__dirstamp) \
	video/$(DEPDIR)/$(am__dirstamp)
video/gens-vdraw_text.$(OBJEXT): video/$(am__dirstamp) \
	video/$(DEPDIR)/$(am__dirstamp)
video/gens-v_effects.$(OBJEXT): video/$(am__dirstamp) \
	video/$(DEPDIR)/$(am__dirstamp)
video/gens-vdraw_RGB.$(OBJEXT): video/$(am__dirstamp) \
	video/$(DEPDIR)/$(am__dirstamp)
input/$(am__dirstamp):
	@$(MKDIR_P) input
	@: > input/$(am__dirstamp)
input/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) input/$(DEPDIR)
	@: > input/$(DEPDIR)/$(am__dirstamp)
input/gens-input.$(OBJEXT): input/$(am__dirstamp) \
	input/$(DEPDIR)/$(am__dirstamp)
input/gens-input_update.$(OBJEXT): input/$(am__dirstamp) \
	input/$(DEPDIR)/$(am__dirstamp)
audio/gens-audio.$(OBJEXT): audio/$(am__dirstamp) \
	audio/$(DEPDIR)/$(am__dirstamp)
plugins/$(am__dirstamp):
	@$(MKDIR_P) plugins
	@: > plugins/$(am__dirstamp)
plugins/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) plugins/$(DEPDIR)
	@: > plugins/$(DEPDIR)/$(am__dirstamp)
plugins/gens-pluginmgr.$(OBJEXT): plugins/$(am__dirstamp) \
	plugins/$(DEPDIR)/$(am__dirstamp)
plugins/gens-rendermgr.$(OBJEXT): plugins/$(am__dirstamp) \
	plugins/$(DEPDIR)/$(am__dirstamp)
plugins/gens-mdp_host_gens.$(OBJEXT): plugins/$(am__dirstamp) \
	plugins/$(DEPDIR)/$(am__dirstamp)
plugins/gens-mdp_host_gens_cpp.$(OBJEXT): plugins/$(am__dirstamp) \
	plugins/$(DEPDIR)/$(am__dirstamp)
plugins/gens-mdp_host_gens_menu.$(OBJEXT): plugins/$(am__dirstamp) \
	plugins/$(DEPDIR)/$(am__dirstamp)
plugins/gens-mdp_host_gens_event.$(OBJEXT): plugins/$(am__dirstamp) \
	plugins/$(DEPDIR)/$(am__dirstamp)
plugins/gens-mdp_host_gens_mem.$(OBJEXT): plugins/$(am__dirstamp) \
	plugins/$(DEPDIR)/$(am__dirstamp)
plugins/gens-mdp_host_gens_emuctrl.$(OBJEXT): plugins/$(am__dirstamp) \
	plugins/$(DEPDIR)/$(am__dirstamp)
plugins/gens-mdp_host_gens_z.$(OBJEXT): plugins/$(am__dirstamp) \
	plugins/$(DEPDIR)/$(am__dirstamp)
plugins/gens-mdp_host_gens_config.$(OBJEXT): plugins/$(am__dirstamp) \
	plugins/$(DEPDIR)/$(am__dirstamp)
plugins/gens-mdp_host_gens_dir.$(OBJEXT): plugins/$(am__dirstamp) \
	plugins/$(DEPDIR)/$(am__dirstamp)
plugins/reg/$(am__dirstamp):
	@$(MKDIR_P) plugins/reg
	@: > plugins/reg/$(am__dirstamp)
plugins/reg/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) plugins/reg/$(DEPDIR)
	@: > plugins/reg/$(DEPDIR)/$(am__dirstamp)
plugins/reg/gens-reg_get.$(OBJEXT): plugins/reg/$(am__dirstamp) \
	plugins/reg/$(DEPDIR)/$(am__dirstamp)
plugins/reg/gens-reg_set.$(OBJEXT): plugins/reg/$(am__dirstamp) \
	plugins/reg/$(DEPDIR)/$(am__dirstamp)
plugins/reg/gens-reg_get_all.$(OBJEXT): plugins/reg/$(am__dirstamp) \
	plugins/reg/$(DEPDIR)/$(am__dirstamp)
plugins/reg/gens-reg_set_all.$(OBJEXT): plugins/reg/$(am__dirstamp) \
	plugins/reg/$(DEPDIR)/$(am__dirstamp)
plugins/gens-eventmgr.$(OBJEXT): plugins/$(am__dirstamp) \
	plugins/$(DEPDIR)/$(am__dirstamp)
plugins/gens-mdp_incompat.$(OBJEXT): plugins/$(am__dirstamp) \
	plugins/$(DEPDIR)/$(am__dirstamp)
emulator/gens-sighandler.$(OBJEXT): emulator/$(am__dirstamp) \
	emulator/$(DEPDIR)/$(am__dirstamp)
debugger/$(am__dirstamp):
	@$(MKDIR_P) debugger
	@: > debugger/$(am__dirstamp)
debugger/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) debugger/$(DEPDIR)
	@: > debugger/$(DEPDIR)/$(am__dirstamp)
debugger/gens-debugger.$(OBJEXT): debugger/$(am__dirstamp) \
	debugger/$(DEPDIR)/$(am__dirstamp)
debugger/gens-m68kd.$(OBJEXT): debugger/$(am__dirstamp) \
	debugger/$(DEPDIR)/$(am__dirstamp)
debugger/gens-sh2d.$(OBJEXT): debugger/$(am__dirstamp) \
	debugger/$(DEPDIR)/$(am__dirstamp)
debugger/gens-z80dis.$(OBJEXT): debugger/$(am__dirstamp) \
	debugger/$(DEPDIR)/$(am__dirstamp)
segacd/gens-cdda_mp3.$(OBJEXT): segacd/$(am__dirstamp) \
	segacd/$(DEPDIR)/$(am__dirstamp)
util/file/decompressor/gens-md_gzip.$(OBJEXT):  \
	util/file/decompressor/$(am__dirstamp) \
	util/file/decompressor/$(DEPDIR)/$(am__dirstamp)
util/file/decompressor/gens-md_zip.$(OBJEXT):  \
	util/file/decompressor/$(am__dirstamp) \
	util/file/decompressor/$(DEPDIR)/$(am__dirstamp)
util/file/decompressor/gens-md_7z.$(OBJEXT):  \
	util/file/decompressor/$(am__dirstamp) \
	util/file/decompressor/$(DEPDIR)/$(am__dirstamp)
emulator/gens-g_main_unix.$(OBJEXT): emulator/$(am__dirstamp) \
	emulator/$(DEPDIR)/$(am__dirstamp)
port/gens-ini_old.$(OBJEXT): port/$(am__dirstamp) \
	port/$(DEPDIR)/$(am__dirstamp)
port/gens-timer.$(OBJEXT): port/$(am__dirstamp) \
	port/$(DEPDIR)/$(am__dirstamp)
charset/$(am__dirstamp):
	@$(MKDIR_P) charset
	@: > charset/$(am__dirstamp)
charset/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) charset/$(DEPDIR)
	@: > charset/$(DEPDIR)/$(am__dirstamp)
charset/gens-iconv_string.$(OBJEXT): charset/$(am__dirstamp) \
	charset/$(DEPDIR)/$(am__dirstamp)
video/gens-vdraw_sdl_common.$(OBJEXT): video/$(am__dirstamp) \
	video/$(DEPDIR)/$(am__dirstamp)
video/gens-vdraw_sdl.$(OBJEXT): video/$(am__dirstamp) \
	video/$(DEPDIR)/$(am__dirstamp)
input/gens-input_sdl.$(OBJEXT): input/$(am__dirstamp) \
	input/$(DEPDIR)/$(am__dirstamp)
input/gens-input_sdl_events.$(OBJEXT): input/$(am__dirstamp) \
	input/$(DEPDIR)/$(am__dirstamp)
input/gens-input_sdl_key_names.$(OBJEXT): input/$(am__dirstamp) \
	input/$(DEPDIR)/$(am__dirstamp)
audio/gens-audio_sdl.$(OBJEXT): audio/$(am__dirstamp) \
	audio/$(DEPDIR)/$(am__dirstamp)
segacd/gens-cd_aspi_linux.$(OBJEXT): segacd/$(am__dirstamp) \
	segacd/$(DEPDIR)/$(am__dirstamp)
ui/gtk/$(am__dirstamp):
	@$(MKDIR_P) ui/gtk
	@: > ui/gtk/$(am__dirstamp)
ui/gtk/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/gtk/$(DEPDIR)
	@: > ui/gtk/$(DEPDIR)/$(am__dirstamp)
ui/gtk/gens-gens_ui_gtk.$(OBJEXT): ui/gtk/$(am__dirstamp) \
	ui/gtk/$(DEPDIR)/$(am__dirstamp)
ui/gtk/gens-gtk-misc.$(OBJEXT): ui/gtk/$(am__dirstamp) \
	ui/gtk/$(DEPDIR)/$(am__dirstamp)
ui/gtk/gens-gtk-uri.$(OBJEXT): ui/gtk/$(am__dirstamp) \
	ui/gtk/$(DEPDIR)/$(am__dirstamp)
ui/gtk/gens/$(am__dirstamp):
	@$(MKDIR_P) ui/gtk/gens
	@: > ui/gtk/gens/$(am__dirstamp)
ui/gtk/gens/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/gtk/gens/$(DEPDIR)
	@: > ui/gtk/gens/$(DEPDIR)/$(am__dirstamp)
ui/gtk/gens/gens-gens_window.$(OBJEXT): ui/gtk/gens/$(am__dirstamp) \
	ui/gtk/gens/$(DEPDIR)/$(am__dirstamp)
ui/gtk/gens/gens-gens_window_callbacks.$(OBJEXT):  \
	ui/gtk/gens/$(am__dirstamp) \
	ui/gtk/gens/$(DEPDIR)/$(am__dirstamp)
ui/gtk/gens/gens-gens_window_sync.$(OBJEXT):  \
	ui/gtk/gens/$(am__dirstamp) \
	ui/gtk/gens/$(DEPDIR)/$(am__dirstamp)
ui/gtk/gens/gens-gens_menu.$(OBJEXT): ui/gtk/gens/$(am__dirstamp) \
	ui/gtk/gens/$(DEPDIR)/$(am__dirstamp)
ui/gtk/controller_config/$(am__dirstamp):
	@$(MKDIR_P) ui/gtk/controller_config
	@: > ui/gtk/controller_config/$(am__dirstamp)
ui/gtk/controller_config/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/gtk/controller_config/$(DEPDIR)
	@: > ui/gtk/controller_config/$(DEPDIR)/$(am__dirstamp)
ui/gtk/controller_config/gens-cc_window.$(OBJEXT):  \
	ui/gtk/controller_config/$(am__dirstamp) \
	ui/gtk/controller_config/$(DEPDIR)/$(am__dirstamp)
ui/gtk/bios_misc_files/$(am__dirstamp):
	@$(MKDIR_P) ui/gtk/bios_misc_files
	@: > ui/gtk/bios_misc_files/$(am__dirstamp)
ui/gtk/bios_misc_files/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/gtk/bios_misc_files/$(DEPDIR)
	@: > ui/gtk/bios_misc_files/$(DEPDIR)/$(am__dirstamp)
ui/gtk/bios_misc_files/gens-bmf_window.$(OBJEXT):  \
	ui/gtk/bios_misc_files/$(am__dirstamp) \
	ui/gtk/bios_misc_files/$(DEPDIR)/$(am__dirstamp)
ui/gtk/directory_config/$(am__dirstamp):
	@$(MKDIR_P) ui/gtk/directory_config
	@: > ui/gtk/directory_config/$(am__dirstamp)
ui/gtk/directory_config/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/gtk/directory_config/$(DEPDIR)
	@: > ui/gtk/directory_config/$(DEPDIR)/$(am__dirstamp)
ui/gtk/directory_config/gens-dir_window.$(OBJEXT):  \
	ui/gtk/directory_config/$(am__dirstamp) \
	ui/gtk/directory_config/$(DEPDIR)/$(am__dirstamp)
ui/gtk/general_options/$(am__dirstamp):
	@$(MKDIR_P) ui/gtk/general_options
	@: > ui/gtk/general_options/$(am__dirstamp)
ui/gtk/general_options/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/gtk/general_options/$(DEPDIR)
	@: > ui/gtk/general_options/$(DEPDIR)/$(am__dirstamp)
ui/gtk/general_options/gens-genopt_window.$(OBJEXT):  \
	ui/gtk/general_options/$(am__dirstamp) \
	ui/gtk/general_options/$(DEPDIR)/$(am__dirstamp)
ui/gtk/color_adjust/$(am__dirstamp):
	@$(MKDIR_P) ui/gtk/color_adjust
	@: > ui/gtk/color_adjust/$(am__dirstamp)
ui/gtk/color_adjust/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/gtk/color_adjust/$(DEPDIR)
	@: > ui/gtk/color_adjust/$(DEPDIR)/$(am__dirstamp)
ui/gtk/color_adjust/gens-ca_window.$(OBJEXT):  \
	ui/gtk/color_adjust/$(am__dirstamp) \
	ui/gtk/color_adjust/$(DEPDIR)/$(am__dirstamp)
ui/gtk/country_code/$(am__dirstamp):
	@$(MKDIR_P) ui/gtk/country_code
	@: > ui/gtk/country_code/$(am__dirstamp)
ui/gtk/country_code/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/gtk/country_code/$(DEPDIR)
	@: > ui/gtk/country_code/$(DEPDIR)/$(am__dirstamp)
ui/gtk/country_code/gens-ccode_window.$(OBJEXT):  \
	ui/gtk/country_code/$(am__dirstamp) \
	ui/gtk/country_code/$(DEPDIR)/$(am__dirstamp)
ui/gtk/zip_select/$(am__dirstamp):
	@$(MKDIR_P) ui/gtk/zip_select
	@: > ui/gtk/zip_select/$(am__dirstamp)
ui/gtk/zip_select/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/gtk/zip_select/$(DEPDIR)
	@: > ui/gtk/zip_select/$(DEPDIR)/$(am__dirstamp)
ui/gtk/zip_select/gens-zipsel_dialog.$(OBJEXT):  \
	ui/gtk/zip_select/$(am__dirstamp) \
	ui/gtk/zip_select/$(DEPDIR)/$(am__dirstamp)
ui/gtk/plugin_manager/$(am__dirstamp):
	@$(MKDIR_P) ui/gtk/plugin_manager
	@: > ui/gtk/plugin_manager/$(am__dirstamp)
ui/gtk/plugin_manager/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/gtk/plugin_manager/$(DEPDIR)
	@: > ui/gtk/plugin_manager/$(DEPDIR)/$(am__dirstamp)
ui/gtk/plugin_manager/gens-pmgr_window.$(OBJEXT):  \
	ui/gtk/plugin_manager/$(am__dirstamp) \
	ui/gtk/plugin_manager/$(DEPDIR)/$(am__dirstamp)
ui/gtk/about/$(am__dirstamp):
	@$(MKDIR_P) ui/gtk/about
	@: > ui/gtk/about/$(am__dirstamp)
ui/gtk/about/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/gtk/about/$(DEPDIR)
	@: > ui/gtk/about/$(DEPDIR)/$(am__dirstamp)
ui/gtk/about/gens-about_window.$(OBJEXT):  \
	ui/gtk/about/$(am__dirstamp) \
	ui/gtk/about/$(DEPDIR)/$(am__dirstamp)
video/gens-vdraw_sdl_gl.$(OBJEXT): video/$(am__dirstamp) \
	video/$(DEPDIR)/$(am__dirstamp)
ui/gtk/opengl_resolution/$(am__dirstamp):
	@$(MKDIR_P) ui/gtk/opengl_resolution
	@: > ui/gtk/opengl_resolution/$(am__dirstamp)
ui/gtk/opengl_resolution/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/gtk/opengl_resolution/$(DEPDIR)
	@: > ui/gtk/opengl_resolution/$(DEPDIR)/$(am__dirstamp)
ui/gtk/opengl_resolution/gens-glres_window.$(OBJEXT):  \
	ui/gtk/opengl_resolution/$(am__dirstamp) \
	ui/gtk/opengl_resolution/$(DEPDIR)/$(am__dirstamp)
video/gens-vdraw_gl_cgl.$(OBJEXT): video/$(am__dirstamp) \
	video/$(DEPDIR)/$(am__dirstamp)
video/gens-vdraw_gl_glx.$(OBJEXT): video/$(am__dirstamp) \
	video/$(DEPDIR)/$(am__dirstamp)
ui/gtk/select_cdrom/$(am__dirstamp):
	@$(MKDIR_P) ui/gtk/select_cdrom
	@: > ui/gtk/select_cdrom/$(am__dirstamp)
ui/gtk/select_cdrom/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/gtk/select_cdrom/$(DEPDIR)
	@: > ui/gtk/select_cdrom/$(DEPDIR)/$(am__dirstamp)
ui/gtk/select_cdrom/gens-selcd_window.$(OBJEXT):  \
	ui/gtk/select_cdrom/$(am__dirstamp) \
	ui/gtk/select_cdrom/$(DEPDIR)/$(am__dirstamp)
emulator/gens-g_main_win32.$(OBJEXT): emulator/$(am__dirstamp) \
	emulator/$(DEPDIR)/$(am__dirstamp)
port/gens-argc_argv.$(OBJEXT): port/$(am__dirstamp) \
	port/$(DEPDIR)/$(am__dirstamp)
video/gens-vdraw_gdi.$(OBJEXT): video/$(am__dirstamp) \
	video/$(DEPDIR)/$(am__dirstamp)
video/gens-vdraw_ddraw_t.$(OBJEXT): video/$(am__dirstamp) \
	video/$(DEPDIR)/$(am__dirstamp)
video/gens-vdraw_ddraw.$(OBJEXT): video/$(am__dirstamp) \
	video/$(DEPDIR)/$(am__dirstamp)
input/gens-input_dinput.$(OBJEXT): input/$(am__dirstamp) \
	input/$(DEPDIR)/$(am__dirstamp)
input/gens-input_dinput_t.$(OBJEXT): input/$(am__dirstamp) \
	input/$(DEPDIR)/$(am__dirstamp)
input/gens-input_dinput_key_names.$(OBJEXT): input/$(am__dirstamp) \
	input/$(DEPDIR)/$(am__dirstamp)
audio/gens-audio_dsound_t.$(OBJEXT): audio/$(am__dirstamp) \
	audio/$(DEPDIR)/$(am__dirstamp)
audio/gens-audio_dsound.$(OBJEXT): audio/$(am__dirstamp) \
	audio/$(DEPDIR)/$(am__dirstamp)
plugins/gens-mdp_host_gens_win32.$(OBJEXT): plugins/$(am__dirstamp) \
	plugins/$(DEPDIR)/$(am__dirstamp)
util/file/decompressor/gens-popen_wrapper.$(OBJEXT):  \
	util/file/decompressor/$(am__dirstamp) \
	util/file/decompressor/$(DEPDIR)/$(am__dirstamp)
charset/gens-cp1252.$(OBJEXT): charset/$(am__dirstamp) \
	charset/$(DEPDIR)/$(am__dirstamp)
ui/win32/$(am__dirstamp):
	@$(MKDIR_P) ui/win32
	@: > ui/win32/$(am__dirstamp)
ui/win32/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/win32/$(DEPDIR)
	@: > ui/win32/$(DEPDIR)/$(am__dirstamp)
ui/win32/gens-fonts.$(OBJEXT): ui/win32/$(am__dirstamp) \
	ui/win32/$(DEPDIR)/$(am__dirstamp)
ui/win32/gens-cc6.$(OBJEXT): ui/win32/$(am__dirstamp) \
	ui/win32/$(DEPDIR)/$(am__dirstamp)
ui/win32/gens-gens_ui_win32.$(OBJEXT): ui/win32/$(am__dirstamp) \
	ui/win32/$(DEPDIR)/$(am__dirstamp)
ui/win32/gens/$(am__dirstamp):
	@$(MKDIR_P) ui/win32/gens
	@: > ui/win32/gens/$(am__dirstamp)
ui/win32/gens/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/win32/gens/$(DEPDIR)
	@: > ui/win32/gens/$(DEPDIR)/$(am__dirstamp)
ui/win32/gens/gens-gens_window.$(OBJEXT):  \
	ui/win32/gens/$(am__dirstamp) \
	ui/win32/gens/$(DEPDIR)/$(am__dirstamp)
ui/win32/gens/gens-gens_window_callbacks.$(OBJEXT):  \
	ui/win32/gens/$(am__dirstamp) \
	ui/win32/gens/$(DEPDIR)/$(am__dirstamp)
ui/win32/gens/gens-gens_window_sync.$(OBJEXT):  \
	ui/win32/gens/$(am__dirstamp) \
	ui/win32/gens/$(DEPDIR)/$(am__dirstamp)
ui/win32/gens/gens-gens_menu.$(OBJEXT): ui/win32/gens/$(am__dirstamp) \
	ui/win32/gens/$(DEPDIR)/$(am__dirstamp)
ui/win32/controller_config/$(am__dirstamp):
	@$(MKDIR_P) ui/win32/controller_config
	@: > ui/win32/controller_config/$(am__dirstamp)
ui/win32/controller_config/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/win32/controller_config/$(DEPDIR)
	@: > ui/win32/controller_config/$(DEPDIR)/$(am__dirstamp)
ui/win32/controller_config/gens-cc_window.$(OBJEXT):  \
	ui/win32/controller_config/$(am__dirstamp) \
	ui/win32/controller_config/$(DEPDIR)/$(am__dirstamp)
ui/win32/bios_misc_files/$(am__dirstamp):
	@$(MKDIR_P) ui/win32/bios_misc_files
	@: > ui/win32/bios_misc_files/$(am__dirstamp)
ui/win32/bios_misc_files/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/win32/bios_misc_files/$(DEPDIR)
	@: > ui/win32/bios_misc_files/$(DEPDIR)/$(am__dirstamp)
ui/win32/bios_misc_files/gens-bmf_window.$(OBJEXT):  \
	ui/win32/bios_misc_files/$(am__dirstamp) \
	ui/win32/bios_misc_files/$(DEPDIR)/$(am__dirstamp)
ui/win32/directory_config/$(am__dirstamp):
	@$(MKDIR_P) ui/win32/directory_config
	@: > ui/win32/directory_config/$(am__dirstamp)
ui/win32/directory_config/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/win32/directory_config/$(DEPDIR)
	@: > ui/win32/directory_config/$(DEPDIR)/$(am__dirstamp)
ui/win32/directory_config/gens-dir_window.$(OBJEXT):  \
	ui/win32/directory_config/$(am__dirstamp) \
	ui/win32/directory_config/$(DEPDIR)/$(am__dirstamp)
ui/win32/general_options/$(am__dirstamp):
	@$(MKDIR_P) ui/win32/general_options
	@: > ui/win32/general_options/$(am__dirstamp)
ui/win32/general_options/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/win32/general_options/$(DEPDIR)
	@: > ui/win32/general_options/$(DEPDIR)/$(am__dirstamp)
ui/win32/general_options/gens-genopt_window.$(OBJEXT):  \
	ui/win32/general_options/$(am__dirstamp) \
	ui/win32/general_options/$(DEPDIR)/$(am__dirstamp)
ui/win32/color_adjust/$(am__dirstamp):
	@$(MKDIR_P) ui/win32/color_adjust
	@: > ui/win32/color_adjust/$(am__dirstamp)
ui/win32/color_adjust/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/win32/color_adjust/$(DEPDIR)
	@: > ui/win32/color_adjust/$(DEPDIR)/$(am__dirstamp)
ui/win32/color_adjust/gens-ca_window.$(OBJEXT):  \
	ui/win32/color_adjust/$(am__dirstamp) \
	ui/win32/color_adjust/$(DEPDIR)/$(am__dirstamp)
ui/win32/country_code/$(am__dirstamp):
	@$(MKDIR_P) ui/win32/country_code
	@: > ui/win32/country_code/$(am__dirstamp)
ui/win32/country_code/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/win32/country_code/$(DEPDIR)
	@: > ui/win32/country_code/$(DEPDIR)/$(am__dirstamp)
ui/win32/country_code/gens-ccode_window.$(OBJEXT):  \
	ui/win32/country_code/$(am__dirstamp) \
	ui/win32/country_code/$(DEPDIR)/$(am__dirstamp)
ui/win32/zip_select/$(am__dirstamp):
	@$(MKDIR_P) ui/win32/zip_select
	@: > ui/win32/zip_select/$(am__dirstamp)
ui/win32/zip_select/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/win32/zip_select/$(DEPDIR)
	@: > ui/win32/zip_select/$(DEPDIR)/$(am__dirstamp)
ui/win32/zip_select/gens-zipsel_dialog.$(OBJEXT):  \
	ui/win32/zip_select/$(am__dirstamp) \
	ui/win32/zip_select/$(DEPDIR)/$(am__dirstamp)
ui/win32/plugin_manager/$(am__dirstamp):
	@$(MKDIR_P) ui/win32/plugin_manager
	@: > ui/win32/plugin_manager/$(am__dirstamp)
ui/win32/plugin_manager/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/win32/plugin_manager/$(DEPDIR)
	@: > ui/win32/plugin_manager/$(DEPDIR)/$(am__dirstamp)
ui/win32/plugin_manager/gens-pmgr_window.$(OBJEXT):  \
	ui/win32/plugin_manager/$(am__dirstamp) \
	ui/win32/plugin_manager/$(DEPDIR)/$(am__dirstamp)
ui/win32/about/$(am__dirstamp):
	@$(MKDIR_P) ui/win32/about
	@: > ui/win32/about/$(am__dirstamp)
ui/win32/about/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/win32/about/$(DEPDIR)
	@: > ui/win32/about/$(DEPDIR)/$(am__dirstamp)
ui/win32/about/gens-about_window.$(OBJEXT):  \
	ui/win32/about/$(am__dirstamp) \
	ui/win32/about/$(DEPDIR)/$(am__dirstamp)
ui/win32/resource.$(OBJEXT): ui/win32/$(am__dirstamp) \
	ui/win32/$(DEPDIR)/$(am__dirstamp)
segacd/gens-cd_aspi_win32.$(OBJEXT): segacd/$(am__dirstamp) \
	segacd/$(DEPDIR)/$(am__dirstamp)
ui/win32/select_cdrom/$(am__dirstamp):
	@$(MKDIR_P) ui/win32/select_cdrom
	@: > ui/win32/select_cdrom/$(am__dirstamp)
ui/win32/select_cdrom/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/win32/select_cdrom/$(DEPDIR)
	@: > ui/win32/select_cdrom/$(DEPDIR)/$(am__dirstamp)
ui/win32/select_cdrom/gens-selcd_window.$(OBJEXT):  \
	ui/win32/select_cdrom/$(am__dirstamp) \
	ui/win32/select_cdrom/$(DEPDIR)/$(am__dirstamp)
emulator/gens-g_main_haiku.$(OBJEXT): emulator/$(am__dirstamp) \
	emulator/$(DEPDIR)/$(am__dirstamp)
input/gens-input_haiku_t.$(OBJEXT): input/$(am__dirstamp) \
	input/$(DEPDIR)/$(am__dirstamp)
input/gens-input_haiku.$(OBJEXT): input/$(am__dirstamp) \
	input/$(DEPDIR)/$(am__dirstamp)
video/gens-vdraw_haiku_t.$(OBJEXT): video/$(am__dirstamp) \
	video/$(DEPDIR)/$(am__dirstamp)
video/gens-vdraw_haiku.$(OBJEXT): video/$(am__dirstamp) \
	video/$(DEPDIR)/$(am__dirstamp)
audio/gens-audio_haiku.$(OBJEXT): audio/$(am__dirstamp) \
	audio/$(DEPDIR)/$(am__dirstamp)
ui/haiku/$(am__dirstamp):
	@$(MKDIR_P) ui/haiku
	@: > ui/haiku/$(am__dirstamp)
ui/haiku/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/haiku/$(DEPDIR)
	@: > ui/haiku/$(DEPDIR)/$(am__dirstamp)
ui/haiku/gens-gens_ui_haiku.$(OBJEXT): ui/haiku/$(am__dirstamp) \
	ui/haiku/$(DEPDIR)/$(am__dirstamp)
ui/haiku/gens/$(am__dirstamp):
	@$(MKDIR_P) ui/haiku/gens
	@: > ui/haiku/gens/$(am__dirstamp)
ui/haiku/gens/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/haiku/gens/$(DEPDIR)
	@: > ui/haiku/gens/$(DEPDIR)/$(am__dirstamp)
ui/haiku/gens/gens-gens_app.$(OBJEXT): ui/haiku/gens/$(am__dirstamp) \
	ui/haiku/gens/$(DEPDIR)/$(am__dirstamp)
ui/haiku/gens/gens-gens_window.$(OBJEXT):  \
	ui/haiku/gens/$(am__dirstamp) \
	ui/haiku/gens/$(DEPDIR)/$(am__dirstamp)
ui/haiku/gens/gens-gens_window_callbacks.$(OBJEXT):  \
	ui/haiku/gens/$(am__dirstamp) \
	ui/haiku/gens/$(DEPDIR)/$(am__dirstamp)
ui/haiku/gens/gens-gens_window_sync.$(OBJEXT):  \
	ui/haiku/gens/$(am__dirstamp) \
	ui/haiku/gens/$(DEPDIR)/$(am__dirstamp)
ui/haiku/gens/gens-gens_menu.$(OBJEXT): ui/haiku/gens/$(am__dirstamp) \
	ui/haiku/gens/$(DEPDIR)/$(am__dirstamp)
ui/haiku/controller_config/$(am__dirstamp):
	@$(MKDIR_P) ui/haiku/controller_config
	@: > ui/haiku/controller_config/$(am__dirstamp)
ui/haiku/controller_config/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/haiku/controller_config/$(DEPDIR)
	@: > ui/haiku/controller_config/$(DEPDIR)/$(am__dirstamp)
ui/haiku/controller_config/gens-cc_window.$(OBJEXT):  \
	ui/haiku/controller_config/$(am__dirstamp) \
	ui/haiku/controller_config/$(DEPDIR)/$(am__dirstamp)
ui/haiku/bios_misc_files/$(am__dirstamp):
	@$(MKDIR_P) ui/haiku/bios_misc_files
	@: > ui/haiku/bios_misc_files/$(am__dirstamp)
ui/haiku/bios_misc_files/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/haiku/bios_misc_files/$(DEPDIR)
	@: > ui/haiku/bios_misc_files/$(DEPDIR)/$(am__dirstamp)
ui/haiku/bios_misc_files/gens-bmf_window.$(OBJEXT):  \
	ui/haiku/bios_misc_files/$(am__dirstamp) \
	ui/haiku/bios_misc_files/$(DEPDIR)/$(am__dirstamp)
ui/haiku/directory_config/$(am__dirstamp):
	@$(MKDIR_P) ui/haiku/directory_config
	@: > ui/haiku/directory_config/$(am__dirstamp)
ui/haiku/directory_config/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/haiku/directory_config/$(DEPDIR)
	@: > ui/haiku/directory_config/$(DEPDIR)/$(am__dirstamp)
ui/haiku/directory_config/gens-dir_window.$(OBJEXT):  \
	ui/haiku/directory_config/$(am__dirstamp) \
	ui/haiku/directory_config/$(DEPDIR)/$(am__dirstamp)
ui/haiku/general_options/$(am__dirstamp):
	@$(MKDIR_P) ui/haiku/general_options
	@: > ui/haiku/general_options/$(am__dirstamp)
ui/haiku/general_options/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/haiku/general_options/$(DEPDIR)
	@: > ui/haiku/general_options/$(DEPDIR)/$(am__dirstamp)
ui/haiku/general_options/gens-genopt_window.$(OBJEXT):  \
	ui/haiku/general_options/$(am__dirstamp) \
	ui/haiku/general_options/$(DEPDIR)/$(am__dirstamp)
ui/haiku/color_adjust/$(am__dirstamp):
	@$(MKDIR_P) ui/haiku/color_adjust
	@: > ui/haiku/color_adjust/$(am__dirstamp)
ui/haiku/color_adjust/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/haiku/color_adjust/$(DEPDIR)
	@: > ui/haiku/color_adjust/$(DEPDIR)/$(am__dirstamp)
ui/haiku/color_adjust/gens-ca_window.$(OBJEXT):  \
	ui/haiku/color_adjust/$(am__dirstamp) \
	ui/haiku/color_adjust/$(DEPDIR)/$(am__dirstamp)
ui/haiku/country_code/$(am__dirstamp):
	@$(MKDIR_P) ui/haiku/country_code
	@: > ui/haiku/country_code/$(am__dirstamp)
ui/haiku/country_code/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/haiku/country_code/$(DEPDIR)
	@: > ui/haiku/country_code/$(DEPDIR)/$(am__dirstamp)
ui/haiku/country_code/gens-ccode_window.$(OBJEXT):  \
	ui/haiku/country_code/$(am__dirstamp) \
	ui/haiku/country_code/$(DEPDIR)/$(am__dirstamp)
ui/haiku/zip_select/$(am__dirstamp):
	@$(MKDIR_P) ui/haiku/zip_select
	@: > ui/haiku/zip_select/$(am__dirstamp)
ui/haiku/zip_select/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/haiku/zip_select/$(DEPDIR)
	@: > ui/haiku/zip_select/$(DEPDIR)/$(am__dirstamp)
ui/haiku/zip_select/gens-zipsel_dialog.$(OBJEXT):  \
	ui/haiku/zip_select/$(am__dirstamp) \
	ui/haiku/zip_select/$(DEPDIR)/$(am__dirstamp)
ui/haiku/plugin_manager/$(am__dirstamp):
	@$(MKDIR_P) ui/haiku/plugin_manager
	@: > ui/haiku/plugin_manager/$(am__dirstamp)
ui/haiku/plugin_manager/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/haiku/plugin_manager/$(DEPDIR)
	@: > ui/haiku/plugin_manager/$(DEPDIR)/$(am__dirstamp)
ui/haiku/plugin_manager/gens-pmgr_window.$(OBJEXT):  \
	ui/haiku/plugin_manager/$(am__dirstamp) \
	ui/haiku/plugin_manager/$(DEPDIR)/$(am__dirstamp)
ui/haiku/about/$(am__dirstamp):
	@$(MKDIR_P) ui/haiku/about
	@: > ui/haiku/about/$(am__dirstamp)
ui/haiku/about/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/haiku/about/$(DEPDIR)
	@: > ui/haiku/about/$(DEPDIR)/$(am__dirstamp)
ui/haiku/about/gens-about_window.$(OBJEXT):  \
	ui/haiku/about/$(am__dirstamp) \
	ui/haiku/about/$(DEPDIR)/$(am__dirstamp)

gens$(EXEEXT): $(gens_OBJECTS) $(gens_DEPENDENCIES) $(EXTRA_gens_DEPENDENCIES) 
	@rm -f gens$(EXEEXT)
	$(AM_V_CXXLD)$(gens_LINK) $(gens_OBJECTS) $(gens_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f audio/*.$(OBJEXT)
	-rm -f charset/*.$(OBJEXT)
	-rm -f debugger/*.$(OBJEXT)
	-rm -f emulator/*.$(OBJEXT)
	-rm -f gens_core/cpu/68k/*.$(OBJEXT)
	-rm -f gens_core/cpu/sh2/*.$(OBJEXT)
	-rm -f gens_core/cpu/z80/*.$(OBJEXT)
	-rm -f gens_core/gfx/*.$(OBJEXT)
	-rm -f gens_core/io/*.$(OBJEXT)
	-rm -f gens_core/mem/*.$(OBJEXT)
	-rm -f gens_core/misc/*.$(OBJEXT)
	-rm -f gens_core/sound/*.$(OBJEXT)
	-rm -f gens_core/vdp/*.$(OBJEXT)
	-rm -f input/*.$(OBJEXT)
	-rm -f macros/*.$(OBJEXT)
	-rm -f plugins/*.$(OBJEXT)
	-rm -f plugins/reg/*.$(OBJEXT)
	-rm -f port/*.$(OBJEXT)
	-rm -f segacd/*.$(OBJEXT)
	-rm -f ui/*.$(OBJEXT)
	-rm -f ui/common/*.$(OBJEXT)
	-rm -f ui/common/gens/*.$(OBJEXT)
	-rm -f ui/gtk/*.$(OBJEXT)
	-rm -f ui/gtk/about/*.$(OBJEXT)
	-rm -f ui/gtk/bios_misc_files/*.$(OBJEXT)
	-rm -f ui/gtk/color_adjust/*.$(OBJEXT)
	-rm -f ui/gtk/controller_config/*.$(OBJEXT)
	-rm -f ui/gtk/country_code/*.$(OBJEXT)
	-rm -f ui/gtk/directory_config/*.$(OBJEXT)
	-rm -f ui/gtk/general_options/*.$(OBJEXT)
	-rm -f ui/gtk/gens/*.$(OBJEXT)
	-rm -f ui/gtk/opengl_resolution/*.$(OBJEXT)
	-rm -f ui/gtk/plugin_manager/*.$(OBJEXT)
	-rm -f ui/gtk/select_cdrom/*.$(OBJEXT)
	-rm -f ui/gtk/zip_select/*.$(OBJEXT)
	-rm -f ui/haiku/*.$(OBJEXT)
	-rm -f ui/haiku/about/*.$(OBJEXT)
	-rm -f ui/haiku/bios_misc_files/*.$(OBJEXT)
	-rm -f ui/haiku/color_adjust/*.$(OBJEXT)
	-rm -f ui/haiku/controller_config/*.$(OBJEXT)
	-rm -f ui/haiku/country_code/*.$(OBJEXT)
	-rm -f ui/haiku/directory_config/*.$(OBJEXT)
	-rm -f ui/haiku/general_options/*.$(OBJEXT)
	-rm -f ui/haiku/gens/*.$(OBJEXT)
	-rm -f ui/haiku/plugin_manager/*.$(OBJEXT)
	-rm -f ui/haiku/zip_select/*.$(OBJEXT)
	-rm -f ui/win32/*.$(OBJEXT)
	-rm -f ui/win32/about/*.$(OBJEXT)
	-rm -f ui/win32/bios_misc_files/*.$(OBJEXT)
	-rm -f ui/win32/color_adjust/*.$(OBJEXT)
	-rm -f ui/win32/controller_config/*.$(OBJEXT)
	-rm -f ui/win32/country_code/*.$(OBJEXT)
	-rm -f ui/win32/directory_config/*.$(OBJEXT)
	-rm -f ui/win32/general_options/*.$(OBJEXT)
	-rm -f ui/win32/gens/*.$(OBJEXT)
	-rm -f ui/win32/plugin_manager/*.$(OBJEXT)
	-rm -f ui/win32/select_cdrom/*.$(OBJEXT)
	-rm -f ui/win32/zip_select/*.$(OBJEXT)
	-rm -f util/file/*.$(OBJEXT)
	-rm -f util/file/decompressor/*.$(OBJEXT)
	-rm -f util/gfx/*.$(OBJEXT)
	-rm -f util/sound/*.$(OBJEXT)
	-rm -f video/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include audio/$(DEPDIR)/gens-audio.Po
include audio/$(DEPDIR)/gens-audio_dsound.Po
include audio/$(DEPDIR)/gens-audio_dsound_t.Po
include audio/$(DEPDIR)/gens-audio_haiku.Po
include audio/$(DEPDIR)/gens-audio_mmx.Po
include audio/$(DEPDIR)/gens-audio_sdl.Po
include charset/$(DEPDIR)/gens-cp1252.Po
include charset/$(DEPDIR)/gens-iconv_string.Po
include debugger/$(DEPDIR)/gens-debugger.Po
include debugger/$(DEPDIR)/gens-m68kd.Po
include debugger/$(DEPDIR)/gens-sh2d.Po
include debugger/$(DEPDIR)/gens-z80dis.Po
include emulator/$(DEPDIR)/gens-g_32x.Po
include emulator/$(DEPDIR)/gens-g_main.Po
include emulator/$(DEPDIR)/gens-g_main_haiku.Po
include emulator/$(DEPDIR)/gens-g_main_unix.Po
include emulator/$(DEPDIR)/gens-g_main_win32.Po
include emulator/$(DEPDIR)/gens-g_mcd.Po
include emulator/$(DEPDIR)/gens-g_md.Po
include emulator/$(DEPDIR)/gens-g_update.Po
include emulator/$(DEPDIR)/gens-gens.Po
include emulator/$(DEPDIR)/gens-md_palette.Po
include emulator/$(DEPDIR)/gens-options.Po
include emulator/$(DEPDIR)/gens-parse.Po
include emulator/$(DEPDIR)/gens-sighandler.Po
include gens_core/cpu/68k/$(DEPDIR)/gens-cpu_68k.Po
include gens_core/cpu/sh2/$(DEPDIR)/gens-cpu_sh2.Po
include gens_core/cpu/sh2/$(DEPDIR)/gens-sh2.Po
include gens_core/cpu/z80/$(DEPDIR)/gens-cpu_z80.Po
include gens_core/gfx/$(DEPDIR)/gens-fastblur.Po
include gens_core/gfx/$(DEPDIR)/gens-fastblur_16_x86.Po
include gens_core/gfx/$(DEPDIR)/gens-fastblur_32_x86.Po
include gens_core/io/$(DEPDIR)/gens-io.Po
include gens_core/io/$(DEPDIR)/gens-io_teamplayer.Po
include gens_core/mem/$(DEPDIR)/gens-mem_z80.Po
include gens_core/misc/$(DEPDIR)/gens-cpuflags.Po
include gens_core/sound/$(DEPDIR)/gens-pcm.Po
include gens_core/sound/$(DEPDIR)/gens-psg.Po
include gens_core/sound/$(DEPDIR)/gens-pwm.Po
include gens_core/sound/$(DEPDIR)/gens-ym2612.Po
include gens_core/vdp/$(DEPDIR)/gens-vdp_32x.Po
include gens_core/vdp/$(DEPDIR)/gens-vdp_32x_32bit.Po
include gens_core/vdp/$(DEPDIR)/gens-vdp_io.Po
include gens_core/vdp/$(DEPDIR)/gens-vdp_rend.Po
include input/$(DEPDIR)/gens-input.Po
include input/$(DEPDIR)/gens-input_dinput.Po
include input/$(DEPDIR)/gens-input_dinput_key_names.Po
include input/$(DEPDIR)/gens-input_dinput_t.Po
include input/$(DEPDIR)/gens-input_haiku.Po
include input/$(DEPDIR)/gens-input_haiku_t.Po
include input/$(DEPDIR)/gens-input_sdl.Po
include input/$(DEPDIR)/gens-input_sdl_events.Po
include input/$(DEPDIR)/gens-input_sdl_key_names.Po
include input/$(DEPDIR)/gens-input_update.Po
include macros/$(DEPDIR)/gens-log_msg.Po
include plugins/$(DEPDIR)/gens-eventmgr.Po
include plugins/$(DEPDIR)/gens-mdp_host_gens.Po
include plugins/$(DEPDIR)/gens-mdp_host_gens_config.Po
include plugins/$(DEPDIR)/gens-mdp_host_gens_cpp.Po
include plugins/$(DEPDIR)/gens-mdp_host_gens_dir.Po
include plugins/$(DEPDIR)/gens-mdp_host_gens_emuctrl.Po
include plugins/$(DEPDIR)/gens-mdp_host_gens_event.Po
include plugins/$(DEPDIR)/gens-mdp_host_gens_mem.Po
include plugins/$(DEPDIR)/gens-mdp_host_gens_menu.Po
include plugins/$(DEPDIR)/gens-mdp_host_gens_win32.Po
include plugins/$(DEPDIR)/gens-mdp_host_gens_z.Po
include plugins/$(DEPDIR)/gens-mdp_incompat.Po
include plugins/$(DEPDIR)/gens-pluginmgr.Po
include plugins/$(DEPDIR)/gens-rendermgr.Po
include plugins/reg/$(DEPDIR)/gens-reg_get.Po
include plugins/reg/$(DEPDIR)/gens-reg_get_all.Po
include plugins/reg/$(DEPDIR)/gens-reg_set.Po
include plugins/reg/$(DEPDIR)/gens-reg_set_all.Po
include port/$(DEPDIR)/gens-argc_argv.Po
include port/$(DEPDIR)/gens-ini.Po
include port/$(DEPDIR)/gens-ini_old.Po
include port/$(DEPDIR)/gens-timer.Po
include segacd/$(DEPDIR)/gens-cd_aspi_linux.Po
include segacd/$(DEPDIR)/gens-cd_aspi_win32.Po
include segacd/$(DEPDIR)/gens-cd_file.Po
include segacd/$(DEPDIR)/gens-cd_sys.Po
include segacd/$(DEPDIR)/gens-cdda_mp3.Po
include segacd/$(DEPDIR)/gens-lc89510.Po
include ui/$(DEPDIR)/gens-gens_ui.Po
include ui/common/$(DEPDIR)/gens-about_window_data.Po
include ui/common/$(DEPDIR)/gens-bmf_window_common.Po
include ui/common/$(DEPDIR)/gens-dir_window_common.Po
include ui/common/$(DEPDIR)/gens-pmgr_window_common.Po
include ui/common/gens/$(DEPDIR)/gens-gens_menu.Po
include ui/common/gens/$(DEPDIR)/gens-gens_menu_callbacks.Po
include ui/common/gens/$(DEPDIR)/gens-gens_window_sync.Po
include ui/gtk/$(DEPDIR)/gens-gens_ui_gtk.Po
include ui/gtk/$(DEPDIR)/gens-gtk-misc.Po
include ui/gtk/$(DEPDIR)/gens-gtk-uri.Po
include ui/gtk/about/$(DEPDIR)/gens-about_window.Po
include ui/gtk/bios_misc_files/$(DEPDIR)/gens-bmf_window.Po
include ui/gtk/color_adjust/$(DEPDIR)/gens-ca_window.Po
include ui/gtk/controller_config/$(DEPDIR)/gens-cc_window.Po
include ui/gtk/country_code/$(DEPDIR)/gens-ccode_window.Po
include ui/gtk/directory_config/$(DEPDIR)/gens-dir_window.Po
include ui/gtk/general_options/$(DEPDIR)/gens-genopt_window.Po
include ui/gtk/gens/$(DEPDIR)/gens-gens_menu.Po
include ui/gtk/gens/$(DEPDIR)/gens-gens_window.Po
include ui/gtk/gens/$(DEPDIR)/gens-gens_window_callbacks.Po
include ui/gtk/gens/$(DEPDIR)/gens-gens_window_sync.Po
include ui/gtk/opengl_resolution/$(DEPDIR)/gens-glres_window.Po
include ui/gtk/plugin_manager/$(DEPDIR)/gens-pmgr_window.Po
include ui/gtk/select_cdrom/$(DEPDIR)/gens-selcd_window.Po
include ui/gtk/zip_select/$(DEPDIR)/gens-zipsel_dialog.Po
include ui/haiku/$(DEPDIR)/gens-gens_ui_haiku.Po
include ui/haiku/about/$(DEPDIR)/gens-about_window.Po
include ui/haiku/bios_misc_files/$(DEPDIR)/gens-bmf_window.Po
include ui/haiku/color_adjust/$(DEPDIR)/gens-ca_window.Po
include ui/haiku/controller_config/$(DEPDIR)/gens-cc_window.Po
include ui/haiku/country_code/$(DEPDIR)/gens-ccode_window.Po
include ui/haiku/directory_config/$(DEPDIR)/gens-dir_window.Po
include ui/haiku/general_options/$(DEPDIR)/gens-genopt_window.Po
include ui/haiku/gens/$(DEPDIR)/gens-gens_app.Po
include ui/haiku/gens/$(DEPDIR)/gens-gens_menu.Po
include ui/haiku/gens/$(DEPDIR)/gens-gens_window.Po
include ui/haiku/gens/$(DEPDIR)/gens-gens_window_callbacks.Po
include ui/haiku/gens/$(DEPDIR)/gens-gens_window_sync.Po
include ui/haiku/plugin_manager/$(DEPDIR)/gens-pmgr_window.Po
include ui/haiku/zip_select/$(DEPDIR)/gens-zipsel_dialog.Po
include ui/win32/$(DEPDIR)/gens-cc6.Po
include ui/win32/$(DEPDIR)/gens-fonts.Po
include ui/win32/$(DEPDIR)/gens-gens_ui_win32.Po
include ui/win32/about/$(DEPDIR)/gens-about_window.Po
include ui/win32/bios_misc_files/$(DEPDIR)/gens-bmf_window.Po
include ui/win32/color_adjust/$(DEPDIR)/gens-ca_window.Po
include ui/win32/controller_config/$(DEPDIR)/gens-cc_window.Po
include ui/win32/country_code/$(DEPDIR)/gens-ccode_window.Po
include ui/win32/directory_config/$(DEPDIR)/gens-dir_window.Po
include ui/win32/general_options/$(DEPDIR)/gens-genopt_window.Po
include ui/win32/gens/$(DEPDIR)/gens-gens_menu.Po
include ui/win32/gens/$(DEPDIR)/gens-gens_window.Po
include ui/win32/gens/$(DEPDIR)/gens-gens_window_callbacks.Po
include ui/win32/gens/$(DEPDIR)/gens-gens_window_sync.Po
include ui/win32/plugin_manager/$(DEPDIR)/gens-pmgr_window.Po
include ui/win32/select_cdrom/$(DEPDIR)/gens-selcd_window.Po
include ui/win32/zip_select/$(DEPDIR)/gens-zipsel_dialog.Po
include util/file/$(DEPDIR)/gens-config_file.Po
include util/file/$(DEPDIR)/gens-file.Po
include util/file/$(DEPDIR)/gens-rom.Po
include util/file/$(DEPDIR)/gens-save.Po
include util/file/decompressor/$(DEPDIR)/gens-decompressor.Po
include util/file/decompressor/$(DEPDIR)/gens-dummy.Po
include util/file/decompressor/$(DEPDIR)/gens-md_7z.Po
include util/file/decompressor/$(DEPDIR)/gens-md_gzip.Po
include util/file/decompressor/$(DEPDIR)/gens-md_rar.Po
include util/file/decompressor/$(DEPDIR)/gens-md_rar_t.Po
include util/file/decompressor/$(DEPDIR)/gens-md_zip.Po
include util/file/decompressor/$(DEPDIR)/gens-popen_wrapper.Po
include util/gfx/$(DEPDIR)/gens-imageutil.Po
include util/sound/$(DEPDIR)/gens-gym.Po
include util/sound/$(DEPDIR)/gens-wave.Po
include video/$(DEPDIR)/gens-C64_charset.Po
include video/$(DEPDIR)/gens-osd_charset.Po
include video/$(DEPDIR)/gens-v_effects.Po
include video/$(DEPDIR)/gens-vdraw.Po
include video/$(DEPDIR)/gens-vdraw_RGB.Po
include video/$(DEPDIR)/gens-vdraw_cpp.Po
include video/$(DEPDIR)/gens-vdraw_ddraw.Po
include video/$(DEPDIR)/gens-vdraw_ddraw_t.Po
include video/$(DEPDIR)/gens-vdraw_gdi.Po
include video/$(DEPDIR)/gens-vdraw_gl_cgl.Po
include video/$(DEPDIR)/gens-vdraw_gl_glx.Po
include video/$(DEPDIR)/gens-vdraw_haiku.Po
include video/$(DEPDIR)/gens-vdraw_haiku_t.Po
include video/$(DEPDIR)/gens-vdraw_sdl.Po
include video/$(DEPDIR)/gens-vdraw_sdl_common.Po
include video/$(DEPDIR)/gens-vdraw_sdl_gl.Po
include video/$(DEPDIR)/gens-vdraw_text.Po

.S.o:
	$(AM_V_CPPAS)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CPPASCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CPPAS)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(CPPASCOMPILE) -c -o $@ $<

.S.obj:
	$(AM_V_CPPAS)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CPPASCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CPPAS)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(CPPASCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.S.lo:
	$(AM_V_CPPAS)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCPPASCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CPPAS)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(LTCPPASCOMPILE) -c -o $@ $<

gens_core/gfx/gens-fastblur_16_x86.o: gens_core/gfx/fastblur_16_x86.S
	$(AM_V_CPPAS)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CCASFLAGS) $(CCASFLAGS) -MT gens_core/gfx/gens-fastblur_16_x86.o -MD -MP -MF gens_core/gfx/$(DEPDIR)/gens-fastblur_16_x86.Tpo -c -o gens_core/gfx/gens-fastblur_16_x86.o `test -f 'gens_core/gfx/fastblur_16_x86.S' || echo '$(srcdir)/'`gens_core/gfx/fastblur_16_x86.S
	$(AM_V_at)$(am__mv) gens_core/gfx/$(DEPDIR)/gens-fastblur_16_x86.Tpo gens_core/gfx/$(DEPDIR)/gens-fastblur_16_x86.Po
#	$(AM_V_CPPAS)source='gens_core/gfx/fastblur_16_x86.S' object='gens_core/gfx/gens-fastblur_16_x86.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CCASFLAGS) $(CCASFLAGS) -c -o gens_core/gfx/gens-fastblur_16_x86.o `test -f 'gens_core/gfx/fastblur_16_x86.S' || echo '$(srcdir)/'`gens_core/gfx/fastblur_16_x86.S

gens_core/gfx/gens-fastblur_16_x86.obj: gens_core/gfx/fastblur_16_x86.S
	$(AM_V_CPPAS)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CCASFLAGS) $(CCASFLAGS) -MT gens_core/gfx/gens-fastblur_16_x86.obj -MD -MP -MF gens_core/gfx/$(DEPDIR)/gens-fastblur_16_x86.Tpo -c -o gens_core/gfx/gens-fastblur_16_x86.obj `if test -f 'gens_core/gfx/fastblur_16_x86.S'; then $(CYGPATH_W) 'gens_core/gfx/fastblur_16_x86.S'; else $(CYGPATH_W) '$(srcdir)/gens_core/gfx/fastblur_16_x86.S'; fi`
	$(AM_V_at)$(am__mv) gens_core/gfx/$(DEPDIR)/gens-fastblur_16_x86.Tpo gens_core/gfx/$(DEPDIR)/gens-fastblur_16_x86.Po
#	$(AM_V_CPPAS)source='gens_core/gfx/fastblur_16_x86.S' object='gens_core/gfx/gens-fastblur_16_x86.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CCASFLAGS) $(CCASFLAGS) -c -o gens_core/gfx/gens-fastblur_16_x86.obj `if test -f 'gens_core/gfx/fastblur_16_x86.S'; then $(CYGPATH_W) 'gens_core/gfx/fastblur_16_x86.S'; else $(CYGPATH_W) '$(srcdir)/gens_core/gfx/fastblur_16_x86.S'; fi`

gens_core/gfx/gens-fastblur_32_x86.o: gens_core/gfx/fastblur_32_x86.S
	$(AM_V_CPPAS)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CCASFLAGS) $(CCASFLAGS) -MT gens_core/gfx/gens-fastblur_32_x86.o -MD -MP -MF gens_core/gfx/$(DEPDIR)/gens-fastblur_32_x86.Tpo -c -o gens_core/gfx/gens-fastblur_32_x86.o `test -f 'gens_core/gfx/fastblur_32_x86.S' || echo '$(srcdir)/'`gens_core/gfx/fastblur_32_x86.S
	$(AM_V_at)$(am__mv) gens_core/gfx/$(DEPDIR)/gens-fastblur_32_x86.Tpo gens_core/gfx/$(DEPDIR)/gens-fastblur_32_x86.Po
#	$(AM_V_CPPAS)source='gens_core/gfx/fastblur_32_x86.S' object='gens_core/gfx/gens-fastblur_32_x86.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CCASFLAGS) $(CCASFLAGS) -c -o gens_core/gfx/gens-fastblur_32_x86.o `test -f 'gens_core/gfx/fastblur_32_x86.S' || echo '$(srcdir)/'`gens_core/gfx/fastblur_32_x86.S

gens_core/gfx/gens-fastblur_32_x86.obj: gens_core/gfx/fastblur_32_x86.S
	$(AM_V_CPPAS)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CCASFLAGS) $(CCASFLAGS) -MT gens_core/gfx/gens-fastblur_32_x86.obj -MD -MP -MF gens_core/gfx/$(DEPDIR)/gens-fastblur_32_x86.Tpo -c -o gens_core/gfx/gens-fastblur_32_x86.obj `if test -f 'gens_core/gfx/fastblur_32_x86.S'; then $(CYGPATH_W) 'gens_core/gfx/fastblur_32_x86.S'; else $(CYGPATH_W) '$(srcdir)/gens_core/gfx/fastblur_32_x86.S'; fi`
	$(AM_V_at)$(am__mv) gens_core/gfx/$(DEPDIR)/gens-fastblur_32_x86.Tpo gens_core/gfx/$(DEPDIR)/gens-fastblur_32_x86.Po
#	$(AM_V_CPPAS)source='gens_core/gfx/fastblur_32_x86.S' object='gens_core/gfx/gens-fastblur_32_x86.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CCASFLAGS) $(CCASFLAGS) -c -o gens_core/gfx/gens-fastblur_32_x86.obj `if test -f 'gens_core/gfx/fastblur_32_x86.S'; then $(CYGPATH_W) 'gens_core/gfx/fastblur_32_x86.S'; else $(CYGPATH_W) '$(srcdir)/gens_core/gfx/fastblur_32_x86.S'; fi`

audio/gens-audio_mmx.o: audio/audio_mmx.S
	$(AM_V_CPPAS)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CCASFLAGS) $(CCASFLAGS) -MT audio/gens-audio_mmx.o -MD -MP -MF audio/$(DEPDIR)/gens-audio_mmx.Tpo -c -o audio/gens-audio_mmx.o `test -f 'audio/audio_mmx.S' || echo '$(srcdir)/'`audio/audio_mmx.S
	$(AM_V_at)$(am__mv) audio/$(DEPDIR)/gens-audio_mmx.Tpo audio/$(DEPDIR)/gens-audio_mmx.Po
#	$(AM_V_CPPAS)source='audio/audio_mmx.S' object='audio/gens-audio_mmx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CCASFLAGS) $(CCASFLAGS) -c -o audio/gens-audio_mmx.o `test -f 'audio/audio_mmx.S' || echo '$(srcdir)/'`audio/audio_mmx.S

audio/gens-audio_mmx.obj: audio/audio_mmx.S
	$(AM_V_CPPAS)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CCASFLAGS) $(CCASFLAGS) -MT audio/gens-audio_mmx.obj -MD -MP -MF audio/$(DEPDIR)/gens-audio_mmx.Tpo -c -o audio/gens-audio_mmx.obj `if test -f 'audio/audio_mmx.S'; then $(CYGPATH_W) 'audio/audio_mmx.S'; else $(CYGPATH_W) '$(srcdir)/audio/audio_mmx.S'; fi`
	$(AM_V_at)$(am__mv) audio/$(DEPDIR)/gens-audio_mmx.Tpo audio/$(DEPDIR)/gens-audio_mmx.Po
#	$(AM_V_CPPAS)source='audio/audio_mmx.S' object='audio/gens-audio_mmx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CCASFLAGS) $(CCASFLAGS) -c -o audio/gens-audio_mmx.obj `if test -f 'audio/audio_mmx.S'; then $(CYGPATH_W) 'audio/audio_mmx.S'; else $(CYGPATH_W) '$(srcdir)/audio/audio_mmx.S'; fi`

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

gens_core/cpu/68k/gens-cpu_68k.o: gens_core/cpu/68k/cpu_68k.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT gens_core/cpu/68k/gens-cpu_68k.o -MD -MP -MF gens_core/cpu/68k/$(DEPDIR)/gens-cpu_68k.Tpo -c -o gens_core/cpu/68k/gens-cpu_68k.o `test -f 'gens_core/cpu/68k/cpu_68k.c' || echo '$(srcdir)/'`gens_core/cpu/68k/cpu_68k.c
	$(AM_V_at)$(am__mv) gens_core/cpu/68k/$(DEPDIR)/gens-cpu_68k.Tpo gens_core/cpu/68k/$(DEPDIR)/gens-cpu_68k.Po
#	$(AM_V_CC)source='gens_core/cpu/68k/cpu_68k.c' object='gens_core/cpu/68k/gens-cpu_68k.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o gens_core/cpu/68k/gens-cpu_68k.o `test -f 'gens_core/cpu/68k/cpu_68k.c' || echo '$(srcdir)/'`gens_core/cpu/68k/cpu_68k.c

gens_core/cpu/68k/gens-cpu_68k.obj: gens_core/cpu/68k/cpu_68k.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT gens_core/cpu/68k/gens-cpu_68k.obj -MD -MP -MF gens_core/cpu/68k/$(DEPDIR)/gens-cpu_68k.Tpo -c -o gens_core/cpu/68k/gens-cpu_68k.obj `if test -f 'gens_core/cpu/68k/cpu_68k.c'; then $(CYGPATH_W) 'gens_core/cpu/68k/cpu_68k.c'; else $(CYGPATH_W) '$(srcdir)/gens_core/cpu/68k/cpu_68k.c'; fi`
	$(AM_V_at)$(am__mv) gens_core/cpu/68k/$(DEPDIR)/gens-cpu_68k.Tpo gens_core/cpu/68k/$(DEPDIR)/gens-cpu_68k.Po
#	$(AM_V_CC)source='gens_core/cpu/68k/cpu_68k.c' object='gens_core/cpu/68k/gens-cpu_68k.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o gens_core/cpu/68k/gens-cpu_68k.obj `if test -f 'gens_core/cpu/68k/cpu_68k.c'; then $(CYGPATH_W) 'gens_core/cpu/68k/cpu_68k.c'; else $(CYGPATH_W) '$(srcdir)/gens_core/cpu/68k/cpu_68k.c'; fi`

gens_core/cpu/sh2/gens-cpu_sh2.o: gens_core/cpu/sh2/cpu_sh2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT gens_core/cpu/sh2/gens-cpu_sh2.o -MD -MP -MF gens_core/cpu/sh2/$(DEPDIR)/gens-cpu_sh2.Tpo -c -o gens_core/cpu/sh2/gens-cpu_sh2.o `test -f 'gens_core/cpu/sh2/cpu_sh2.c' || echo '$(srcdir)/'`gens_core/cpu/sh2/cpu_sh2.c
	$(AM_V_at)$(am__mv) gens_core/cpu/sh2/$(DEPDIR)/gens-cpu_sh2.Tpo gens_core/cpu/sh2/$(DEPDIR)/gens-cpu_sh2.Po
#	$(AM_V_CC)source='gens_core/cpu/sh2/cpu_sh2.c' object='gens_core/cpu/sh2/gens-cpu_sh2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o gens_core/cpu/sh2/gens-cpu_sh2.o `test -f 'gens_core/cpu/sh2/cpu_sh2.c' || echo '$(srcdir)/'`gens_core/cpu/sh2/cpu_sh2.c

gens_core/cpu/sh2/gens-cpu_sh2.obj: gens_core/cpu/sh2/cpu_sh2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT gens_core/cpu/sh2/gens-cpu_sh2.obj -MD -MP -MF gens_core/cpu/sh2/$(DEPDIR)/gens-cpu_sh2.Tpo -c -o gens_core/cpu/sh2/gens-cpu_sh2.obj `if test -f 'gens_core/cpu/sh2/cpu_sh2.c'; then $(CYGPATH_W) 'gens_core/cpu/sh2/cpu_sh2.c'; else $(CYGPATH_W) '$(srcdir)/gens_core/cpu/sh2/cpu_sh2.c'; fi`
	$(AM_V_at)$(am__mv) gens_core/cpu/sh2/$(DEPDIR)/gens-cpu_sh2.Tpo gens_core/cpu/sh2/$(DEPDIR)/gens-cpu_sh2.Po
#	$(AM_V_CC)source='gens_core/cpu/sh2/cpu_sh2.c' object='gens_core/cpu/sh2/gens-cpu_sh2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o gens_core/cpu/sh2/gens-cpu_sh2.obj `if test -f 'gens_core/cpu/sh2/cpu_sh2.c'; then $(CYGPATH_W) 'gens_core/cpu/sh2/cpu_sh2.c'; else $(CYGPATH_W) '$(srcdir)/gens_core/cpu/sh2/cpu_sh2.c'; fi`

gens_core/cpu/sh2/gens-sh2.o: gens_core/cpu/sh2/sh2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT gens_core/cpu/sh2/gens-sh2.o -MD -MP -MF gens_core/cpu/sh2/$(DEPDIR)/gens-sh2.Tpo -c -o gens_core/cpu/sh2/gens-sh2.o `test -f 'gens_core/cpu/sh2/sh2.c' || echo '$(srcdir)/'`gens_core/cpu/sh2/sh2.c
	$(AM_V_at)$(am__mv) gens_core/cpu/sh2/$(DEPDIR)/gens-sh2.Tpo gens_core/cpu/sh2/$(DEPDIR)/gens-sh2.Po
#	$(AM_V_CC)source='gens_core/cpu/sh2/sh2.c' object='gens_core/cpu/sh2/gens-sh2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o gens_core/cpu/sh2/gens-sh2.o `test -f 'gens_core/cpu/sh2/sh2.c' || echo '$(srcdir)/'`gens_core/cpu/sh2/sh2.c

gens_core/cpu/sh2/gens-sh2.obj: gens_core/cpu/sh2/sh2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT gens_core/cpu/sh2/gens-sh2.obj -MD -MP -MF gens_core/cpu/sh2/$(DEPDIR)/gens-sh2.Tpo -c -o gens_core/cpu/sh2/gens-sh2.obj `if test -f 'gens_core/cpu/sh2/sh2.c'; then $(CYGPATH_W) 'gens_core/cpu/sh2/sh2.c'; else $(CYGPATH_W) '$(srcdir)/gens_core/cpu/sh2/sh2.c'; fi`
	$(AM_V_at)$(am__mv) gens_core/cpu/sh2/$(DEPDIR)/gens-sh2.Tpo gens_core/cpu/sh2/$(DEPDIR)/gens-sh2.Po
#	$(AM_V_CC)source='gens_core/cpu/sh2/sh2.c' object='gens_core/cpu/sh2/gens-sh2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o gens_core/cpu/sh2/gens-sh2.obj `if test -f 'gens_core/cpu/sh2/sh2.c'; then $(CYGPATH_W) 'gens_core/cpu/sh2/sh2.c'; else $(CYGPATH_W) '$(srcdir)/gens_core/cpu/sh2/sh2.c'; fi`

gens_core/cpu/z80/gens-cpu_z80.o: gens_core/cpu/z80/cpu_z80.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT gens_core/cpu/z80/gens-cpu_z80.o -MD -MP -MF gens_core/cpu/z80/$(DEPDIR)/gens-cpu_z80.Tpo -c -o gens_core/cpu/z80/gens-cpu_z80.o `test -f 'gens_core/cpu/z80/cpu_z80.c' || echo '$(srcdir)/'`gens_core/cpu/z80/cpu_z80.c
	$(AM_V_at)$(am__mv) gens_core/cpu/z80/$(DEPDIR)/gens-cpu_z80.Tpo gens_core/cpu/z80/$(DEPDIR)/gens-cpu_z80.Po
#	$(AM_V_CC)source='gens_core/cpu/z80/cpu_z80.c' object='gens_core/cpu/z80/gens-cpu_z80.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o gens_core/cpu/z80/gens-cpu_z80.o `test -f 'gens_core/cpu/z80/cpu_z80.c' || echo '$(srcdir)/'`gens_core/cpu/z80/cpu_z80.c

gens_core/cpu/z80/gens-cpu_z80.obj: gens_core/cpu/z80/cpu_z80.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT gens_core/cpu/z80/gens-cpu_z80.obj -MD -MP -MF gens_core/cpu/z80/$(DEPDIR)/gens-cpu_z80.Tpo -c -o gens_core/cpu/z80/gens-cpu_z80.obj `if test -f 'gens_core/cpu/z80/cpu_z80.c'; then $(CYGPATH_W) 'gens_core/cpu/z80/cpu_z80.c'; else $(CYGPATH_W) '$(srcdir)/gens_core/cpu/z80/cpu_z80.c'; fi`
	$(AM_V_at)$(am__mv) gens_core/cpu/z80/$(DEPDIR)/gens-cpu_z80.Tpo gens_core/cpu/z80/$(DEPDIR)/gens-cpu_z80.Po
#	$(AM_V_CC)source='gens_core/cpu/z80/cpu_z80.c' object='gens_core/cpu/z80/gens-cpu_z80.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o gens_core/cpu/z80/gens-cpu_z80.obj `if test -f 'gens_core/cpu/z80/cpu_z80.c'; then $(CYGPATH_W) 'gens_core/cpu/z80/cpu_z80.c'; else $(CYGPATH_W) '$(srcdir)/gens_core/cpu/z80/cpu_z80.c'; fi`

gens_core/sound/gens-pcm.o: gens_core/sound/pcm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT gens_core/sound/gens-pcm.o -MD -MP -MF gens_core/sound/$(DEPDIR)/gens-pcm.Tpo -c -o gens_core/sound/gens-pcm.o `test -f 'gens_core/sound/pcm.c' || echo '$(srcdir)/'`gens_core/sound/pcm.c
	$(AM_V_at)$(am__mv) gens_core/sound/$(DEPDIR)/gens-pcm.Tpo gens_core/sound/$(DEPDIR)/gens-pcm.Po
#	$(AM_V_CC)source='gens_core/sound/pcm.c' object='gens_core/sound/gens-pcm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o gens_core/sound/gens-pcm.o `test -f 'gens_core/sound/pcm.c' || echo '$(srcdir)/'`gens_core/sound/pcm.c

gens_core/sound/gens-pcm.obj: gens_core/sound/pcm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT gens_core/sound/gens-pcm.obj -MD -MP -MF gens_core/sound/$(DEPDIR)/gens-pcm.Tpo -c -o gens_core/sound/gens-pcm.obj `if test -f 'gens_core/sound/pcm.c'; then $(CYGPATH_W) 'gens_core/sound/pcm.c'; else $(CYGPATH_W) '$(srcdir)/gens_core/sound/pcm.c'; fi`
	$(AM_V_at)$(am__mv) gens_core/sound/$(DEPDIR)/gens-pcm.Tpo gens_core/sound/$(DEPDIR)/gens-pcm.Po
#	$(AM_V_CC)source='gens_core/sound/pcm.c' object='gens_core/sound/gens-pcm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o gens_core/sound/gens-pcm.obj `if test -f 'gens_core/sound/pcm.c'; then $(CYGPATH_W) 'gens_core/sound/pcm.c'; else $(CYGPATH_W) '$(srcdir)/gens_core/sound/pcm.c'; fi`

gens_core/sound/gens-psg.o: gens_core/sound/psg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT gens_core/sound/gens-psg.o -MD -MP -MF gens_core/sound/$(DEPDIR)/gens-psg.Tpo -c -o gens_core/sound/gens-psg.o `test -f 'gens_core/sound/psg.c' || echo '$(srcdir)/'`gens_core/sound/psg.c
	$(AM_V_at)$(am__mv) gens_core/sound/$(DEPDIR)/gens-psg.Tpo gens_core/sound/$(DEPDIR)/gens-psg.Po
#	$(AM_V_CC)source='gens_core/sound/psg.c' object='gens_core/sound/gens-psg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o gens_core/sound/gens-psg.o `test -f 'gens_core/sound/psg.c' || echo '$(srcdir)/'`gens_core/sound/psg.c

gens_core/sound/gens-psg.obj: gens_core/sound/psg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT gens_core/sound/gens-psg.obj -MD -MP -MF gens_core/sound/$(DEPDIR)/gens-psg.Tpo -c -o gens_core/sound/gens-psg.obj `if test -f 'gens_core/sound/psg.c'; then $(CYGPATH_W) 'gens_core/sound/psg.c'; else $(CYGPATH_W) '$(srcdir)/gens_core/sound/psg.c'; fi`
	$(AM_V_at)$(am__mv) gens_core/sound/$(DEPDIR)/gens-psg.Tpo gens_core/sound/$(DEPDIR)/gens-psg.Po
#	$(AM_V_CC)source='gens_core/sound/psg.c' object='gens_core/sound/gens-psg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o gens_core/sound/gens-psg.obj `if test -f 'gens_core/sound/psg.c'; then $(CYGPATH_W) 'gens_core/sound/psg.c'; else $(CYGPATH_W) '$(srcdir)/gens_core/sound/psg.c'; fi`

gens_core/sound/gens-pwm.o: gens_core/sound/pwm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT gens_core/sound/gens-pwm.o -MD -MP -MF gens_core/sound/$(DEPDIR)/gens-pwm.Tpo -c -o gens_core/sound/gens-pwm.o `test -f 'gens_core/sound/pwm.c' || echo '$(srcdir)/'`gens_core/sound/pwm.c
	$(AM_V_at)$(am__mv) gens_core/sound/$(DEPDIR)/gens-pwm.Tpo gens_core/sound/$(DEPDIR)/gens-pwm.Po
#	$(AM_V_CC)source='gens_core/sound/pwm.c' object='gens_core/sound/gens-pwm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o gens_core/sound/gens-pwm.o `test -f 'gens_core/sound/pwm.c' || echo '$(srcdir)/'`gens_core/sound/pwm.c

gens_core/sound/gens-pwm.obj: gens_core/sound/pwm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT gens_core/sound/gens-pwm.obj -MD -MP -MF gens_core/sound/$(DEPDIR)/gens-pwm.Tpo -c -o gens_core/sound/gens-pwm.obj `if test -f 'gens_core/sound/pwm.c'; then $(CYGPATH_W) 'gens_core/sound/pwm.c'; else $(CYGPATH_W) '$(srcdir)/gens_core/sound/pwm.c'; fi`
	$(AM_V_at)$(am__mv) gens_core/sound/$(DEPDIR)/gens-pwm.Tpo gens_core/sound/$(DEPDIR)/gens-pwm.Po
#	$(AM_V_CC)source='gens_core/sound/pwm.c' object='gens_core/sound/gens-pwm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o gens_core/sound/gens-pwm.obj `if test -f 'gens_core/sound/pwm.c'; then $(CYGPATH_W) 'gens_core/sound/pwm.c'; else $(CYGPATH_W) '$(srcdir)/gens_core/sound/pwm.c'; fi`

gens_core/mem/gens-mem_z80.o: gens_core/mem/mem_z80.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT gens_core/mem/gens-mem_z80.o -MD -MP -MF gens_core/mem/$(DEPDIR)/gens-mem_z80.Tpo -c -o gens_core/mem/gens-mem_z80.o `test -f 'gens_core/mem/mem_z80.c' || echo '$(srcdir)/'`gens_core/mem/mem_z80.c
	$(AM_V_at)$(am__mv) gens_core/mem/$(DEPDIR)/gens-mem_z80.Tpo gens_core/mem/$(DEPDIR)/gens-mem_z80.Po
#	$(AM_V_CC)source='gens_core/mem/mem_z80.c' object='gens_core/mem/gens-mem_z80.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o gens_core/mem/gens-mem_z80.o `test -f 'gens_core/mem/mem_z80.c' || echo '$(srcdir)/'`gens_core/mem/mem_z80.c

gens_core/mem/gens-mem_z80.obj: gens_core/mem/mem_z80.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT gens_core/mem/gens-mem_z80.obj -MD -MP -MF gens_core/mem/$(DEPDIR)/gens-mem_z80.Tpo -c -o gens_core/mem/gens-mem_z80.obj `if test -f 'gens_core/mem/mem_z80.c'; then $(CYGPATH_W) 'gens_core/mem/mem_z80.c'; else $(CYGPATH_W) '$(srcdir)/gens_core/mem/mem_z80.c'; fi`
	$(AM_V_at)$(am__mv) gens_core/mem/$(DEPDIR)/gens-mem_z80.Tpo gens_core/mem/$(DEPDIR)/gens-mem_z80.Po
#	$(AM_V_CC)source='gens_core/mem/mem_z80.c' object='gens_core/mem/gens-mem_z80.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o gens_core/mem/gens-mem_z80.obj `if test -f 'gens_core/mem/mem_z80.c'; then $(CYGPATH_W) 'gens_core/mem/mem_z80.c'; else $(CYGPATH_W) '$(srcdir)/gens_core/mem/mem_z80.c'; fi`

gens_core/misc/gens-cpuflags.o: gens_core/misc/cpuflags.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT gens_core/misc/gens-cpuflags.o -MD -MP -MF gens_core/misc/$(DEPDIR)/gens-cpuflags.Tpo -c -o gens_core/misc/gens-cpuflags.o `test -f 'gens_core/misc/cpuflags.c' || echo '$(srcdir)/'`gens_core/misc/cpuflags.c
	$(AM_V_at)$(am__mv) gens_core/misc/$(DEPDIR)/gens-cpuflags.Tpo gens_core/misc/$(DEPDIR)/gens-cpuflags.Po
#	$(AM_V_CC)source='gens_core/misc/cpuflags.c' object='gens_core/misc/gens-cpuflags.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o gens_core/misc/gens-cpuflags.o `test -f 'gens_core/misc/cpuflags.c' || echo '$(srcdir)/'`gens_core/misc/cpuflags.c

gens_core/misc/gens-cpuflags.obj: gens_core/misc/cpuflags.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT gens_core/misc/gens-cpuflags.obj -MD -MP -MF gens_core/misc/$(DEPDIR)/gens-cpuflags.Tpo -c -o gens_core/misc/gens-cpuflags.obj `if test -f 'gens_core/misc/cpuflags.c'; then $(CYGPATH_W) 'gens_core/misc/cpuflags.c'; else $(CYGPATH_W) '$(srcdir)/gens_core/misc/cpuflags.c'; fi`
	$(AM_V_at)$(am__mv) gens_core/misc/$(DEPDIR)/gens-cpuflags.Tpo gens_core/misc/$(DEPDIR)/gens-cpuflags.Po
#	$(AM_V_CC)source='gens_core/misc/cpuflags.c' object='gens_core/misc/gens-cpuflags.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o gens_core/misc/gens-cpuflags.obj `if test -f 'gens_core/misc/cpuflags.c'; then $(CYGPATH_W) 'gens_core/misc/cpuflags.c'; else $(CYGPATH_W) '$(srcdir)/gens_core/misc/cpuflags.c'; fi`

gens_core/io/gens-io.o: gens_core/io/io.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT gens_core/io/gens-io.o -MD -MP -MF gens_core/io/$(DEPDIR)/gens-io.Tpo -c -o gens_core/io/gens-io.o `test -f 'gens_core/io/io.c' || echo '$(srcdir)/'`gens_core/io/io.c
	$(AM_V_at)$(am__mv) gens_core/io/$(DEPDIR)/gens-io.Tpo gens_core/io/$(DEPDIR)/gens-io.Po
#	$(AM_V_CC)source='gens_core/io/io.c' object='gens_core/io/gens-io.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o gens_core/io/gens-io.o `test -f 'gens_core/io/io.c' || echo '$(srcdir)/'`gens_core/io/io.c

gens_core/io/gens-io.obj: gens_core/io/io.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT gens_core/io/gens-io.obj -MD -MP -MF gens_core/io/$(DEPDIR)/gens-io.Tpo -c -o gens_core/io/gens-io.obj `if test -f 'gens_core/io/io.c'; then $(CYGPATH_W) 'gens_core/io/io.c'; else $(CYGPATH_W) '$(srcdir)/gens_core/io/io.c'; fi`
	$(AM_V_at)$(am__mv) gens_core/io/$(DEPDIR)/gens-io.Tpo gens_core/io/$(DEPDIR)/gens-io.Po
#	$(AM_V_CC)source='gens_core/io/io.c' object='gens_core/io/gens-io.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o gens_core/io/gens-io.obj `if test -f 'gens_core/io/io.c'; then $(CYGPATH_W) 'gens_core/io/io.c'; else $(CYGPATH_W) '$(srcdir)/gens_core/io/io.c'; fi`

gens_core/io/gens-io_teamplayer.o: gens_core/io/io_teamplayer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT gens_core/io/gens-io_teamplayer.o -MD -MP -MF gens_core/io/$(DEPDIR)/gens-io_teamplayer.Tpo -c -o gens_core/io/gens-io_teamplayer.o `test -f 'gens_core/io/io_teamplayer.c' || echo '$(srcdir)/'`gens_core/io/io_teamplayer.c
	$(AM_V_at)$(am__mv) gens_core/io/$(DEPDIR)/gens-io_teamplayer.Tpo gens_core/io/$(DEPDIR)/gens-io_teamplayer.Po
#	$(AM_V_CC)source='gens_core/io/io_teamplayer.c' object='gens_core/io/gens-io_teamplayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o gens_core/io/gens-io_teamplayer.o `test -f 'gens_core/io/io_teamplayer.c' || echo '$(srcdir)/'`gens_core/io/io_teamplayer.c

gens_core/io/gens-io_teamplayer.obj: gens_core/io/io_teamplayer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT gens_core/io/gens-io_teamplayer.obj -MD -MP -MF gens_core/io/$(DEPDIR)/gens-io_teamplayer.Tpo -c -o gens_core/io/gens-io_teamplayer.obj `if test -f 'gens_core/io/io_teamplayer.c'; then $(CYGPATH_W) 'gens_core/io/io_teamplayer.c'; else $(CYGPATH_W) '$(srcdir)/gens_core/io/io_teamplayer.c'; fi`
	$(AM_V_at)$(am__mv) gens_core/io/$(DEPDIR)/gens-io_teamplayer.Tpo gens_core/io/$(DEPDIR)/gens-io_teamplayer.Po
#	$(AM_V_CC)source='gens_core/io/io_teamplayer.c' object='gens_core/io/gens-io_teamplayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o gens_core/io/gens-io_teamplayer.obj `if test -f 'gens_core/io/io_teamplayer.c'; then $(CYGPATH_W) 'gens_core/io/io_teamplayer.c'; else $(CYGPATH_W) '$(srcdir)/gens_core/io/io_teamplayer.c'; fi`

gens_core/vdp/gens-vdp_io.o: gens_core/vdp/vdp_io.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT gens_core/vdp/gens-vdp_io.o -MD -MP -MF gens_core/vdp/$(DEPDIR)/gens-vdp_io.Tpo -c -o gens_core/vdp/gens-vdp_io.o `test -f 'gens_core/vdp/vdp_io.c' || echo '$(srcdir)/'`gens_core/vdp/vdp_io.c
	$(AM_V_at)$(am__mv) gens_core/vdp/$(DEPDIR)/gens-vdp_io.Tpo gens_core/vdp/$(DEPDIR)/gens-vdp_io.Po
#	$(AM_V_CC)source='gens_core/vdp/vdp_io.c' object='gens_core/vdp/gens-vdp_io.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o gens_core/vdp/gens-vdp_io.o `test -f 'gens_core/vdp/vdp_io.c' || echo '$(srcdir)/'`gens_core/vdp/vdp_io.c

gens_core/vdp/gens-vdp_io.obj: gens_core/vdp/vdp_io.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT gens_core/vdp/gens-vdp_io.obj -MD -MP -MF gens_core/vdp/$(DEPDIR)/gens-vdp_io.Tpo -c -o gens_core/vdp/gens-vdp_io.obj `if test -f 'gens_core/vdp/vdp_io.c'; then $(CYGPATH_W) 'gens_core/vdp/vdp_io.c'; else $(CYGPATH_W) '$(srcdir)/gens_core/vdp/vdp_io.c'; fi`
	$(AM_V_at)$(am__mv) gens_core/vdp/$(DEPDIR)/gens-vdp_io.Tpo gens_core/vdp/$(DEPDIR)/gens-vdp_io.Po
#	$(AM_V_CC)source='gens_core/vdp/vdp_io.c' object='gens_core/vdp/gens-vdp_io.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o gens_core/vdp/gens-vdp_io.obj `if test -f 'gens_core/vdp/vdp_io.c'; then $(CYGPATH_W) 'gens_core/vdp/vdp_io.c'; else $(CYGPATH_W) '$(srcdir)/gens_core/vdp/vdp_io.c'; fi`

gens_core/vdp/gens-vdp_32x.o: gens_core/vdp/vdp_32x.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT gens_core/vdp/gens-vdp_32x.o -MD -MP -MF gens_core/vdp/$(DEPDIR)/gens-vdp_32x.Tpo -c -o gens_core/vdp/gens-vdp_32x.o `test -f 'gens_core/vdp/vdp_32x.c' || echo '$(srcdir)/'`gens_core/vdp/vdp_32x.c
	$(AM_V_at)$(am__mv) gens_core/vdp/$(DEPDIR)/gens-vdp_32x.Tpo gens_core/vdp/$(DEPDIR)/gens-vdp_32x.Po
#	$(AM_V_CC)source='gens_core/vdp/vdp_32x.c' object='gens_core/vdp/gens-vdp_32x.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o gens_core/vdp/gens-vdp_32x.o `test -f 'gens_core/vdp/vdp_32x.c' || echo '$(srcdir)/'`gens_core/vdp/vdp_32x.c

gens_core/vdp/gens-vdp_32x.obj: gens_core/vdp/vdp_32x.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT gens_core/vdp/gens-vdp_32x.obj -MD -MP -MF gens_core/vdp/$(DEPDIR)/gens-vdp_32x.Tpo -c -o gens_core/vdp/gens-vdp_32x.obj `if test -f 'gens_core/vdp/vdp_32x.c'; then $(CYGPATH_W) 'gens_core/vdp/vdp_32x.c'; else $(CYGPATH_W) '$(srcdir)/gens_core/vdp/vdp_32x.c'; fi`
	$(AM_V_at)$(am__mv) gens_core/vdp/$(DEPDIR)/gens-vdp_32x.Tpo gens_core/vdp/$(DEPDIR)/gens-vdp_32x.Po
#	$(AM_V_CC)source='gens_core/vdp/vdp_32x.c' object='gens_core/vdp/gens-vdp_32x.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o gens_core/vdp/gens-vdp_32x.obj `if test -f 'gens_core/vdp/vdp_32x.c'; then $(CYGPATH_W) 'gens_core/vdp/vdp_32x.c'; else $(CYGPATH_W) '$(srcdir)/gens_core/vdp/vdp_32x.c'; fi`

gens_core/vdp/gens-vdp_32x_32bit.o: gens_core/vdp/vdp_32x_32bit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT gens_core/vdp/gens-vdp_32x_32bit.o -MD -MP -MF gens_core/vdp/$(DEPDIR)/gens-vdp_32x_32bit.Tpo -c -o gens_core/vdp/gens-vdp_32x_32bit.o `test -f 'gens_core/vdp/vdp_32x_32bit.c' || echo '$(srcdir)/'`gens_core/vdp/vdp_32x_32bit.c
	$(AM_V_at)$(am__mv) gens_core/vdp/$(DEPDIR)/gens-vdp_32x_32bit.Tpo gens_core/vdp/$(DEPDIR)/gens-vdp_32x_32bit.Po
#	$(AM_V_CC)source='gens_core/vdp/vdp_32x_32bit.c' object='gens_core/vdp/gens-vdp_32x_32bit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o gens_core/vdp/gens-vdp_32x_32bit.o `test -f 'gens_core/vdp/vdp_32x_32bit.c' || echo '$(srcdir)/'`gens_core/vdp/vdp_32x_32bit.c

gens_core/vdp/gens-vdp_32x_32bit.obj: gens_core/vdp/vdp_32x_32bit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT gens_core/vdp/gens-vdp_32x_32bit.obj -MD -MP -MF gens_core/vdp/$(DEPDIR)/gens-vdp_32x_32bit.Tpo -c -o gens_core/vdp/gens-vdp_32x_32bit.obj `if test -f 'gens_core/vdp/vdp_32x_32bit.c'; then $(CYGPATH_W) 'gens_core/vdp/vdp_32x_32bit.c'; else $(CYGPATH_W) '$(srcdir)/gens_core/vdp/vdp_32x_32bit.c'; fi`
	$(AM_V_at)$(am__mv) gens_core/vdp/$(DEPDIR)/gens-vdp_32x_32bit.Tpo gens_core/vdp/$(DEPDIR)/gens-vdp_32x_32bit.Po
#	$(AM_V_CC)source='gens_core/vdp/vdp_32x_32bit.c' object='gens_core/vdp/gens-vdp_32x_32bit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o gens_core/vdp/gens-vdp_32x_32bit.obj `if test -f 'gens_core/vdp/vdp_32x_32bit.c'; then $(CYGPATH_W) 'gens_core/vdp/vdp_32x_32bit.c'; else $(CYGPATH_W) '$(srcdir)/gens_core/vdp/vdp_32x_32bit.c'; fi`

macros/gens-log_msg.o: macros/log_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT macros/gens-log_msg.o -MD -MP -MF macros/$(DEPDIR)/gens-log_msg.Tpo -c -o macros/gens-log_msg.o `test -f 'macros/log_msg.c' || echo '$(srcdir)/'`macros/log_msg.c
	$(AM_V_at)$(am__mv) macros/$(DEPDIR)/gens-log_msg.Tpo macros/$(DEPDIR)/gens-log_msg.Po
#	$(AM_V_CC)source='macros/log_msg.c' object='macros/gens-log_msg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o macros/gens-log_msg.o `test -f 'macros/log_msg.c' || echo '$(srcdir)/'`macros/log_msg.c

macros/gens-log_msg.obj: macros/log_msg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT macros/gens-log_msg.obj -MD -MP -MF macros/$(DEPDIR)/gens-log_msg.Tpo -c -o macros/gens-log_msg.obj `if test -f 'macros/log_msg.c'; then $(CYGPATH_W) 'macros/log_msg.c'; else $(CYGPATH_W) '$(srcdir)/macros/log_msg.c'; fi`
	$(AM_V_at)$(am__mv) macros/$(DEPDIR)/gens-log_msg.Tpo macros/$(DEPDIR)/gens-log_msg.Po
#	$(AM_V_CC)source='macros/log_msg.c' object='macros/gens-log_msg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o macros/gens-log_msg.obj `if test -f 'macros/log_msg.c'; then $(CYGPATH_W) 'macros/log_msg.c'; else $(CYGPATH_W) '$(srcdir)/macros/log_msg.c'; fi`

segacd/gens-cd_file.o: segacd/cd_file.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT segacd/gens-cd_file.o -MD -MP -MF segacd/$(DEPDIR)/gens-cd_file.Tpo -c -o segacd/gens-cd_file.o `test -f 'segacd/cd_file.c' || echo '$(srcdir)/'`segacd/cd_file.c
	$(AM_V_at)$(am__mv) segacd/$(DEPDIR)/gens-cd_file.Tpo segacd/$(DEPDIR)/gens-cd_file.Po
#	$(AM_V_CC)source='segacd/cd_file.c' object='segacd/gens-cd_file.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o segacd/gens-cd_file.o `test -f 'segacd/cd_file.c' || echo '$(srcdir)/'`segacd/cd_file.c

segacd/gens-cd_file.obj: segacd/cd_file.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT segacd/gens-cd_file.obj -MD -MP -MF segacd/$(DEPDIR)/gens-cd_file.Tpo -c -o segacd/gens-cd_file.obj `if test -f 'segacd/cd_file.c'; then $(CYGPATH_W) 'segacd/cd_file.c'; else $(CYGPATH_W) '$(srcdir)/segacd/cd_file.c'; fi`
	$(AM_V_at)$(am__mv) segacd/$(DEPDIR)/gens-cd_file.Tpo segacd/$(DEPDIR)/gens-cd_file.Po
#	$(AM_V_CC)source='segacd/cd_file.c' object='segacd/gens-cd_file.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o segacd/gens-cd_file.obj `if test -f 'segacd/cd_file.c'; then $(CYGPATH_W) 'segacd/cd_file.c'; else $(CYGPATH_W) '$(srcdir)/segacd/cd_file.c'; fi`

segacd/gens-lc89510.o: segacd/lc89510.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT segacd/gens-lc89510.o -MD -MP -MF segacd/$(DEPDIR)/gens-lc89510.Tpo -c -o segacd/gens-lc89510.o `test -f 'segacd/lc89510.c' || echo '$(srcdir)/'`segacd/lc89510.c
	$(AM_V_at)$(am__mv) segacd/$(DEPDIR)/gens-lc89510.Tpo segacd/$(DEPDIR)/gens-lc89510.Po
#	$(AM_V_CC)source='segacd/lc89510.c' object='segacd/gens-lc89510.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o segacd/gens-lc89510.o `test -f 'segacd/lc89510.c' || echo '$(srcdir)/'`segacd/lc89510.c

segacd/gens-lc89510.obj: segacd/lc89510.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT segacd/gens-lc89510.obj -MD -MP -MF segacd/$(DEPDIR)/gens-lc89510.Tpo -c -o segacd/gens-lc89510.obj `if test -f 'segacd/lc89510.c'; then $(CYGPATH_W) 'segacd/lc89510.c'; else $(CYGPATH_W) '$(srcdir)/segacd/lc89510.c'; fi`
	$(AM_V_at)$(am__mv) segacd/$(DEPDIR)/gens-lc89510.Tpo segacd/$(DEPDIR)/gens-lc89510.Po
#	$(AM_V_CC)source='segacd/lc89510.c' object='segacd/gens-lc89510.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o segacd/gens-lc89510.obj `if test -f 'segacd/lc89510.c'; then $(CYGPATH_W) 'segacd/lc89510.c'; else $(CYGPATH_W) '$(srcdir)/segacd/lc89510.c'; fi`

ui/common/gens/gens-gens_menu.o: ui/common/gens/gens_menu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/common/gens/gens-gens_menu.o -MD -MP -MF ui/common/gens/$(DEPDIR)/gens-gens_menu.Tpo -c -o ui/common/gens/gens-gens_menu.o `test -f 'ui/common/gens/gens_menu.c' || echo '$(srcdir)/'`ui/common/gens/gens_menu.c
	$(AM_V_at)$(am__mv) ui/common/gens/$(DEPDIR)/gens-gens_menu.Tpo ui/common/gens/$(DEPDIR)/gens-gens_menu.Po
#	$(AM_V_CC)source='ui/common/gens/gens_menu.c' object='ui/common/gens/gens-gens_menu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/common/gens/gens-gens_menu.o `test -f 'ui/common/gens/gens_menu.c' || echo '$(srcdir)/'`ui/common/gens/gens_menu.c

ui/common/gens/gens-gens_menu.obj: ui/common/gens/gens_menu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/common/gens/gens-gens_menu.obj -MD -MP -MF ui/common/gens/$(DEPDIR)/gens-gens_menu.Tpo -c -o ui/common/gens/gens-gens_menu.obj `if test -f 'ui/common/gens/gens_menu.c'; then $(CYGPATH_W) 'ui/common/gens/gens_menu.c'; else $(CYGPATH_W) '$(srcdir)/ui/common/gens/gens_menu.c'; fi`
	$(AM_V_at)$(am__mv) ui/common/gens/$(DEPDIR)/gens-gens_menu.Tpo ui/common/gens/$(DEPDIR)/gens-gens_menu.Po
#	$(AM_V_CC)source='ui/common/gens/gens_menu.c' object='ui/common/gens/gens-gens_menu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/common/gens/gens-gens_menu.obj `if test -f 'ui/common/gens/gens_menu.c'; then $(CYGPATH_W) 'ui/common/gens/gens_menu.c'; else $(CYGPATH_W) '$(srcdir)/ui/common/gens/gens_menu.c'; fi`

ui/common/gens/gens-gens_window_sync.o: ui/common/gens/gens_window_sync.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/common/gens/gens-gens_window_sync.o -MD -MP -MF ui/common/gens/$(DEPDIR)/gens-gens_window_sync.Tpo -c -o ui/common/gens/gens-gens_window_sync.o `test -f 'ui/common/gens/gens_window_sync.c' || echo '$(srcdir)/'`ui/common/gens/gens_window_sync.c
	$(AM_V_at)$(am__mv) ui/common/gens/$(DEPDIR)/gens-gens_window_sync.Tpo ui/common/gens/$(DEPDIR)/gens-gens_window_sync.Po
#	$(AM_V_CC)source='ui/common/gens/gens_window_sync.c' object='ui/common/gens/gens-gens_window_sync.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/common/gens/gens-gens_window_sync.o `test -f 'ui/common/gens/gens_window_sync.c' || echo '$(srcdir)/'`ui/common/gens/gens_window_sync.c

ui/common/gens/gens-gens_window_sync.obj: ui/common/gens/gens_window_sync.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/common/gens/gens-gens_window_sync.obj -MD -MP -MF ui/common/gens/$(DEPDIR)/gens-gens_window_sync.Tpo -c -o ui/common/gens/gens-gens_window_sync.obj `if test -f 'ui/common/gens/gens_window_sync.c'; then $(CYGPATH_W) 'ui/common/gens/gens_window_sync.c'; else $(CYGPATH_W) '$(srcdir)/ui/common/gens/gens_window_sync.c'; fi`
	$(AM_V_at)$(am__mv) ui/common/gens/$(DEPDIR)/gens-gens_window_sync.Tpo ui/common/gens/$(DEPDIR)/gens-gens_window_sync.Po
#	$(AM_V_CC)source='ui/common/gens/gens_window_sync.c' object='ui/common/gens/gens-gens_window_sync.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/common/gens/gens-gens_window_sync.obj `if test -f 'ui/common/gens/gens_window_sync.c'; then $(CYGPATH_W) 'ui/common/gens/gens_window_sync.c'; else $(CYGPATH_W) '$(srcdir)/ui/common/gens/gens_window_sync.c'; fi`

ui/common/gens-about_window_data.o: ui/common/about_window_data.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/common/gens-about_window_data.o -MD -MP -MF ui/common/$(DEPDIR)/gens-about_window_data.Tpo -c -o ui/common/gens-about_window_data.o `test -f 'ui/common/about_window_data.c' || echo '$(srcdir)/'`ui/common/about_window_data.c
	$(AM_V_at)$(am__mv) ui/common/$(DEPDIR)/gens-about_window_data.Tpo ui/common/$(DEPDIR)/gens-about_window_data.Po
#	$(AM_V_CC)source='ui/common/about_window_data.c' object='ui/common/gens-about_window_data.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/common/gens-about_window_data.o `test -f 'ui/common/about_window_data.c' || echo '$(srcdir)/'`ui/common/about_window_data.c

ui/common/gens-about_window_data.obj: ui/common/about_window_data.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/common/gens-about_window_data.obj -MD -MP -MF ui/common/$(DEPDIR)/gens-about_window_data.Tpo -c -o ui/common/gens-about_window_data.obj `if test -f 'ui/common/about_window_data.c'; then $(CYGPATH_W) 'ui/common/about_window_data.c'; else $(CYGPATH_W) '$(srcdir)/ui/common/about_window_data.c'; fi`
	$(AM_V_at)$(am__mv) ui/common/$(DEPDIR)/gens-about_window_data.Tpo ui/common/$(DEPDIR)/gens-about_window_data.Po
#	$(AM_V_CC)source='ui/common/about_window_data.c' object='ui/common/gens-about_window_data.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/common/gens-about_window_data.obj `if test -f 'ui/common/about_window_data.c'; then $(CYGPATH_W) 'ui/common/about_window_data.c'; else $(CYGPATH_W) '$(srcdir)/ui/common/about_window_data.c'; fi`

ui/common/gens-dir_window_common.o: ui/common/dir_window_common.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/common/gens-dir_window_common.o -MD -MP -MF ui/common/$(DEPDIR)/gens-dir_window_common.Tpo -c -o ui/common/gens-dir_window_common.o `test -f 'ui/common/dir_window_common.c' || echo '$(srcdir)/'`ui/common/dir_window_common.c
	$(AM_V_at)$(am__mv) ui/common/$(DEPDIR)/gens-dir_window_common.Tpo ui/common/$(DEPDIR)/gens-dir_window_common.Po
#	$(AM_V_CC)source='ui/common/dir_window_common.c' object='ui/common/gens-dir_window_common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/common/gens-dir_window_common.o `test -f 'ui/common/dir_window_common.c' || echo '$(srcdir)/'`ui/common/dir_window_common.c

ui/common/gens-dir_window_common.obj: ui/common/dir_window_common.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/common/gens-dir_window_common.obj -MD -MP -MF ui/common/$(DEPDIR)/gens-dir_window_common.Tpo -c -o ui/common/gens-dir_window_common.obj `if test -f 'ui/common/dir_window_common.c'; then $(CYGPATH_W) 'ui/common/dir_window_common.c'; else $(CYGPATH_W) '$(srcdir)/ui/common/dir_window_common.c'; fi`
	$(AM_V_at)$(am__mv) ui/common/$(DEPDIR)/gens-dir_window_common.Tpo ui/common/$(DEPDIR)/gens-dir_window_common.Po
#	$(AM_V_CC)source='ui/common/dir_window_common.c' object='ui/common/gens-dir_window_common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/common/gens-dir_window_common.obj `if test -f 'ui/common/dir_window_common.c'; then $(CYGPATH_W) 'ui/common/dir_window_common.c'; else $(CYGPATH_W) '$(srcdir)/ui/common/dir_window_common.c'; fi`

ui/common/gens-bmf_window_common.o: ui/common/bmf_window_common.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/common/gens-bmf_window_common.o -MD -MP -MF ui/common/$(DEPDIR)/gens-bmf_window_common.Tpo -c -o ui/common/gens-bmf_window_common.o `test -f 'ui/common/bmf_window_common.c' || echo '$(srcdir)/'`ui/common/bmf_window_common.c
	$(AM_V_at)$(am__mv) ui/common/$(DEPDIR)/gens-bmf_window_common.Tpo ui/common/$(DEPDIR)/gens-bmf_window_common.Po
#	$(AM_V_CC)source='ui/common/bmf_window_common.c' object='ui/common/gens-bmf_window_common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/common/gens-bmf_window_common.o `test -f 'ui/common/bmf_window_common.c' || echo '$(srcdir)/'`ui/common/bmf_window_common.c

ui/common/gens-bmf_window_common.obj: ui/common/bmf_window_common.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/common/gens-bmf_window_common.obj -MD -MP -MF ui/common/$(DEPDIR)/gens-bmf_window_common.Tpo -c -o ui/common/gens-bmf_window_common.obj `if test -f 'ui/common/bmf_window_common.c'; then $(CYGPATH_W) 'ui/common/bmf_window_common.c'; else $(CYGPATH_W) '$(srcdir)/ui/common/bmf_window_common.c'; fi`
	$(AM_V_at)$(am__mv) ui/common/$(DEPDIR)/gens-bmf_window_common.Tpo ui/common/$(DEPDIR)/gens-bmf_window_common.Po
#	$(AM_V_CC)source='ui/common/bmf_window_common.c' object='ui/common/gens-bmf_window_common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/common/gens-bmf_window_common.obj `if test -f 'ui/common/bmf_window_common.c'; then $(CYGPATH_W) 'ui/common/bmf_window_common.c'; else $(CYGPATH_W) '$(srcdir)/ui/common/bmf_window_common.c'; fi`

util/file/decompressor/gens-decompressor.o: util/file/decompressor/decompressor.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT util/file/decompressor/gens-decompressor.o -MD -MP -MF util/file/decompressor/$(DEPDIR)/gens-decompressor.Tpo -c -o util/file/decompressor/gens-decompressor.o `test -f 'util/file/decompressor/decompressor.c' || echo '$(srcdir)/'`util/file/decompressor/decompressor.c
	$(AM_V_at)$(am__mv) util/file/decompressor/$(DEPDIR)/gens-decompressor.Tpo util/file/decompressor/$(DEPDIR)/gens-decompressor.Po
#	$(AM_V_CC)source='util/file/decompressor/decompressor.c' object='util/file/decompressor/gens-decompressor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o util/file/decompressor/gens-decompressor.o `test -f 'util/file/decompressor/decompressor.c' || echo '$(srcdir)/'`util/file/decompressor/decompressor.c

util/file/decompressor/gens-decompressor.obj: util/file/decompressor/decompressor.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT util/file/decompressor/gens-decompressor.obj -MD -MP -MF util/file/decompressor/$(DEPDIR)/gens-decompressor.Tpo -c -o util/file/decompressor/gens-decompressor.obj `if test -f 'util/file/decompressor/decompressor.c'; then $(CYGPATH_W) 'util/file/decompressor/decompressor.c'; else $(CYGPATH_W) '$(srcdir)/util/file/decompressor/decompressor.c'; fi`
	$(AM_V_at)$(am__mv) util/file/decompressor/$(DEPDIR)/gens-decompressor.Tpo util/file/decompressor/$(DEPDIR)/gens-decompressor.Po
#	$(AM_V_CC)source='util/file/decompressor/decompressor.c' object='util/file/decompressor/gens-decompressor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o util/file/decompressor/gens-decompressor.obj `if test -f 'util/file/decompressor/decompressor.c'; then $(CYGPATH_W) 'util/file/decompressor/decompressor.c'; else $(CYGPATH_W) '$(srcdir)/util/file/decompressor/decompressor.c'; fi`

util/file/decompressor/gens-dummy.o: util/file/decompressor/dummy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT util/file/decompressor/gens-dummy.o -MD -MP -MF util/file/decompressor/$(DEPDIR)/gens-dummy.Tpo -c -o util/file/decompressor/gens-dummy.o `test -f 'util/file/decompressor/dummy.c' || echo '$(srcdir)/'`util/file/decompressor/dummy.c
	$(AM_V_at)$(am__mv) util/file/decompressor/$(DEPDIR)/gens-dummy.Tpo util/file/decompressor/$(DEPDIR)/gens-dummy.Po
#	$(AM_V_CC)source='util/file/decompressor/dummy.c' object='util/file/decompressor/gens-dummy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o util/file/decompressor/gens-dummy.o `test -f 'util/file/decompressor/dummy.c' || echo '$(srcdir)/'`util/file/decompressor/dummy.c

util/file/decompressor/gens-dummy.obj: util/file/decompressor/dummy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT util/file/decompressor/gens-dummy.obj -MD -MP -MF util/file/decompressor/$(DEPDIR)/gens-dummy.Tpo -c -o util/file/decompressor/gens-dummy.obj `if test -f 'util/file/decompressor/dummy.c'; then $(CYGPATH_W) 'util/file/decompressor/dummy.c'; else $(CYGPATH_W) '$(srcdir)/util/file/decompressor/dummy.c'; fi`
	$(AM_V_at)$(am__mv) util/file/decompressor/$(DEPDIR)/gens-dummy.Tpo util/file/decompressor/$(DEPDIR)/gens-dummy.Po
#	$(AM_V_CC)source='util/file/decompressor/dummy.c' object='util/file/decompressor/gens-dummy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o util/file/decompressor/gens-dummy.obj `if test -f 'util/file/decompressor/dummy.c'; then $(CYGPATH_W) 'util/file/decompressor/dummy.c'; else $(CYGPATH_W) '$(srcdir)/util/file/decompressor/dummy.c'; fi`

util/file/decompressor/gens-md_rar_t.o: util/file/decompressor/md_rar_t.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT util/file/decompressor/gens-md_rar_t.o -MD -MP -MF util/file/decompressor/$(DEPDIR)/gens-md_rar_t.Tpo -c -o util/file/decompressor/gens-md_rar_t.o `test -f 'util/file/decompressor/md_rar_t.c' || echo '$(srcdir)/'`util/file/decompressor/md_rar_t.c
	$(AM_V_at)$(am__mv) util/file/decompressor/$(DEPDIR)/gens-md_rar_t.Tpo util/file/decompressor/$(DEPDIR)/gens-md_rar_t.Po
#	$(AM_V_CC)source='util/file/decompressor/md_rar_t.c' object='util/file/decompressor/gens-md_rar_t.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o util/file/decompressor/gens-md_rar_t.o `test -f 'util/file/decompressor/md_rar_t.c' || echo '$(srcdir)/'`util/file/decompressor/md_rar_t.c

util/file/decompressor/gens-md_rar_t.obj: util/file/decompressor/md_rar_t.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT util/file/decompressor/gens-md_rar_t.obj -MD -MP -MF util/file/decompressor/$(DEPDIR)/gens-md_rar_t.Tpo -c -o util/file/decompressor/gens-md_rar_t.obj `if test -f 'util/file/decompressor/md_rar_t.c'; then $(CYGPATH_W) 'util/file/decompressor/md_rar_t.c'; else $(CYGPATH_W) '$(srcdir)/util/file/decompressor/md_rar_t.c'; fi`
	$(AM_V_at)$(am__mv) util/file/decompressor/$(DEPDIR)/gens-md_rar_t.Tpo util/file/decompressor/$(DEPDIR)/gens-md_rar_t.Po
#	$(AM_V_CC)source='util/file/decompressor/md_rar_t.c' object='util/file/decompressor/gens-md_rar_t.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o util/file/decompressor/gens-md_rar_t.obj `if test -f 'util/file/decompressor/md_rar_t.c'; then $(CYGPATH_W) 'util/file/decompressor/md_rar_t.c'; else $(CYGPATH_W) '$(srcdir)/util/file/decompressor/md_rar_t.c'; fi`

util/sound/gens-wave.o: util/sound/wave.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT util/sound/gens-wave.o -MD -MP -MF util/sound/$(DEPDIR)/gens-wave.Tpo -c -o util/sound/gens-wave.o `test -f 'util/sound/wave.c' || echo '$(srcdir)/'`util/sound/wave.c
	$(AM_V_at)$(am__mv) util/sound/$(DEPDIR)/gens-wave.Tpo util/sound/$(DEPDIR)/gens-wave.Po
#	$(AM_V_CC)source='util/sound/wave.c' object='util/sound/gens-wave.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o util/sound/gens-wave.o `test -f 'util/sound/wave.c' || echo '$(srcdir)/'`util/sound/wave.c

util/sound/gens-wave.obj: util/sound/wave.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT util/sound/gens-wave.obj -MD -MP -MF util/sound/$(DEPDIR)/gens-wave.Tpo -c -o util/sound/gens-wave.obj `if test -f 'util/sound/wave.c'; then $(CYGPATH_W) 'util/sound/wave.c'; else $(CYGPATH_W) '$(srcdir)/util/sound/wave.c'; fi`
	$(AM_V_at)$(am__mv) util/sound/$(DEPDIR)/gens-wave.Tpo util/sound/$(DEPDIR)/gens-wave.Po
#	$(AM_V_CC)source='util/sound/wave.c' object='util/sound/gens-wave.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o util/sound/gens-wave.obj `if test -f 'util/sound/wave.c'; then $(CYGPATH_W) 'util/sound/wave.c'; else $(CYGPATH_W) '$(srcdir)/util/sound/wave.c'; fi`

video/gens-C64_charset.o: video/C64_charset.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT video/gens-C64_charset.o -MD -MP -MF video/$(DEPDIR)/gens-C64_charset.Tpo -c -o video/gens-C64_charset.o `test -f 'video/C64_charset.c' || echo '$(srcdir)/'`video/C64_charset.c
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-C64_charset.Tpo video/$(DEPDIR)/gens-C64_charset.Po
#	$(AM_V_CC)source='video/C64_charset.c' object='video/gens-C64_charset.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o video/gens-C64_charset.o `test -f 'video/C64_charset.c' || echo '$(srcdir)/'`video/C64_charset.c

video/gens-C64_charset.obj: video/C64_charset.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT video/gens-C64_charset.obj -MD -MP -MF video/$(DEPDIR)/gens-C64_charset.Tpo -c -o video/gens-C64_charset.obj `if test -f 'video/C64_charset.c'; then $(CYGPATH_W) 'video/C64_charset.c'; else $(CYGPATH_W) '$(srcdir)/video/C64_charset.c'; fi`
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-C64_charset.Tpo video/$(DEPDIR)/gens-C64_charset.Po
#	$(AM_V_CC)source='video/C64_charset.c' object='video/gens-C64_charset.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o video/gens-C64_charset.obj `if test -f 'video/C64_charset.c'; then $(CYGPATH_W) 'video/C64_charset.c'; else $(CYGPATH_W) '$(srcdir)/video/C64_charset.c'; fi`

video/gens-vdraw.o: video/vdraw.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT video/gens-vdraw.o -MD -MP -MF video/$(DEPDIR)/gens-vdraw.Tpo -c -o video/gens-vdraw.o `test -f 'video/vdraw.c' || echo '$(srcdir)/'`video/vdraw.c
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-vdraw.Tpo video/$(DEPDIR)/gens-vdraw.Po
#	$(AM_V_CC)source='video/vdraw.c' object='video/gens-vdraw.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o video/gens-vdraw.o `test -f 'video/vdraw.c' || echo '$(srcdir)/'`video/vdraw.c

video/gens-vdraw.obj: video/vdraw.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT video/gens-vdraw.obj -MD -MP -MF video/$(DEPDIR)/gens-vdraw.Tpo -c -o video/gens-vdraw.obj `if test -f 'video/vdraw.c'; then $(CYGPATH_W) 'video/vdraw.c'; else $(CYGPATH_W) '$(srcdir)/video/vdraw.c'; fi`
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-vdraw.Tpo video/$(DEPDIR)/gens-vdraw.Po
#	$(AM_V_CC)source='video/vdraw.c' object='video/gens-vdraw.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o video/gens-vdraw.obj `if test -f 'video/vdraw.c'; then $(CYGPATH_W) 'video/vdraw.c'; else $(CYGPATH_W) '$(srcdir)/video/vdraw.c'; fi`

video/gens-vdraw_RGB.o: video/vdraw_RGB.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT video/gens-vdraw_RGB.o -MD -MP -MF video/$(DEPDIR)/gens-vdraw_RGB.Tpo -c -o video/gens-vdraw_RGB.o `test -f 'video/vdraw_RGB.c' || echo '$(srcdir)/'`video/vdraw_RGB.c
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-vdraw_RGB.Tpo video/$(DEPDIR)/gens-vdraw_RGB.Po
#	$(AM_V_CC)source='video/vdraw_RGB.c' object='video/gens-vdraw_RGB.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o video/gens-vdraw_RGB.o `test -f 'video/vdraw_RGB.c' || echo '$(srcdir)/'`video/vdraw_RGB.c

video/gens-vdraw_RGB.obj: video/vdraw_RGB.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT video/gens-vdraw_RGB.obj -MD -MP -MF video/$(DEPDIR)/gens-vdraw_RGB.Tpo -c -o video/gens-vdraw_RGB.obj `if test -f 'video/vdraw_RGB.c'; then $(CYGPATH_W) 'video/vdraw_RGB.c'; else $(CYGPATH_W) '$(srcdir)/video/vdraw_RGB.c'; fi`
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-vdraw_RGB.Tpo video/$(DEPDIR)/gens-vdraw_RGB.Po
#	$(AM_V_CC)source='video/vdraw_RGB.c' object='video/gens-vdraw_RGB.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o video/gens-vdraw_RGB.obj `if test -f 'video/vdraw_RGB.c'; then $(CYGPATH_W) 'video/vdraw_RGB.c'; else $(CYGPATH_W) '$(srcdir)/video/vdraw_RGB.c'; fi`

input/gens-input.o: input/input.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT input/gens-input.o -MD -MP -MF input/$(DEPDIR)/gens-input.Tpo -c -o input/gens-input.o `test -f 'input/input.c' || echo '$(srcdir)/'`input/input.c
	$(AM_V_at)$(am__mv) input/$(DEPDIR)/gens-input.Tpo input/$(DEPDIR)/gens-input.Po
#	$(AM_V_CC)source='input/input.c' object='input/gens-input.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o input/gens-input.o `test -f 'input/input.c' || echo '$(srcdir)/'`input/input.c

input/gens-input.obj: input/input.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT input/gens-input.obj -MD -MP -MF input/$(DEPDIR)/gens-input.Tpo -c -o input/gens-input.obj `if test -f 'input/input.c'; then $(CYGPATH_W) 'input/input.c'; else $(CYGPATH_W) '$(srcdir)/input/input.c'; fi`
	$(AM_V_at)$(am__mv) input/$(DEPDIR)/gens-input.Tpo input/$(DEPDIR)/gens-input.Po
#	$(AM_V_CC)source='input/input.c' object='input/gens-input.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o input/gens-input.obj `if test -f 'input/input.c'; then $(CYGPATH_W) 'input/input.c'; else $(CYGPATH_W) '$(srcdir)/input/input.c'; fi`

input/gens-input_update.o: input/input_update.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT input/gens-input_update.o -MD -MP -MF input/$(DEPDIR)/gens-input_update.Tpo -c -o input/gens-input_update.o `test -f 'input/input_update.c' || echo '$(srcdir)/'`input/input_update.c
	$(AM_V_at)$(am__mv) input/$(DEPDIR)/gens-input_update.Tpo input/$(DEPDIR)/gens-input_update.Po
#	$(AM_V_CC)source='input/input_update.c' object='input/gens-input_update.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o input/gens-input_update.o `test -f 'input/input_update.c' || echo '$(srcdir)/'`input/input_update.c

input/gens-input_update.obj: input/input_update.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT input/gens-input_update.obj -MD -MP -MF input/$(DEPDIR)/gens-input_update.Tpo -c -o input/gens-input_update.obj `if test -f 'input/input_update.c'; then $(CYGPATH_W) 'input/input_update.c'; else $(CYGPATH_W) '$(srcdir)/input/input_update.c'; fi`
	$(AM_V_at)$(am__mv) input/$(DEPDIR)/gens-input_update.Tpo input/$(DEPDIR)/gens-input_update.Po
#	$(AM_V_CC)source='input/input_update.c' object='input/gens-input_update.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o input/gens-input_update.obj `if test -f 'input/input_update.c'; then $(CYGPATH_W) 'input/input_update.c'; else $(CYGPATH_W) '$(srcdir)/input/input_update.c'; fi`

audio/gens-audio.o: audio/audio.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT audio/gens-audio.o -MD -MP -MF audio/$(DEPDIR)/gens-audio.Tpo -c -o audio/gens-audio.o `test -f 'audio/audio.c' || echo '$(srcdir)/'`audio/audio.c
	$(AM_V_at)$(am__mv) audio/$(DEPDIR)/gens-audio.Tpo audio/$(DEPDIR)/gens-audio.Po
#	$(AM_V_CC)source='audio/audio.c' object='audio/gens-audio.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o audio/gens-audio.o `test -f 'audio/audio.c' || echo '$(srcdir)/'`audio/audio.c

audio/gens-audio.obj: audio/audio.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT audio/gens-audio.obj -MD -MP -MF audio/$(DEPDIR)/gens-audio.Tpo -c -o audio/gens-audio.obj `if test -f 'audio/audio.c'; then $(CYGPATH_W) 'audio/audio.c'; else $(CYGPATH_W) '$(srcdir)/audio/audio.c'; fi`
	$(AM_V_at)$(am__mv) audio/$(DEPDIR)/gens-audio.Tpo audio/$(DEPDIR)/gens-audio.Po
#	$(AM_V_CC)source='audio/audio.c' object='audio/gens-audio.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o audio/gens-audio.obj `if test -f 'audio/audio.c'; then $(CYGPATH_W) 'audio/audio.c'; else $(CYGPATH_W) '$(srcdir)/audio/audio.c'; fi`

plugins/gens-mdp_host_gens.o: plugins/mdp_host_gens.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT plugins/gens-mdp_host_gens.o -MD -MP -MF plugins/$(DEPDIR)/gens-mdp_host_gens.Tpo -c -o plugins/gens-mdp_host_gens.o `test -f 'plugins/mdp_host_gens.c' || echo '$(srcdir)/'`plugins/mdp_host_gens.c
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/gens-mdp_host_gens.Tpo plugins/$(DEPDIR)/gens-mdp_host_gens.Po
#	$(AM_V_CC)source='plugins/mdp_host_gens.c' object='plugins/gens-mdp_host_gens.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o plugins/gens-mdp_host_gens.o `test -f 'plugins/mdp_host_gens.c' || echo '$(srcdir)/'`plugins/mdp_host_gens.c

plugins/gens-mdp_host_gens.obj: plugins/mdp_host_gens.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT plugins/gens-mdp_host_gens.obj -MD -MP -MF plugins/$(DEPDIR)/gens-mdp_host_gens.Tpo -c -o plugins/gens-mdp_host_gens.obj `if test -f 'plugins/mdp_host_gens.c'; then $(CYGPATH_W) 'plugins/mdp_host_gens.c'; else $(CYGPATH_W) '$(srcdir)/plugins/mdp_host_gens.c'; fi`
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/gens-mdp_host_gens.Tpo plugins/$(DEPDIR)/gens-mdp_host_gens.Po
#	$(AM_V_CC)source='plugins/mdp_host_gens.c' object='plugins/gens-mdp_host_gens.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o plugins/gens-mdp_host_gens.obj `if test -f 'plugins/mdp_host_gens.c'; then $(CYGPATH_W) 'plugins/mdp_host_gens.c'; else $(CYGPATH_W) '$(srcdir)/plugins/mdp_host_gens.c'; fi`

plugins/gens-mdp_host_gens_mem.o: plugins/mdp_host_gens_mem.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT plugins/gens-mdp_host_gens_mem.o -MD -MP -MF plugins/$(DEPDIR)/gens-mdp_host_gens_mem.Tpo -c -o plugins/gens-mdp_host_gens_mem.o `test -f 'plugins/mdp_host_gens_mem.c' || echo '$(srcdir)/'`plugins/mdp_host_gens_mem.c
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/gens-mdp_host_gens_mem.Tpo plugins/$(DEPDIR)/gens-mdp_host_gens_mem.Po
#	$(AM_V_CC)source='plugins/mdp_host_gens_mem.c' object='plugins/gens-mdp_host_gens_mem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o plugins/gens-mdp_host_gens_mem.o `test -f 'plugins/mdp_host_gens_mem.c' || echo '$(srcdir)/'`plugins/mdp_host_gens_mem.c

plugins/gens-mdp_host_gens_mem.obj: plugins/mdp_host_gens_mem.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT plugins/gens-mdp_host_gens_mem.obj -MD -MP -MF plugins/$(DEPDIR)/gens-mdp_host_gens_mem.Tpo -c -o plugins/gens-mdp_host_gens_mem.obj `if test -f 'plugins/mdp_host_gens_mem.c'; then $(CYGPATH_W) 'plugins/mdp_host_gens_mem.c'; else $(CYGPATH_W) '$(srcdir)/plugins/mdp_host_gens_mem.c'; fi`
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/gens-mdp_host_gens_mem.Tpo plugins/$(DEPDIR)/gens-mdp_host_gens_mem.Po
#	$(AM_V_CC)source='plugins/mdp_host_gens_mem.c' object='plugins/gens-mdp_host_gens_mem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o plugins/gens-mdp_host_gens_mem.obj `if test -f 'plugins/mdp_host_gens_mem.c'; then $(CYGPATH_W) 'plugins/mdp_host_gens_mem.c'; else $(CYGPATH_W) '$(srcdir)/plugins/mdp_host_gens_mem.c'; fi`

plugins/gens-mdp_host_gens_z.o: plugins/mdp_host_gens_z.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT plugins/gens-mdp_host_gens_z.o -MD -MP -MF plugins/$(DEPDIR)/gens-mdp_host_gens_z.Tpo -c -o plugins/gens-mdp_host_gens_z.o `test -f 'plugins/mdp_host_gens_z.c' || echo '$(srcdir)/'`plugins/mdp_host_gens_z.c
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/gens-mdp_host_gens_z.Tpo plugins/$(DEPDIR)/gens-mdp_host_gens_z.Po
#	$(AM_V_CC)source='plugins/mdp_host_gens_z.c' object='plugins/gens-mdp_host_gens_z.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o plugins/gens-mdp_host_gens_z.o `test -f 'plugins/mdp_host_gens_z.c' || echo '$(srcdir)/'`plugins/mdp_host_gens_z.c

plugins/gens-mdp_host_gens_z.obj: plugins/mdp_host_gens_z.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT plugins/gens-mdp_host_gens_z.obj -MD -MP -MF plugins/$(DEPDIR)/gens-mdp_host_gens_z.Tpo -c -o plugins/gens-mdp_host_gens_z.obj `if test -f 'plugins/mdp_host_gens_z.c'; then $(CYGPATH_W) 'plugins/mdp_host_gens_z.c'; else $(CYGPATH_W) '$(srcdir)/plugins/mdp_host_gens_z.c'; fi`
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/gens-mdp_host_gens_z.Tpo plugins/$(DEPDIR)/gens-mdp_host_gens_z.Po
#	$(AM_V_CC)source='plugins/mdp_host_gens_z.c' object='plugins/gens-mdp_host_gens_z.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o plugins/gens-mdp_host_gens_z.obj `if test -f 'plugins/mdp_host_gens_z.c'; then $(CYGPATH_W) 'plugins/mdp_host_gens_z.c'; else $(CYGPATH_W) '$(srcdir)/plugins/mdp_host_gens_z.c'; fi`

plugins/reg/gens-reg_get.o: plugins/reg/reg_get.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT plugins/reg/gens-reg_get.o -MD -MP -MF plugins/reg/$(DEPDIR)/gens-reg_get.Tpo -c -o plugins/reg/gens-reg_get.o `test -f 'plugins/reg/reg_get.c' || echo '$(srcdir)/'`plugins/reg/reg_get.c
	$(AM_V_at)$(am__mv) plugins/reg/$(DEPDIR)/gens-reg_get.Tpo plugins/reg/$(DEPDIR)/gens-reg_get.Po
#	$(AM_V_CC)source='plugins/reg/reg_get.c' object='plugins/reg/gens-reg_get.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o plugins/reg/gens-reg_get.o `test -f 'plugins/reg/reg_get.c' || echo '$(srcdir)/'`plugins/reg/reg_get.c

plugins/reg/gens-reg_get.obj: plugins/reg/reg_get.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT plugins/reg/gens-reg_get.obj -MD -MP -MF plugins/reg/$(DEPDIR)/gens-reg_get.Tpo -c -o plugins/reg/gens-reg_get.obj `if test -f 'plugins/reg/reg_get.c'; then $(CYGPATH_W) 'plugins/reg/reg_get.c'; else $(CYGPATH_W) '$(srcdir)/plugins/reg/reg_get.c'; fi`
	$(AM_V_at)$(am__mv) plugins/reg/$(DEPDIR)/gens-reg_get.Tpo plugins/reg/$(DEPDIR)/gens-reg_get.Po
#	$(AM_V_CC)source='plugins/reg/reg_get.c' object='plugins/reg/gens-reg_get.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o plugins/reg/gens-reg_get.obj `if test -f 'plugins/reg/reg_get.c'; then $(CYGPATH_W) 'plugins/reg/reg_get.c'; else $(CYGPATH_W) '$(srcdir)/plugins/reg/reg_get.c'; fi`

plugins/reg/gens-reg_set.o: plugins/reg/reg_set.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT plugins/reg/gens-reg_set.o -MD -MP -MF plugins/reg/$(DEPDIR)/gens-reg_set.Tpo -c -o plugins/reg/gens-reg_set.o `test -f 'plugins/reg/reg_set.c' || echo '$(srcdir)/'`plugins/reg/reg_set.c
	$(AM_V_at)$(am__mv) plugins/reg/$(DEPDIR)/gens-reg_set.Tpo plugins/reg/$(DEPDIR)/gens-reg_set.Po
#	$(AM_V_CC)source='plugins/reg/reg_set.c' object='plugins/reg/gens-reg_set.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o plugins/reg/gens-reg_set.o `test -f 'plugins/reg/reg_set.c' || echo '$(srcdir)/'`plugins/reg/reg_set.c

plugins/reg/gens-reg_set.obj: plugins/reg/reg_set.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT plugins/reg/gens-reg_set.obj -MD -MP -MF plugins/reg/$(DEPDIR)/gens-reg_set.Tpo -c -o plugins/reg/gens-reg_set.obj `if test -f 'plugins/reg/reg_set.c'; then $(CYGPATH_W) 'plugins/reg/reg_set.c'; else $(CYGPATH_W) '$(srcdir)/plugins/reg/reg_set.c'; fi`
	$(AM_V_at)$(am__mv) plugins/reg/$(DEPDIR)/gens-reg_set.Tpo plugins/reg/$(DEPDIR)/gens-reg_set.Po
#	$(AM_V_CC)source='plugins/reg/reg_set.c' object='plugins/reg/gens-reg_set.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o plugins/reg/gens-reg_set.obj `if test -f 'plugins/reg/reg_set.c'; then $(CYGPATH_W) 'plugins/reg/reg_set.c'; else $(CYGPATH_W) '$(srcdir)/plugins/reg/reg_set.c'; fi`

plugins/reg/gens-reg_get_all.o: plugins/reg/reg_get_all.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT plugins/reg/gens-reg_get_all.o -MD -MP -MF plugins/reg/$(DEPDIR)/gens-reg_get_all.Tpo -c -o plugins/reg/gens-reg_get_all.o `test -f 'plugins/reg/reg_get_all.c' || echo '$(srcdir)/'`plugins/reg/reg_get_all.c
	$(AM_V_at)$(am__mv) plugins/reg/$(DEPDIR)/gens-reg_get_all.Tpo plugins/reg/$(DEPDIR)/gens-reg_get_all.Po
#	$(AM_V_CC)source='plugins/reg/reg_get_all.c' object='plugins/reg/gens-reg_get_all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o plugins/reg/gens-reg_get_all.o `test -f 'plugins/reg/reg_get_all.c' || echo '$(srcdir)/'`plugins/reg/reg_get_all.c

plugins/reg/gens-reg_get_all.obj: plugins/reg/reg_get_all.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT plugins/reg/gens-reg_get_all.obj -MD -MP -MF plugins/reg/$(DEPDIR)/gens-reg_get_all.Tpo -c -o plugins/reg/gens-reg_get_all.obj `if test -f 'plugins/reg/reg_get_all.c'; then $(CYGPATH_W) 'plugins/reg/reg_get_all.c'; else $(CYGPATH_W) '$(srcdir)/plugins/reg/reg_get_all.c'; fi`
	$(AM_V_at)$(am__mv) plugins/reg/$(DEPDIR)/gens-reg_get_all.Tpo plugins/reg/$(DEPDIR)/gens-reg_get_all.Po
#	$(AM_V_CC)source='plugins/reg/reg_get_all.c' object='plugins/reg/gens-reg_get_all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o plugins/reg/gens-reg_get_all.obj `if test -f 'plugins/reg/reg_get_all.c'; then $(CYGPATH_W) 'plugins/reg/reg_get_all.c'; else $(CYGPATH_W) '$(srcdir)/plugins/reg/reg_get_all.c'; fi`

plugins/reg/gens-reg_set_all.o: plugins/reg/reg_set_all.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT plugins/reg/gens-reg_set_all.o -MD -MP -MF plugins/reg/$(DEPDIR)/gens-reg_set_all.Tpo -c -o plugins/reg/gens-reg_set_all.o `test -f 'plugins/reg/reg_set_all.c' || echo '$(srcdir)/'`plugins/reg/reg_set_all.c
	$(AM_V_at)$(am__mv) plugins/reg/$(DEPDIR)/gens-reg_set_all.Tpo plugins/reg/$(DEPDIR)/gens-reg_set_all.Po
#	$(AM_V_CC)source='plugins/reg/reg_set_all.c' object='plugins/reg/gens-reg_set_all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o plugins/reg/gens-reg_set_all.o `test -f 'plugins/reg/reg_set_all.c' || echo '$(srcdir)/'`plugins/reg/reg_set_all.c

plugins/reg/gens-reg_set_all.obj: plugins/reg/reg_set_all.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT plugins/reg/gens-reg_set_all.obj -MD -MP -MF plugins/reg/$(DEPDIR)/gens-reg_set_all.Tpo -c -o plugins/reg/gens-reg_set_all.obj `if test -f 'plugins/reg/reg_set_all.c'; then $(CYGPATH_W) 'plugins/reg/reg_set_all.c'; else $(CYGPATH_W) '$(srcdir)/plugins/reg/reg_set_all.c'; fi`
	$(AM_V_at)$(am__mv) plugins/reg/$(DEPDIR)/gens-reg_set_all.Tpo plugins/reg/$(DEPDIR)/gens-reg_set_all.Po
#	$(AM_V_CC)source='plugins/reg/reg_set_all.c' object='plugins/reg/gens-reg_set_all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o plugins/reg/gens-reg_set_all.obj `if test -f 'plugins/reg/reg_set_all.c'; then $(CYGPATH_W) 'plugins/reg/reg_set_all.c'; else $(CYGPATH_W) '$(srcdir)/plugins/reg/reg_set_all.c'; fi`

emulator/gens-sighandler.o: emulator/sighandler.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT emulator/gens-sighandler.o -MD -MP -MF emulator/$(DEPDIR)/gens-sighandler.Tpo -c -o emulator/gens-sighandler.o `test -f 'emulator/sighandler.c' || echo '$(srcdir)/'`emulator/sighandler.c
	$(AM_V_at)$(am__mv) emulator/$(DEPDIR)/gens-sighandler.Tpo emulator/$(DEPDIR)/gens-sighandler.Po
#	$(AM_V_CC)source='emulator/sighandler.c' object='emulator/gens-sighandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o emulator/gens-sighandler.o `test -f 'emulator/sighandler.c' || echo '$(srcdir)/'`emulator/sighandler.c

emulator/gens-sighandler.obj: emulator/sighandler.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT emulator/gens-sighandler.obj -MD -MP -MF emulator/$(DEPDIR)/gens-sighandler.Tpo -c -o emulator/gens-sighandler.obj `if test -f 'emulator/sighandler.c'; then $(CYGPATH_W) 'emulator/sighandler.c'; else $(CYGPATH_W) '$(srcdir)/emulator/sighandler.c'; fi`
	$(AM_V_at)$(am__mv) emulator/$(DEPDIR)/gens-sighandler.Tpo emulator/$(DEPDIR)/gens-sighandler.Po
#	$(AM_V_CC)source='emulator/sighandler.c' object='emulator/gens-sighandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o emulator/gens-sighandler.obj `if test -f 'emulator/sighandler.c'; then $(CYGPATH_W) 'emulator/sighandler.c'; else $(CYGPATH_W) '$(srcdir)/emulator/sighandler.c'; fi`

debugger/gens-m68kd.o: debugger/m68kd.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT debugger/gens-m68kd.o -MD -MP -MF debugger/$(DEPDIR)/gens-m68kd.Tpo -c -o debugger/gens-m68kd.o `test -f 'debugger/m68kd.c' || echo '$(srcdir)/'`debugger/m68kd.c
	$(AM_V_at)$(am__mv) debugger/$(DEPDIR)/gens-m68kd.Tpo debugger/$(DEPDIR)/gens-m68kd.Po
#	$(AM_V_CC)source='debugger/m68kd.c' object='debugger/gens-m68kd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o debugger/gens-m68kd.o `test -f 'debugger/m68kd.c' || echo '$(srcdir)/'`debugger/m68kd.c

debugger/gens-m68kd.obj: debugger/m68kd.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT debugger/gens-m68kd.obj -MD -MP -MF debugger/$(DEPDIR)/gens-m68kd.Tpo -c -o debugger/gens-m68kd.obj `if test -f 'debugger/m68kd.c'; then $(CYGPATH_W) 'debugger/m68kd.c'; else $(CYGPATH_W) '$(srcdir)/debugger/m68kd.c'; fi`
	$(AM_V_at)$(am__mv) debugger/$(DEPDIR)/gens-m68kd.Tpo debugger/$(DEPDIR)/gens-m68kd.Po
#	$(AM_V_CC)source='debugger/m68kd.c' object='debugger/gens-m68kd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o debugger/gens-m68kd.obj `if test -f 'debugger/m68kd.c'; then $(CYGPATH_W) 'debugger/m68kd.c'; else $(CYGPATH_W) '$(srcdir)/debugger/m68kd.c'; fi`

debugger/gens-sh2d.o: debugger/sh2d.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT debugger/gens-sh2d.o -MD -MP -MF debugger/$(DEPDIR)/gens-sh2d.Tpo -c -o debugger/gens-sh2d.o `test -f 'debugger/sh2d.c' || echo '$(srcdir)/'`debugger/sh2d.c
	$(AM_V_at)$(am__mv) debugger/$(DEPDIR)/gens-sh2d.Tpo debugger/$(DEPDIR)/gens-sh2d.Po
#	$(AM_V_CC)source='debugger/sh2d.c' object='debugger/gens-sh2d.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o debugger/gens-sh2d.o `test -f 'debugger/sh2d.c' || echo '$(srcdir)/'`debugger/sh2d.c

debugger/gens-sh2d.obj: debugger/sh2d.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT debugger/gens-sh2d.obj -MD -MP -MF debugger/$(DEPDIR)/gens-sh2d.Tpo -c -o debugger/gens-sh2d.obj `if test -f 'debugger/sh2d.c'; then $(CYGPATH_W) 'debugger/sh2d.c'; else $(CYGPATH_W) '$(srcdir)/debugger/sh2d.c'; fi`
	$(AM_V_at)$(am__mv) debugger/$(DEPDIR)/gens-sh2d.Tpo debugger/$(DEPDIR)/gens-sh2d.Po
#	$(AM_V_CC)source='debugger/sh2d.c' object='debugger/gens-sh2d.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o debugger/gens-sh2d.obj `if test -f 'debugger/sh2d.c'; then $(CYGPATH_W) 'debugger/sh2d.c'; else $(CYGPATH_W) '$(srcdir)/debugger/sh2d.c'; fi`

debugger/gens-z80dis.o: debugger/z80dis.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT debugger/gens-z80dis.o -MD -MP -MF debugger/$(DEPDIR)/gens-z80dis.Tpo -c -o debugger/gens-z80dis.o `test -f 'debugger/z80dis.c' || echo '$(srcdir)/'`debugger/z80dis.c
	$(AM_V_at)$(am__mv) debugger/$(DEPDIR)/gens-z80dis.Tpo debugger/$(DEPDIR)/gens-z80dis.Po
#	$(AM_V_CC)source='debugger/z80dis.c' object='debugger/gens-z80dis.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o debugger/gens-z80dis.o `test -f 'debugger/z80dis.c' || echo '$(srcdir)/'`debugger/z80dis.c

debugger/gens-z80dis.obj: debugger/z80dis.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT debugger/gens-z80dis.obj -MD -MP -MF debugger/$(DEPDIR)/gens-z80dis.Tpo -c -o debugger/gens-z80dis.obj `if test -f 'debugger/z80dis.c'; then $(CYGPATH_W) 'debugger/z80dis.c'; else $(CYGPATH_W) '$(srcdir)/debugger/z80dis.c'; fi`
	$(AM_V_at)$(am__mv) debugger/$(DEPDIR)/gens-z80dis.Tpo debugger/$(DEPDIR)/gens-z80dis.Po
#	$(AM_V_CC)source='debugger/z80dis.c' object='debugger/gens-z80dis.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o debugger/gens-z80dis.obj `if test -f 'debugger/z80dis.c'; then $(CYGPATH_W) 'debugger/z80dis.c'; else $(CYGPATH_W) '$(srcdir)/debugger/z80dis.c'; fi`

segacd/gens-cdda_mp3.o: segacd/cdda_mp3.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT segacd/gens-cdda_mp3.o -MD -MP -MF segacd/$(DEPDIR)/gens-cdda_mp3.Tpo -c -o segacd/gens-cdda_mp3.o `test -f 'segacd/cdda_mp3.c' || echo '$(srcdir)/'`segacd/cdda_mp3.c
	$(AM_V_at)$(am__mv) segacd/$(DEPDIR)/gens-cdda_mp3.Tpo segacd/$(DEPDIR)/gens-cdda_mp3.Po
#	$(AM_V_CC)source='segacd/cdda_mp3.c' object='segacd/gens-cdda_mp3.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o segacd/gens-cdda_mp3.o `test -f 'segacd/cdda_mp3.c' || echo '$(srcdir)/'`segacd/cdda_mp3.c

segacd/gens-cdda_mp3.obj: segacd/cdda_mp3.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT segacd/gens-cdda_mp3.obj -MD -MP -MF segacd/$(DEPDIR)/gens-cdda_mp3.Tpo -c -o segacd/gens-cdda_mp3.obj `if test -f 'segacd/cdda_mp3.c'; then $(CYGPATH_W) 'segacd/cdda_mp3.c'; else $(CYGPATH_W) '$(srcdir)/segacd/cdda_mp3.c'; fi`
	$(AM_V_at)$(am__mv) segacd/$(DEPDIR)/gens-cdda_mp3.Tpo segacd/$(DEPDIR)/gens-cdda_mp3.Po
#	$(AM_V_CC)source='segacd/cdda_mp3.c' object='segacd/gens-cdda_mp3.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o segacd/gens-cdda_mp3.obj `if test -f 'segacd/cdda_mp3.c'; then $(CYGPATH_W) 'segacd/cdda_mp3.c'; else $(CYGPATH_W) '$(srcdir)/segacd/cdda_mp3.c'; fi`

util/file/decompressor/gens-md_gzip.o: util/file/decompressor/md_gzip.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT util/file/decompressor/gens-md_gzip.o -MD -MP -MF util/file/decompressor/$(DEPDIR)/gens-md_gzip.Tpo -c -o util/file/decompressor/gens-md_gzip.o `test -f 'util/file/decompressor/md_gzip.c' || echo '$(srcdir)/'`util/file/decompressor/md_gzip.c
	$(AM_V_at)$(am__mv) util/file/decompressor/$(DEPDIR)/gens-md_gzip.Tpo util/file/decompressor/$(DEPDIR)/gens-md_gzip.Po
#	$(AM_V_CC)source='util/file/decompressor/md_gzip.c' object='util/file/decompressor/gens-md_gzip.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o util/file/decompressor/gens-md_gzip.o `test -f 'util/file/decompressor/md_gzip.c' || echo '$(srcdir)/'`util/file/decompressor/md_gzip.c

util/file/decompressor/gens-md_gzip.obj: util/file/decompressor/md_gzip.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT util/file/decompressor/gens-md_gzip.obj -MD -MP -MF util/file/decompressor/$(DEPDIR)/gens-md_gzip.Tpo -c -o util/file/decompressor/gens-md_gzip.obj `if test -f 'util/file/decompressor/md_gzip.c'; then $(CYGPATH_W) 'util/file/decompressor/md_gzip.c'; else $(CYGPATH_W) '$(srcdir)/util/file/decompressor/md_gzip.c'; fi`
	$(AM_V_at)$(am__mv) util/file/decompressor/$(DEPDIR)/gens-md_gzip.Tpo util/file/decompressor/$(DEPDIR)/gens-md_gzip.Po
#	$(AM_V_CC)source='util/file/decompressor/md_gzip.c' object='util/file/decompressor/gens-md_gzip.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o util/file/decompressor/gens-md_gzip.obj `if test -f 'util/file/decompressor/md_gzip.c'; then $(CYGPATH_W) 'util/file/decompressor/md_gzip.c'; else $(CYGPATH_W) '$(srcdir)/util/file/decompressor/md_gzip.c'; fi`

util/file/decompressor/gens-md_zip.o: util/file/decompressor/md_zip.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT util/file/decompressor/gens-md_zip.o -MD -MP -MF util/file/decompressor/$(DEPDIR)/gens-md_zip.Tpo -c -o util/file/decompressor/gens-md_zip.o `test -f 'util/file/decompressor/md_zip.c' || echo '$(srcdir)/'`util/file/decompressor/md_zip.c
	$(AM_V_at)$(am__mv) util/file/decompressor/$(DEPDIR)/gens-md_zip.Tpo util/file/decompressor/$(DEPDIR)/gens-md_zip.Po
#	$(AM_V_CC)source='util/file/decompressor/md_zip.c' object='util/file/decompressor/gens-md_zip.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o util/file/decompressor/gens-md_zip.o `test -f 'util/file/decompressor/md_zip.c' || echo '$(srcdir)/'`util/file/decompressor/md_zip.c

util/file/decompressor/gens-md_zip.obj: util/file/decompressor/md_zip.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT util/file/decompressor/gens-md_zip.obj -MD -MP -MF util/file/decompressor/$(DEPDIR)/gens-md_zip.Tpo -c -o util/file/decompressor/gens-md_zip.obj `if test -f 'util/file/decompressor/md_zip.c'; then $(CYGPATH_W) 'util/file/decompressor/md_zip.c'; else $(CYGPATH_W) '$(srcdir)/util/file/decompressor/md_zip.c'; fi`
	$(AM_V_at)$(am__mv) util/file/decompressor/$(DEPDIR)/gens-md_zip.Tpo util/file/decompressor/$(DEPDIR)/gens-md_zip.Po
#	$(AM_V_CC)source='util/file/decompressor/md_zip.c' object='util/file/decompressor/gens-md_zip.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o util/file/decompressor/gens-md_zip.obj `if test -f 'util/file/decompressor/md_zip.c'; then $(CYGPATH_W) 'util/file/decompressor/md_zip.c'; else $(CYGPATH_W) '$(srcdir)/util/file/decompressor/md_zip.c'; fi`

util/file/decompressor/gens-md_7z.o: util/file/decompressor/md_7z.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT util/file/decompressor/gens-md_7z.o -MD -MP -MF util/file/decompressor/$(DEPDIR)/gens-md_7z.Tpo -c -o util/file/decompressor/gens-md_7z.o `test -f 'util/file/decompressor/md_7z.c' || echo '$(srcdir)/'`util/file/decompressor/md_7z.c
	$(AM_V_at)$(am__mv) util/file/decompressor/$(DEPDIR)/gens-md_7z.Tpo util/file/decompressor/$(DEPDIR)/gens-md_7z.Po
#	$(AM_V_CC)source='util/file/decompressor/md_7z.c' object='util/file/decompressor/gens-md_7z.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o util/file/decompressor/gens-md_7z.o `test -f 'util/file/decompressor/md_7z.c' || echo '$(srcdir)/'`util/file/decompressor/md_7z.c

util/file/decompressor/gens-md_7z.obj: util/file/decompressor/md_7z.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT util/file/decompressor/gens-md_7z.obj -MD -MP -MF util/file/decompressor/$(DEPDIR)/gens-md_7z.Tpo -c -o util/file/decompressor/gens-md_7z.obj `if test -f 'util/file/decompressor/md_7z.c'; then $(CYGPATH_W) 'util/file/decompressor/md_7z.c'; else $(CYGPATH_W) '$(srcdir)/util/file/decompressor/md_7z.c'; fi`
	$(AM_V_at)$(am__mv) util/file/decompressor/$(DEPDIR)/gens-md_7z.Tpo util/file/decompressor/$(DEPDIR)/gens-md_7z.Po
#	$(AM_V_CC)source='util/file/decompressor/md_7z.c' object='util/file/decompressor/gens-md_7z.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o util/file/decompressor/gens-md_7z.obj `if test -f 'util/file/decompressor/md_7z.c'; then $(CYGPATH_W) 'util/file/decompressor/md_7z.c'; else $(CYGPATH_W) '$(srcdir)/util/file/decompressor/md_7z.c'; fi`

port/gens-ini_old.o: port/ini_old.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT port/gens-ini_old.o -MD -MP -MF port/$(DEPDIR)/gens-ini_old.Tpo -c -o port/gens-ini_old.o `test -f 'port/ini_old.c' || echo '$(srcdir)/'`port/ini_old.c
	$(AM_V_at)$(am__mv) port/$(DEPDIR)/gens-ini_old.Tpo port/$(DEPDIR)/gens-ini_old.Po
#	$(AM_V_CC)source='port/ini_old.c' object='port/gens-ini_old.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o port/gens-ini_old.o `test -f 'port/ini_old.c' || echo '$(srcdir)/'`port/ini_old.c

port/gens-ini_old.obj: port/ini_old.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT port/gens-ini_old.obj -MD -MP -MF port/$(DEPDIR)/gens-ini_old.Tpo -c -o port/gens-ini_old.obj `if test -f 'port/ini_old.c'; then $(CYGPATH_W) 'port/ini_old.c'; else $(CYGPATH_W) '$(srcdir)/port/ini_old.c'; fi`
	$(AM_V_at)$(am__mv) port/$(DEPDIR)/gens-ini_old.Tpo port/$(DEPDIR)/gens-ini_old.Po
#	$(AM_V_CC)source='port/ini_old.c' object='port/gens-ini_old.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o port/gens-ini_old.obj `if test -f 'port/ini_old.c'; then $(CYGPATH_W) 'port/ini_old.c'; else $(CYGPATH_W) '$(srcdir)/port/ini_old.c'; fi`

port/gens-timer.o: port/timer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT port/gens-timer.o -MD -MP -MF port/$(DEPDIR)/gens-timer.Tpo -c -o port/gens-timer.o `test -f 'port/timer.c' || echo '$(srcdir)/'`port/timer.c
	$(AM_V_at)$(am__mv) port/$(DEPDIR)/gens-timer.Tpo port/$(DEPDIR)/gens-timer.Po
#	$(AM_V_CC)source='port/timer.c' object='port/gens-timer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o port/gens-timer.o `test -f 'port/timer.c' || echo '$(srcdir)/'`port/timer.c

port/gens-timer.obj: port/timer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT port/gens-timer.obj -MD -MP -MF port/$(DEPDIR)/gens-timer.Tpo -c -o port/gens-timer.obj `if test -f 'port/timer.c'; then $(CYGPATH_W) 'port/timer.c'; else $(CYGPATH_W) '$(srcdir)/port/timer.c'; fi`
	$(AM_V_at)$(am__mv) port/$(DEPDIR)/gens-timer.Tpo port/$(DEPDIR)/gens-timer.Po
#	$(AM_V_CC)source='port/timer.c' object='port/gens-timer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o port/gens-timer.obj `if test -f 'port/timer.c'; then $(CYGPATH_W) 'port/timer.c'; else $(CYGPATH_W) '$(srcdir)/port/timer.c'; fi`

video/gens-vdraw_sdl_common.o: video/vdraw_sdl_common.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT video/gens-vdraw_sdl_common.o -MD -MP -MF video/$(DEPDIR)/gens-vdraw_sdl_common.Tpo -c -o video/gens-vdraw_sdl_common.o `test -f 'video/vdraw_sdl_common.c' || echo '$(srcdir)/'`video/vdraw_sdl_common.c
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-vdraw_sdl_common.Tpo video/$(DEPDIR)/gens-vdraw_sdl_common.Po
#	$(AM_V_CC)source='video/vdraw_sdl_common.c' object='video/gens-vdraw_sdl_common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o video/gens-vdraw_sdl_common.o `test -f 'video/vdraw_sdl_common.c' || echo '$(srcdir)/'`video/vdraw_sdl_common.c

video/gens-vdraw_sdl_common.obj: video/vdraw_sdl_common.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT video/gens-vdraw_sdl_common.obj -MD -MP -MF video/$(DEPDIR)/gens-vdraw_sdl_common.Tpo -c -o video/gens-vdraw_sdl_common.obj `if test -f 'video/vdraw_sdl_common.c'; then $(CYGPATH_W) 'video/vdraw_sdl_common.c'; else $(CYGPATH_W) '$(srcdir)/video/vdraw_sdl_common.c'; fi`
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-vdraw_sdl_common.Tpo video/$(DEPDIR)/gens-vdraw_sdl_common.Po
#	$(AM_V_CC)source='video/vdraw_sdl_common.c' object='video/gens-vdraw_sdl_common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o video/gens-vdraw_sdl_common.obj `if test -f 'video/vdraw_sdl_common.c'; then $(CYGPATH_W) 'video/vdraw_sdl_common.c'; else $(CYGPATH_W) '$(srcdir)/video/vdraw_sdl_common.c'; fi`

video/gens-vdraw_sdl.o: video/vdraw_sdl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT video/gens-vdraw_sdl.o -MD -MP -MF video/$(DEPDIR)/gens-vdraw_sdl.Tpo -c -o video/gens-vdraw_sdl.o `test -f 'video/vdraw_sdl.c' || echo '$(srcdir)/'`video/vdraw_sdl.c
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-vdraw_sdl.Tpo video/$(DEPDIR)/gens-vdraw_sdl.Po
#	$(AM_V_CC)source='video/vdraw_sdl.c' object='video/gens-vdraw_sdl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o video/gens-vdraw_sdl.o `test -f 'video/vdraw_sdl.c' || echo '$(srcdir)/'`video/vdraw_sdl.c

video/gens-vdraw_sdl.obj: video/vdraw_sdl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT video/gens-vdraw_sdl.obj -MD -MP -MF video/$(DEPDIR)/gens-vdraw_sdl.Tpo -c -o video/gens-vdraw_sdl.obj `if test -f 'video/vdraw_sdl.c'; then $(CYGPATH_W) 'video/vdraw_sdl.c'; else $(CYGPATH_W) '$(srcdir)/video/vdraw_sdl.c'; fi`
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-vdraw_sdl.Tpo video/$(DEPDIR)/gens-vdraw_sdl.Po
#	$(AM_V_CC)source='video/vdraw_sdl.c' object='video/gens-vdraw_sdl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o video/gens-vdraw_sdl.obj `if test -f 'video/vdraw_sdl.c'; then $(CYGPATH_W) 'video/vdraw_sdl.c'; else $(CYGPATH_W) '$(srcdir)/video/vdraw_sdl.c'; fi`

input/gens-input_sdl.o: input/input_sdl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT input/gens-input_sdl.o -MD -MP -MF input/$(DEPDIR)/gens-input_sdl.Tpo -c -o input/gens-input_sdl.o `test -f 'input/input_sdl.c' || echo '$(srcdir)/'`input/input_sdl.c
	$(AM_V_at)$(am__mv) input/$(DEPDIR)/gens-input_sdl.Tpo input/$(DEPDIR)/gens-input_sdl.Po
#	$(AM_V_CC)source='input/input_sdl.c' object='input/gens-input_sdl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o input/gens-input_sdl.o `test -f 'input/input_sdl.c' || echo '$(srcdir)/'`input/input_sdl.c

input/gens-input_sdl.obj: input/input_sdl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT input/gens-input_sdl.obj -MD -MP -MF input/$(DEPDIR)/gens-input_sdl.Tpo -c -o input/gens-input_sdl.obj `if test -f 'input/input_sdl.c'; then $(CYGPATH_W) 'input/input_sdl.c'; else $(CYGPATH_W) '$(srcdir)/input/input_sdl.c'; fi`
	$(AM_V_at)$(am__mv) input/$(DEPDIR)/gens-input_sdl.Tpo input/$(DEPDIR)/gens-input_sdl.Po
#	$(AM_V_CC)source='input/input_sdl.c' object='input/gens-input_sdl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o input/gens-input_sdl.obj `if test -f 'input/input_sdl.c'; then $(CYGPATH_W) 'input/input_sdl.c'; else $(CYGPATH_W) '$(srcdir)/input/input_sdl.c'; fi`

input/gens-input_sdl_key_names.o: input/input_sdl_key_names.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT input/gens-input_sdl_key_names.o -MD -MP -MF input/$(DEPDIR)/gens-input_sdl_key_names.Tpo -c -o input/gens-input_sdl_key_names.o `test -f 'input/input_sdl_key_names.c' || echo '$(srcdir)/'`input/input_sdl_key_names.c
	$(AM_V_at)$(am__mv) input/$(DEPDIR)/gens-input_sdl_key_names.Tpo input/$(DEPDIR)/gens-input_sdl_key_names.Po
#	$(AM_V_CC)source='input/input_sdl_key_names.c' object='input/gens-input_sdl_key_names.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o input/gens-input_sdl_key_names.o `test -f 'input/input_sdl_key_names.c' || echo '$(srcdir)/'`input/input_sdl_key_names.c

input/gens-input_sdl_key_names.obj: input/input_sdl_key_names.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT input/gens-input_sdl_key_names.obj -MD -MP -MF input/$(DEPDIR)/gens-input_sdl_key_names.Tpo -c -o input/gens-input_sdl_key_names.obj `if test -f 'input/input_sdl_key_names.c'; then $(CYGPATH_W) 'input/input_sdl_key_names.c'; else $(CYGPATH_W) '$(srcdir)/input/input_sdl_key_names.c'; fi`
	$(AM_V_at)$(am__mv) input/$(DEPDIR)/gens-input_sdl_key_names.Tpo input/$(DEPDIR)/gens-input_sdl_key_names.Po
#	$(AM_V_CC)source='input/input_sdl_key_names.c' object='input/gens-input_sdl_key_names.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o input/gens-input_sdl_key_names.obj `if test -f 'input/input_sdl_key_names.c'; then $(CYGPATH_W) 'input/input_sdl_key_names.c'; else $(CYGPATH_W) '$(srcdir)/input/input_sdl_key_names.c'; fi`

audio/gens-audio_sdl.o: audio/audio_sdl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT audio/gens-audio_sdl.o -MD -MP -MF audio/$(DEPDIR)/gens-audio_sdl.Tpo -c -o audio/gens-audio_sdl.o `test -f 'audio/audio_sdl.c' || echo '$(srcdir)/'`audio/audio_sdl.c
	$(AM_V_at)$(am__mv) audio/$(DEPDIR)/gens-audio_sdl.Tpo audio/$(DEPDIR)/gens-audio_sdl.Po
#	$(AM_V_CC)source='audio/audio_sdl.c' object='audio/gens-audio_sdl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o audio/gens-audio_sdl.o `test -f 'audio/audio_sdl.c' || echo '$(srcdir)/'`audio/audio_sdl.c

audio/gens-audio_sdl.obj: audio/audio_sdl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT audio/gens-audio_sdl.obj -MD -MP -MF audio/$(DEPDIR)/gens-audio_sdl.Tpo -c -o audio/gens-audio_sdl.obj `if test -f 'audio/audio_sdl.c'; then $(CYGPATH_W) 'audio/audio_sdl.c'; else $(CYGPATH_W) '$(srcdir)/audio/audio_sdl.c'; fi`
	$(AM_V_at)$(am__mv) audio/$(DEPDIR)/gens-audio_sdl.Tpo audio/$(DEPDIR)/gens-audio_sdl.Po
#	$(AM_V_CC)source='audio/audio_sdl.c' object='audio/gens-audio_sdl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o audio/gens-audio_sdl.obj `if test -f 'audio/audio_sdl.c'; then $(CYGPATH_W) 'audio/audio_sdl.c'; else $(CYGPATH_W) '$(srcdir)/audio/audio_sdl.c'; fi`

ui/gtk/gens-gtk-misc.o: ui/gtk/gtk-misc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/gtk/gens-gtk-misc.o -MD -MP -MF ui/gtk/$(DEPDIR)/gens-gtk-misc.Tpo -c -o ui/gtk/gens-gtk-misc.o `test -f 'ui/gtk/gtk-misc.c' || echo '$(srcdir)/'`ui/gtk/gtk-misc.c
	$(AM_V_at)$(am__mv) ui/gtk/$(DEPDIR)/gens-gtk-misc.Tpo ui/gtk/$(DEPDIR)/gens-gtk-misc.Po
#	$(AM_V_CC)source='ui/gtk/gtk-misc.c' object='ui/gtk/gens-gtk-misc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/gtk/gens-gtk-misc.o `test -f 'ui/gtk/gtk-misc.c' || echo '$(srcdir)/'`ui/gtk/gtk-misc.c

ui/gtk/gens-gtk-misc.obj: ui/gtk/gtk-misc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/gtk/gens-gtk-misc.obj -MD -MP -MF ui/gtk/$(DEPDIR)/gens-gtk-misc.Tpo -c -o ui/gtk/gens-gtk-misc.obj `if test -f 'ui/gtk/gtk-misc.c'; then $(CYGPATH_W) 'ui/gtk/gtk-misc.c'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/gtk-misc.c'; fi`
	$(AM_V_at)$(am__mv) ui/gtk/$(DEPDIR)/gens-gtk-misc.Tpo ui/gtk/$(DEPDIR)/gens-gtk-misc.Po
#	$(AM_V_CC)source='ui/gtk/gtk-misc.c' object='ui/gtk/gens-gtk-misc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/gtk/gens-gtk-misc.obj `if test -f 'ui/gtk/gtk-misc.c'; then $(CYGPATH_W) 'ui/gtk/gtk-misc.c'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/gtk-misc.c'; fi`

ui/gtk/gens-gtk-uri.o: ui/gtk/gtk-uri.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/gtk/gens-gtk-uri.o -MD -MP -MF ui/gtk/$(DEPDIR)/gens-gtk-uri.Tpo -c -o ui/gtk/gens-gtk-uri.o `test -f 'ui/gtk/gtk-uri.c' || echo '$(srcdir)/'`ui/gtk/gtk-uri.c
	$(AM_V_at)$(am__mv) ui/gtk/$(DEPDIR)/gens-gtk-uri.Tpo ui/gtk/$(DEPDIR)/gens-gtk-uri.Po
#	$(AM_V_CC)source='ui/gtk/gtk-uri.c' object='ui/gtk/gens-gtk-uri.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/gtk/gens-gtk-uri.o `test -f 'ui/gtk/gtk-uri.c' || echo '$(srcdir)/'`ui/gtk/gtk-uri.c

ui/gtk/gens-gtk-uri.obj: ui/gtk/gtk-uri.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/gtk/gens-gtk-uri.obj -MD -MP -MF ui/gtk/$(DEPDIR)/gens-gtk-uri.Tpo -c -o ui/gtk/gens-gtk-uri.obj `if test -f 'ui/gtk/gtk-uri.c'; then $(CYGPATH_W) 'ui/gtk/gtk-uri.c'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/gtk-uri.c'; fi`
	$(AM_V_at)$(am__mv) ui/gtk/$(DEPDIR)/gens-gtk-uri.Tpo ui/gtk/$(DEPDIR)/gens-gtk-uri.Po
#	$(AM_V_CC)source='ui/gtk/gtk-uri.c' object='ui/gtk/gens-gtk-uri.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/gtk/gens-gtk-uri.obj `if test -f 'ui/gtk/gtk-uri.c'; then $(CYGPATH_W) 'ui/gtk/gtk-uri.c'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/gtk-uri.c'; fi`

ui/gtk/gens/gens-gens_window.o: ui/gtk/gens/gens_window.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/gtk/gens/gens-gens_window.o -MD -MP -MF ui/gtk/gens/$(DEPDIR)/gens-gens_window.Tpo -c -o ui/gtk/gens/gens-gens_window.o `test -f 'ui/gtk/gens/gens_window.c' || echo '$(srcdir)/'`ui/gtk/gens/gens_window.c
	$(AM_V_at)$(am__mv) ui/gtk/gens/$(DEPDIR)/gens-gens_window.Tpo ui/gtk/gens/$(DEPDIR)/gens-gens_window.Po
#	$(AM_V_CC)source='ui/gtk/gens/gens_window.c' object='ui/gtk/gens/gens-gens_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/gtk/gens/gens-gens_window.o `test -f 'ui/gtk/gens/gens_window.c' || echo '$(srcdir)/'`ui/gtk/gens/gens_window.c

ui/gtk/gens/gens-gens_window.obj: ui/gtk/gens/gens_window.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/gtk/gens/gens-gens_window.obj -MD -MP -MF ui/gtk/gens/$(DEPDIR)/gens-gens_window.Tpo -c -o ui/gtk/gens/gens-gens_window.obj `if test -f 'ui/gtk/gens/gens_window.c'; then $(CYGPATH_W) 'ui/gtk/gens/gens_window.c'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/gens/gens_window.c'; fi`
	$(AM_V_at)$(am__mv) ui/gtk/gens/$(DEPDIR)/gens-gens_window.Tpo ui/gtk/gens/$(DEPDIR)/gens-gens_window.Po
#	$(AM_V_CC)source='ui/gtk/gens/gens_window.c' object='ui/gtk/gens/gens-gens_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/gtk/gens/gens-gens_window.obj `if test -f 'ui/gtk/gens/gens_window.c'; then $(CYGPATH_W) 'ui/gtk/gens/gens_window.c'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/gens/gens_window.c'; fi`

ui/gtk/controller_config/gens-cc_window.o: ui/gtk/controller_config/cc_window.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/gtk/controller_config/gens-cc_window.o -MD -MP -MF ui/gtk/controller_config/$(DEPDIR)/gens-cc_window.Tpo -c -o ui/gtk/controller_config/gens-cc_window.o `test -f 'ui/gtk/controller_config/cc_window.c' || echo '$(srcdir)/'`ui/gtk/controller_config/cc_window.c
	$(AM_V_at)$(am__mv) ui/gtk/controller_config/$(DEPDIR)/gens-cc_window.Tpo ui/gtk/controller_config/$(DEPDIR)/gens-cc_window.Po
#	$(AM_V_CC)source='ui/gtk/controller_config/cc_window.c' object='ui/gtk/controller_config/gens-cc_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/gtk/controller_config/gens-cc_window.o `test -f 'ui/gtk/controller_config/cc_window.c' || echo '$(srcdir)/'`ui/gtk/controller_config/cc_window.c

ui/gtk/controller_config/gens-cc_window.obj: ui/gtk/controller_config/cc_window.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/gtk/controller_config/gens-cc_window.obj -MD -MP -MF ui/gtk/controller_config/$(DEPDIR)/gens-cc_window.Tpo -c -o ui/gtk/controller_config/gens-cc_window.obj `if test -f 'ui/gtk/controller_config/cc_window.c'; then $(CYGPATH_W) 'ui/gtk/controller_config/cc_window.c'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/controller_config/cc_window.c'; fi`
	$(AM_V_at)$(am__mv) ui/gtk/controller_config/$(DEPDIR)/gens-cc_window.Tpo ui/gtk/controller_config/$(DEPDIR)/gens-cc_window.Po
#	$(AM_V_CC)source='ui/gtk/controller_config/cc_window.c' object='ui/gtk/controller_config/gens-cc_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/gtk/controller_config/gens-cc_window.obj `if test -f 'ui/gtk/controller_config/cc_window.c'; then $(CYGPATH_W) 'ui/gtk/controller_config/cc_window.c'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/controller_config/cc_window.c'; fi`

ui/gtk/color_adjust/gens-ca_window.o: ui/gtk/color_adjust/ca_window.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/gtk/color_adjust/gens-ca_window.o -MD -MP -MF ui/gtk/color_adjust/$(DEPDIR)/gens-ca_window.Tpo -c -o ui/gtk/color_adjust/gens-ca_window.o `test -f 'ui/gtk/color_adjust/ca_window.c' || echo '$(srcdir)/'`ui/gtk/color_adjust/ca_window.c
	$(AM_V_at)$(am__mv) ui/gtk/color_adjust/$(DEPDIR)/gens-ca_window.Tpo ui/gtk/color_adjust/$(DEPDIR)/gens-ca_window.Po
#	$(AM_V_CC)source='ui/gtk/color_adjust/ca_window.c' object='ui/gtk/color_adjust/gens-ca_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/gtk/color_adjust/gens-ca_window.o `test -f 'ui/gtk/color_adjust/ca_window.c' || echo '$(srcdir)/'`ui/gtk/color_adjust/ca_window.c

ui/gtk/color_adjust/gens-ca_window.obj: ui/gtk/color_adjust/ca_window.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/gtk/color_adjust/gens-ca_window.obj -MD -MP -MF ui/gtk/color_adjust/$(DEPDIR)/gens-ca_window.Tpo -c -o ui/gtk/color_adjust/gens-ca_window.obj `if test -f 'ui/gtk/color_adjust/ca_window.c'; then $(CYGPATH_W) 'ui/gtk/color_adjust/ca_window.c'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/color_adjust/ca_window.c'; fi`
	$(AM_V_at)$(am__mv) ui/gtk/color_adjust/$(DEPDIR)/gens-ca_window.Tpo ui/gtk/color_adjust/$(DEPDIR)/gens-ca_window.Po
#	$(AM_V_CC)source='ui/gtk/color_adjust/ca_window.c' object='ui/gtk/color_adjust/gens-ca_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/gtk/color_adjust/gens-ca_window.obj `if test -f 'ui/gtk/color_adjust/ca_window.c'; then $(CYGPATH_W) 'ui/gtk/color_adjust/ca_window.c'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/color_adjust/ca_window.c'; fi`

ui/gtk/country_code/gens-ccode_window.o: ui/gtk/country_code/ccode_window.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/gtk/country_code/gens-ccode_window.o -MD -MP -MF ui/gtk/country_code/$(DEPDIR)/gens-ccode_window.Tpo -c -o ui/gtk/country_code/gens-ccode_window.o `test -f 'ui/gtk/country_code/ccode_window.c' || echo '$(srcdir)/'`ui/gtk/country_code/ccode_window.c
	$(AM_V_at)$(am__mv) ui/gtk/country_code/$(DEPDIR)/gens-ccode_window.Tpo ui/gtk/country_code/$(DEPDIR)/gens-ccode_window.Po
#	$(AM_V_CC)source='ui/gtk/country_code/ccode_window.c' object='ui/gtk/country_code/gens-ccode_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/gtk/country_code/gens-ccode_window.o `test -f 'ui/gtk/country_code/ccode_window.c' || echo '$(srcdir)/'`ui/gtk/country_code/ccode_window.c

ui/gtk/country_code/gens-ccode_window.obj: ui/gtk/country_code/ccode_window.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/gtk/country_code/gens-ccode_window.obj -MD -MP -MF ui/gtk/country_code/$(DEPDIR)/gens-ccode_window.Tpo -c -o ui/gtk/country_code/gens-ccode_window.obj `if test -f 'ui/gtk/country_code/ccode_window.c'; then $(CYGPATH_W) 'ui/gtk/country_code/ccode_window.c'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/country_code/ccode_window.c'; fi`
	$(AM_V_at)$(am__mv) ui/gtk/country_code/$(DEPDIR)/gens-ccode_window.Tpo ui/gtk/country_code/$(DEPDIR)/gens-ccode_window.Po
#	$(AM_V_CC)source='ui/gtk/country_code/ccode_window.c' object='ui/gtk/country_code/gens-ccode_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/gtk/country_code/gens-ccode_window.obj `if test -f 'ui/gtk/country_code/ccode_window.c'; then $(CYGPATH_W) 'ui/gtk/country_code/ccode_window.c'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/country_code/ccode_window.c'; fi`

ui/gtk/zip_select/gens-zipsel_dialog.o: ui/gtk/zip_select/zipsel_dialog.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/gtk/zip_select/gens-zipsel_dialog.o -MD -MP -MF ui/gtk/zip_select/$(DEPDIR)/gens-zipsel_dialog.Tpo -c -o ui/gtk/zip_select/gens-zipsel_dialog.o `test -f 'ui/gtk/zip_select/zipsel_dialog.c' || echo '$(srcdir)/'`ui/gtk/zip_select/zipsel_dialog.c
	$(AM_V_at)$(am__mv) ui/gtk/zip_select/$(DEPDIR)/gens-zipsel_dialog.Tpo ui/gtk/zip_select/$(DEPDIR)/gens-zipsel_dialog.Po
#	$(AM_V_CC)source='ui/gtk/zip_select/zipsel_dialog.c' object='ui/gtk/zip_select/gens-zipsel_dialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/gtk/zip_select/gens-zipsel_dialog.o `test -f 'ui/gtk/zip_select/zipsel_dialog.c' || echo '$(srcdir)/'`ui/gtk/zip_select/zipsel_dialog.c

ui/gtk/zip_select/gens-zipsel_dialog.obj: ui/gtk/zip_select/zipsel_dialog.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/gtk/zip_select/gens-zipsel_dialog.obj -MD -MP -MF ui/gtk/zip_select/$(DEPDIR)/gens-zipsel_dialog.Tpo -c -o ui/gtk/zip_select/gens-zipsel_dialog.obj `if test -f 'ui/gtk/zip_select/zipsel_dialog.c'; then $(CYGPATH_W) 'ui/gtk/zip_select/zipsel_dialog.c'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/zip_select/zipsel_dialog.c'; fi`
	$(AM_V_at)$(am__mv) ui/gtk/zip_select/$(DEPDIR)/gens-zipsel_dialog.Tpo ui/gtk/zip_select/$(DEPDIR)/gens-zipsel_dialog.Po
#	$(AM_V_CC)source='ui/gtk/zip_select/zipsel_dialog.c' object='ui/gtk/zip_select/gens-zipsel_dialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/gtk/zip_select/gens-zipsel_dialog.obj `if test -f 'ui/gtk/zip_select/zipsel_dialog.c'; then $(CYGPATH_W) 'ui/gtk/zip_select/zipsel_dialog.c'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/zip_select/zipsel_dialog.c'; fi`

video/gens-vdraw_sdl_gl.o: video/vdraw_sdl_gl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT video/gens-vdraw_sdl_gl.o -MD -MP -MF video/$(DEPDIR)/gens-vdraw_sdl_gl.Tpo -c -o video/gens-vdraw_sdl_gl.o `test -f 'video/vdraw_sdl_gl.c' || echo '$(srcdir)/'`video/vdraw_sdl_gl.c
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-vdraw_sdl_gl.Tpo video/$(DEPDIR)/gens-vdraw_sdl_gl.Po
#	$(AM_V_CC)source='video/vdraw_sdl_gl.c' object='video/gens-vdraw_sdl_gl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o video/gens-vdraw_sdl_gl.o `test -f 'video/vdraw_sdl_gl.c' || echo '$(srcdir)/'`video/vdraw_sdl_gl.c

video/gens-vdraw_sdl_gl.obj: video/vdraw_sdl_gl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT video/gens-vdraw_sdl_gl.obj -MD -MP -MF video/$(DEPDIR)/gens-vdraw_sdl_gl.Tpo -c -o video/gens-vdraw_sdl_gl.obj `if test -f 'video/vdraw_sdl_gl.c'; then $(CYGPATH_W) 'video/vdraw_sdl_gl.c'; else $(CYGPATH_W) '$(srcdir)/video/vdraw_sdl_gl.c'; fi`
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-vdraw_sdl_gl.Tpo video/$(DEPDIR)/gens-vdraw_sdl_gl.Po
#	$(AM_V_CC)source='video/vdraw_sdl_gl.c' object='video/gens-vdraw_sdl_gl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o video/gens-vdraw_sdl_gl.obj `if test -f 'video/vdraw_sdl_gl.c'; then $(CYGPATH_W) 'video/vdraw_sdl_gl.c'; else $(CYGPATH_W) '$(srcdir)/video/vdraw_sdl_gl.c'; fi`

video/gens-vdraw_gl_cgl.o: video/vdraw_gl_cgl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT video/gens-vdraw_gl_cgl.o -MD -MP -MF video/$(DEPDIR)/gens-vdraw_gl_cgl.Tpo -c -o video/gens-vdraw_gl_cgl.o `test -f 'video/vdraw_gl_cgl.c' || echo '$(srcdir)/'`video/vdraw_gl_cgl.c
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-vdraw_gl_cgl.Tpo video/$(DEPDIR)/gens-vdraw_gl_cgl.Po
#	$(AM_V_CC)source='video/vdraw_gl_cgl.c' object='video/gens-vdraw_gl_cgl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o video/gens-vdraw_gl_cgl.o `test -f 'video/vdraw_gl_cgl.c' || echo '$(srcdir)/'`video/vdraw_gl_cgl.c

video/gens-vdraw_gl_cgl.obj: video/vdraw_gl_cgl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT video/gens-vdraw_gl_cgl.obj -MD -MP -MF video/$(DEPDIR)/gens-vdraw_gl_cgl.Tpo -c -o video/gens-vdraw_gl_cgl.obj `if test -f 'video/vdraw_gl_cgl.c'; then $(CYGPATH_W) 'video/vdraw_gl_cgl.c'; else $(CYGPATH_W) '$(srcdir)/video/vdraw_gl_cgl.c'; fi`
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-vdraw_gl_cgl.Tpo video/$(DEPDIR)/gens-vdraw_gl_cgl.Po
#	$(AM_V_CC)source='video/vdraw_gl_cgl.c' object='video/gens-vdraw_gl_cgl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o video/gens-vdraw_gl_cgl.obj `if test -f 'video/vdraw_gl_cgl.c'; then $(CYGPATH_W) 'video/vdraw_gl_cgl.c'; else $(CYGPATH_W) '$(srcdir)/video/vdraw_gl_cgl.c'; fi`

video/gens-vdraw_gl_glx.o: video/vdraw_gl_glx.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT video/gens-vdraw_gl_glx.o -MD -MP -MF video/$(DEPDIR)/gens-vdraw_gl_glx.Tpo -c -o video/gens-vdraw_gl_glx.o `test -f 'video/vdraw_gl_glx.c' || echo '$(srcdir)/'`video/vdraw_gl_glx.c
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-vdraw_gl_glx.Tpo video/$(DEPDIR)/gens-vdraw_gl_glx.Po
#	$(AM_V_CC)source='video/vdraw_gl_glx.c' object='video/gens-vdraw_gl_glx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o video/gens-vdraw_gl_glx.o `test -f 'video/vdraw_gl_glx.c' || echo '$(srcdir)/'`video/vdraw_gl_glx.c

video/gens-vdraw_gl_glx.obj: video/vdraw_gl_glx.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT video/gens-vdraw_gl_glx.obj -MD -MP -MF video/$(DEPDIR)/gens-vdraw_gl_glx.Tpo -c -o video/gens-vdraw_gl_glx.obj `if test -f 'video/vdraw_gl_glx.c'; then $(CYGPATH_W) 'video/vdraw_gl_glx.c'; else $(CYGPATH_W) '$(srcdir)/video/vdraw_gl_glx.c'; fi`
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-vdraw_gl_glx.Tpo video/$(DEPDIR)/gens-vdraw_gl_glx.Po
#	$(AM_V_CC)source='video/vdraw_gl_glx.c' object='video/gens-vdraw_gl_glx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o video/gens-vdraw_gl_glx.obj `if test -f 'video/vdraw_gl_glx.c'; then $(CYGPATH_W) 'video/vdraw_gl_glx.c'; else $(CYGPATH_W) '$(srcdir)/video/vdraw_gl_glx.c'; fi`

port/gens-argc_argv.o: port/argc_argv.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT port/gens-argc_argv.o -MD -MP -MF port/$(DEPDIR)/gens-argc_argv.Tpo -c -o port/gens-argc_argv.o `test -f 'port/argc_argv.c' || echo '$(srcdir)/'`port/argc_argv.c
	$(AM_V_at)$(am__mv) port/$(DEPDIR)/gens-argc_argv.Tpo port/$(DEPDIR)/gens-argc_argv.Po
#	$(AM_V_CC)source='port/argc_argv.c' object='port/gens-argc_argv.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o port/gens-argc_argv.o `test -f 'port/argc_argv.c' || echo '$(srcdir)/'`port/argc_argv.c

port/gens-argc_argv.obj: port/argc_argv.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT port/gens-argc_argv.obj -MD -MP -MF port/$(DEPDIR)/gens-argc_argv.Tpo -c -o port/gens-argc_argv.obj `if test -f 'port/argc_argv.c'; then $(CYGPATH_W) 'port/argc_argv.c'; else $(CYGPATH_W) '$(srcdir)/port/argc_argv.c'; fi`
	$(AM_V_at)$(am__mv) port/$(DEPDIR)/gens-argc_argv.Tpo port/$(DEPDIR)/gens-argc_argv.Po
#	$(AM_V_CC)source='port/argc_argv.c' object='port/gens-argc_argv.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o port/gens-argc_argv.obj `if test -f 'port/argc_argv.c'; then $(CYGPATH_W) 'port/argc_argv.c'; else $(CYGPATH_W) '$(srcdir)/port/argc_argv.c'; fi`

video/gens-vdraw_gdi.o: video/vdraw_gdi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT video/gens-vdraw_gdi.o -MD -MP -MF video/$(DEPDIR)/gens-vdraw_gdi.Tpo -c -o video/gens-vdraw_gdi.o `test -f 'video/vdraw_gdi.c' || echo '$(srcdir)/'`video/vdraw_gdi.c
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-vdraw_gdi.Tpo video/$(DEPDIR)/gens-vdraw_gdi.Po
#	$(AM_V_CC)source='video/vdraw_gdi.c' object='video/gens-vdraw_gdi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o video/gens-vdraw_gdi.o `test -f 'video/vdraw_gdi.c' || echo '$(srcdir)/'`video/vdraw_gdi.c

video/gens-vdraw_gdi.obj: video/vdraw_gdi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT video/gens-vdraw_gdi.obj -MD -MP -MF video/$(DEPDIR)/gens-vdraw_gdi.Tpo -c -o video/gens-vdraw_gdi.obj `if test -f 'video/vdraw_gdi.c'; then $(CYGPATH_W) 'video/vdraw_gdi.c'; else $(CYGPATH_W) '$(srcdir)/video/vdraw_gdi.c'; fi`
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-vdraw_gdi.Tpo video/$(DEPDIR)/gens-vdraw_gdi.Po
#	$(AM_V_CC)source='video/vdraw_gdi.c' object='video/gens-vdraw_gdi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o video/gens-vdraw_gdi.obj `if test -f 'video/vdraw_gdi.c'; then $(CYGPATH_W) 'video/vdraw_gdi.c'; else $(CYGPATH_W) '$(srcdir)/video/vdraw_gdi.c'; fi`

video/gens-vdraw_ddraw_t.o: video/vdraw_ddraw_t.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT video/gens-vdraw_ddraw_t.o -MD -MP -MF video/$(DEPDIR)/gens-vdraw_ddraw_t.Tpo -c -o video/gens-vdraw_ddraw_t.o `test -f 'video/vdraw_ddraw_t.c' || echo '$(srcdir)/'`video/vdraw_ddraw_t.c
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-vdraw_ddraw_t.Tpo video/$(DEPDIR)/gens-vdraw_ddraw_t.Po
#	$(AM_V_CC)source='video/vdraw_ddraw_t.c' object='video/gens-vdraw_ddraw_t.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o video/gens-vdraw_ddraw_t.o `test -f 'video/vdraw_ddraw_t.c' || echo '$(srcdir)/'`video/vdraw_ddraw_t.c

video/gens-vdraw_ddraw_t.obj: video/vdraw_ddraw_t.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT video/gens-vdraw_ddraw_t.obj -MD -MP -MF video/$(DEPDIR)/gens-vdraw_ddraw_t.Tpo -c -o video/gens-vdraw_ddraw_t.obj `if test -f 'video/vdraw_ddraw_t.c'; then $(CYGPATH_W) 'video/vdraw_ddraw_t.c'; else $(CYGPATH_W) '$(srcdir)/video/vdraw_ddraw_t.c'; fi`
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-vdraw_ddraw_t.Tpo video/$(DEPDIR)/gens-vdraw_ddraw_t.Po
#	$(AM_V_CC)source='video/vdraw_ddraw_t.c' object='video/gens-vdraw_ddraw_t.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o video/gens-vdraw_ddraw_t.obj `if test -f 'video/vdraw_ddraw_t.c'; then $(CYGPATH_W) 'video/vdraw_ddraw_t.c'; else $(CYGPATH_W) '$(srcdir)/video/vdraw_ddraw_t.c'; fi`

input/gens-input_dinput_t.o: input/input_dinput_t.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT input/gens-input_dinput_t.o -MD -MP -MF input/$(DEPDIR)/gens-input_dinput_t.Tpo -c -o input/gens-input_dinput_t.o `test -f 'input/input_dinput_t.c' || echo '$(srcdir)/'`input/input_dinput_t.c
	$(AM_V_at)$(am__mv) input/$(DEPDIR)/gens-input_dinput_t.Tpo input/$(DEPDIR)/gens-input_dinput_t.Po
#	$(AM_V_CC)source='input/input_dinput_t.c' object='input/gens-input_dinput_t.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o input/gens-input_dinput_t.o `test -f 'input/input_dinput_t.c' || echo '$(srcdir)/'`input/input_dinput_t.c

input/gens-input_dinput_t.obj: input/input_dinput_t.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT input/gens-input_dinput_t.obj -MD -MP -MF input/$(DEPDIR)/gens-input_dinput_t.Tpo -c -o input/gens-input_dinput_t.obj `if test -f 'input/input_dinput_t.c'; then $(CYGPATH_W) 'input/input_dinput_t.c'; else $(CYGPATH_W) '$(srcdir)/input/input_dinput_t.c'; fi`
	$(AM_V_at)$(am__mv) input/$(DEPDIR)/gens-input_dinput_t.Tpo input/$(DEPDIR)/gens-input_dinput_t.Po
#	$(AM_V_CC)source='input/input_dinput_t.c' object='input/gens-input_dinput_t.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o input/gens-input_dinput_t.obj `if test -f 'input/input_dinput_t.c'; then $(CYGPATH_W) 'input/input_dinput_t.c'; else $(CYGPATH_W) '$(srcdir)/input/input_dinput_t.c'; fi`

input/gens-input_dinput_key_names.o: input/input_dinput_key_names.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT input/gens-input_dinput_key_names.o -MD -MP -MF input/$(DEPDIR)/gens-input_dinput_key_names.Tpo -c -o input/gens-input_dinput_key_names.o `test -f 'input/input_dinput_key_names.c' || echo '$(srcdir)/'`input/input_dinput_key_names.c
	$(AM_V_at)$(am__mv) input/$(DEPDIR)/gens-input_dinput_key_names.Tpo input/$(DEPDIR)/gens-input_dinput_key_names.Po
#	$(AM_V_CC)source='input/input_dinput_key_names.c' object='input/gens-input_dinput_key_names.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o input/gens-input_dinput_key_names.o `test -f 'input/input_dinput_key_names.c' || echo '$(srcdir)/'`input/input_dinput_key_names.c

input/gens-input_dinput_key_names.obj: input/input_dinput_key_names.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT input/gens-input_dinput_key_names.obj -MD -MP -MF input/$(DEPDIR)/gens-input_dinput_key_names.Tpo -c -o input/gens-input_dinput_key_names.obj `if test -f 'input/input_dinput_key_names.c'; then $(CYGPATH_W) 'input/input_dinput_key_names.c'; else $(CYGPATH_W) '$(srcdir)/input/input_dinput_key_names.c'; fi`
	$(AM_V_at)$(am__mv) input/$(DEPDIR)/gens-input_dinput_key_names.Tpo input/$(DEPDIR)/gens-input_dinput_key_names.Po
#	$(AM_V_CC)source='input/input_dinput_key_names.c' object='input/gens-input_dinput_key_names.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o input/gens-input_dinput_key_names.obj `if test -f 'input/input_dinput_key_names.c'; then $(CYGPATH_W) 'input/input_dinput_key_names.c'; else $(CYGPATH_W) '$(srcdir)/input/input_dinput_key_names.c'; fi`

audio/gens-audio_dsound_t.o: audio/audio_dsound_t.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT audio/gens-audio_dsound_t.o -MD -MP -MF audio/$(DEPDIR)/gens-audio_dsound_t.Tpo -c -o audio/gens-audio_dsound_t.o `test -f 'audio/audio_dsound_t.c' || echo '$(srcdir)/'`audio/audio_dsound_t.c
	$(AM_V_at)$(am__mv) audio/$(DEPDIR)/gens-audio_dsound_t.Tpo audio/$(DEPDIR)/gens-audio_dsound_t.Po
#	$(AM_V_CC)source='audio/audio_dsound_t.c' object='audio/gens-audio_dsound_t.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o audio/gens-audio_dsound_t.o `test -f 'audio/audio_dsound_t.c' || echo '$(srcdir)/'`audio/audio_dsound_t.c

audio/gens-audio_dsound_t.obj: audio/audio_dsound_t.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT audio/gens-audio_dsound_t.obj -MD -MP -MF audio/$(DEPDIR)/gens-audio_dsound_t.Tpo -c -o audio/gens-audio_dsound_t.obj `if test -f 'audio/audio_dsound_t.c'; then $(CYGPATH_W) 'audio/audio_dsound_t.c'; else $(CYGPATH_W) '$(srcdir)/audio/audio_dsound_t.c'; fi`
	$(AM_V_at)$(am__mv) audio/$(DEPDIR)/gens-audio_dsound_t.Tpo audio/$(DEPDIR)/gens-audio_dsound_t.Po
#	$(AM_V_CC)source='audio/audio_dsound_t.c' object='audio/gens-audio_dsound_t.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o audio/gens-audio_dsound_t.obj `if test -f 'audio/audio_dsound_t.c'; then $(CYGPATH_W) 'audio/audio_dsound_t.c'; else $(CYGPATH_W) '$(srcdir)/audio/audio_dsound_t.c'; fi`

plugins/gens-mdp_host_gens_win32.o: plugins/mdp_host_gens_win32.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT plugins/gens-mdp_host_gens_win32.o -MD -MP -MF plugins/$(DEPDIR)/gens-mdp_host_gens_win32.Tpo -c -o plugins/gens-mdp_host_gens_win32.o `test -f 'plugins/mdp_host_gens_win32.c' || echo '$(srcdir)/'`plugins/mdp_host_gens_win32.c
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/gens-mdp_host_gens_win32.Tpo plugins/$(DEPDIR)/gens-mdp_host_gens_win32.Po
#	$(AM_V_CC)source='plugins/mdp_host_gens_win32.c' object='plugins/gens-mdp_host_gens_win32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o plugins/gens-mdp_host_gens_win32.o `test -f 'plugins/mdp_host_gens_win32.c' || echo '$(srcdir)/'`plugins/mdp_host_gens_win32.c

plugins/gens-mdp_host_gens_win32.obj: plugins/mdp_host_gens_win32.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT plugins/gens-mdp_host_gens_win32.obj -MD -MP -MF plugins/$(DEPDIR)/gens-mdp_host_gens_win32.Tpo -c -o plugins/gens-mdp_host_gens_win32.obj `if test -f 'plugins/mdp_host_gens_win32.c'; then $(CYGPATH_W) 'plugins/mdp_host_gens_win32.c'; else $(CYGPATH_W) '$(srcdir)/plugins/mdp_host_gens_win32.c'; fi`
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/gens-mdp_host_gens_win32.Tpo plugins/$(DEPDIR)/gens-mdp_host_gens_win32.Po
#	$(AM_V_CC)source='plugins/mdp_host_gens_win32.c' object='plugins/gens-mdp_host_gens_win32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o plugins/gens-mdp_host_gens_win32.obj `if test -f 'plugins/mdp_host_gens_win32.c'; then $(CYGPATH_W) 'plugins/mdp_host_gens_win32.c'; else $(CYGPATH_W) '$(srcdir)/plugins/mdp_host_gens_win32.c'; fi`

util/file/decompressor/gens-popen_wrapper.o: util/file/decompressor/popen_wrapper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT util/file/decompressor/gens-popen_wrapper.o -MD -MP -MF util/file/decompressor/$(DEPDIR)/gens-popen_wrapper.Tpo -c -o util/file/decompressor/gens-popen_wrapper.o `test -f 'util/file/decompressor/popen_wrapper.c' || echo '$(srcdir)/'`util/file/decompressor/popen_wrapper.c
	$(AM_V_at)$(am__mv) util/file/decompressor/$(DEPDIR)/gens-popen_wrapper.Tpo util/file/decompressor/$(DEPDIR)/gens-popen_wrapper.Po
#	$(AM_V_CC)source='util/file/decompressor/popen_wrapper.c' object='util/file/decompressor/gens-popen_wrapper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o util/file/decompressor/gens-popen_wrapper.o `test -f 'util/file/decompressor/popen_wrapper.c' || echo '$(srcdir)/'`util/file/decompressor/popen_wrapper.c

util/file/decompressor/gens-popen_wrapper.obj: util/file/decompressor/popen_wrapper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT util/file/decompressor/gens-popen_wrapper.obj -MD -MP -MF util/file/decompressor/$(DEPDIR)/gens-popen_wrapper.Tpo -c -o util/file/decompressor/gens-popen_wrapper.obj `if test -f 'util/file/decompressor/popen_wrapper.c'; then $(CYGPATH_W) 'util/file/decompressor/popen_wrapper.c'; else $(CYGPATH_W) '$(srcdir)/util/file/decompressor/popen_wrapper.c'; fi`
	$(AM_V_at)$(am__mv) util/file/decompressor/$(DEPDIR)/gens-popen_wrapper.Tpo util/file/decompressor/$(DEPDIR)/gens-popen_wrapper.Po
#	$(AM_V_CC)source='util/file/decompressor/popen_wrapper.c' object='util/file/decompressor/gens-popen_wrapper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o util/file/decompressor/gens-popen_wrapper.obj `if test -f 'util/file/decompressor/popen_wrapper.c'; then $(CYGPATH_W) 'util/file/decompressor/popen_wrapper.c'; else $(CYGPATH_W) '$(srcdir)/util/file/decompressor/popen_wrapper.c'; fi`

ui/win32/gens-fonts.o: ui/win32/fonts.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/win32/gens-fonts.o -MD -MP -MF ui/win32/$(DEPDIR)/gens-fonts.Tpo -c -o ui/win32/gens-fonts.o `test -f 'ui/win32/fonts.c' || echo '$(srcdir)/'`ui/win32/fonts.c
	$(AM_V_at)$(am__mv) ui/win32/$(DEPDIR)/gens-fonts.Tpo ui/win32/$(DEPDIR)/gens-fonts.Po
#	$(AM_V_CC)source='ui/win32/fonts.c' object='ui/win32/gens-fonts.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/win32/gens-fonts.o `test -f 'ui/win32/fonts.c' || echo '$(srcdir)/'`ui/win32/fonts.c

ui/win32/gens-fonts.obj: ui/win32/fonts.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/win32/gens-fonts.obj -MD -MP -MF ui/win32/$(DEPDIR)/gens-fonts.Tpo -c -o ui/win32/gens-fonts.obj `if test -f 'ui/win32/fonts.c'; then $(CYGPATH_W) 'ui/win32/fonts.c'; else $(CYGPATH_W) '$(srcdir)/ui/win32/fonts.c'; fi`
	$(AM_V_at)$(am__mv) ui/win32/$(DEPDIR)/gens-fonts.Tpo ui/win32/$(DEPDIR)/gens-fonts.Po
#	$(AM_V_CC)source='ui/win32/fonts.c' object='ui/win32/gens-fonts.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/win32/gens-fonts.obj `if test -f 'ui/win32/fonts.c'; then $(CYGPATH_W) 'ui/win32/fonts.c'; else $(CYGPATH_W) '$(srcdir)/ui/win32/fonts.c'; fi`

ui/win32/gens-cc6.o: ui/win32/cc6.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/win32/gens-cc6.o -MD -MP -MF ui/win32/$(DEPDIR)/gens-cc6.Tpo -c -o ui/win32/gens-cc6.o `test -f 'ui/win32/cc6.c' || echo '$(srcdir)/'`ui/win32/cc6.c
	$(AM_V_at)$(am__mv) ui/win32/$(DEPDIR)/gens-cc6.Tpo ui/win32/$(DEPDIR)/gens-cc6.Po
#	$(AM_V_CC)source='ui/win32/cc6.c' object='ui/win32/gens-cc6.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/win32/gens-cc6.o `test -f 'ui/win32/cc6.c' || echo '$(srcdir)/'`ui/win32/cc6.c

ui/win32/gens-cc6.obj: ui/win32/cc6.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/win32/gens-cc6.obj -MD -MP -MF ui/win32/$(DEPDIR)/gens-cc6.Tpo -c -o ui/win32/gens-cc6.obj `if test -f 'ui/win32/cc6.c'; then $(CYGPATH_W) 'ui/win32/cc6.c'; else $(CYGPATH_W) '$(srcdir)/ui/win32/cc6.c'; fi`
	$(AM_V_at)$(am__mv) ui/win32/$(DEPDIR)/gens-cc6.Tpo ui/win32/$(DEPDIR)/gens-cc6.Po
#	$(AM_V_CC)source='ui/win32/cc6.c' object='ui/win32/gens-cc6.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/win32/gens-cc6.obj `if test -f 'ui/win32/cc6.c'; then $(CYGPATH_W) 'ui/win32/cc6.c'; else $(CYGPATH_W) '$(srcdir)/ui/win32/cc6.c'; fi`

ui/win32/gens/gens-gens_window.o: ui/win32/gens/gens_window.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/win32/gens/gens-gens_window.o -MD -MP -MF ui/win32/gens/$(DEPDIR)/gens-gens_window.Tpo -c -o ui/win32/gens/gens-gens_window.o `test -f 'ui/win32/gens/gens_window.c' || echo '$(srcdir)/'`ui/win32/gens/gens_window.c
	$(AM_V_at)$(am__mv) ui/win32/gens/$(DEPDIR)/gens-gens_window.Tpo ui/win32/gens/$(DEPDIR)/gens-gens_window.Po
#	$(AM_V_CC)source='ui/win32/gens/gens_window.c' object='ui/win32/gens/gens-gens_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/win32/gens/gens-gens_window.o `test -f 'ui/win32/gens/gens_window.c' || echo '$(srcdir)/'`ui/win32/gens/gens_window.c

ui/win32/gens/gens-gens_window.obj: ui/win32/gens/gens_window.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/win32/gens/gens-gens_window.obj -MD -MP -MF ui/win32/gens/$(DEPDIR)/gens-gens_window.Tpo -c -o ui/win32/gens/gens-gens_window.obj `if test -f 'ui/win32/gens/gens_window.c'; then $(CYGPATH_W) 'ui/win32/gens/gens_window.c'; else $(CYGPATH_W) '$(srcdir)/ui/win32/gens/gens_window.c'; fi`
	$(AM_V_at)$(am__mv) ui/win32/gens/$(DEPDIR)/gens-gens_window.Tpo ui/win32/gens/$(DEPDIR)/gens-gens_window.Po
#	$(AM_V_CC)source='ui/win32/gens/gens_window.c' object='ui/win32/gens/gens-gens_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/win32/gens/gens-gens_window.obj `if test -f 'ui/win32/gens/gens_window.c'; then $(CYGPATH_W) 'ui/win32/gens/gens_window.c'; else $(CYGPATH_W) '$(srcdir)/ui/win32/gens/gens_window.c'; fi`

ui/win32/controller_config/gens-cc_window.o: ui/win32/controller_config/cc_window.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/win32/controller_config/gens-cc_window.o -MD -MP -MF ui/win32/controller_config/$(DEPDIR)/gens-cc_window.Tpo -c -o ui/win32/controller_config/gens-cc_window.o `test -f 'ui/win32/controller_config/cc_window.c' || echo '$(srcdir)/'`ui/win32/controller_config/cc_window.c
	$(AM_V_at)$(am__mv) ui/win32/controller_config/$(DEPDIR)/gens-cc_window.Tpo ui/win32/controller_config/$(DEPDIR)/gens-cc_window.Po
#	$(AM_V_CC)source='ui/win32/controller_config/cc_window.c' object='ui/win32/controller_config/gens-cc_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/win32/controller_config/gens-cc_window.o `test -f 'ui/win32/controller_config/cc_window.c' || echo '$(srcdir)/'`ui/win32/controller_config/cc_window.c

ui/win32/controller_config/gens-cc_window.obj: ui/win32/controller_config/cc_window.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/win32/controller_config/gens-cc_window.obj -MD -MP -MF ui/win32/controller_config/$(DEPDIR)/gens-cc_window.Tpo -c -o ui/win32/controller_config/gens-cc_window.obj `if test -f 'ui/win32/controller_config/cc_window.c'; then $(CYGPATH_W) 'ui/win32/controller_config/cc_window.c'; else $(CYGPATH_W) '$(srcdir)/ui/win32/controller_config/cc_window.c'; fi`
	$(AM_V_at)$(am__mv) ui/win32/controller_config/$(DEPDIR)/gens-cc_window.Tpo ui/win32/controller_config/$(DEPDIR)/gens-cc_window.Po
#	$(AM_V_CC)source='ui/win32/controller_config/cc_window.c' object='ui/win32/controller_config/gens-cc_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/win32/controller_config/gens-cc_window.obj `if test -f 'ui/win32/controller_config/cc_window.c'; then $(CYGPATH_W) 'ui/win32/controller_config/cc_window.c'; else $(CYGPATH_W) '$(srcdir)/ui/win32/controller_config/cc_window.c'; fi`

ui/win32/color_adjust/gens-ca_window.o: ui/win32/color_adjust/ca_window.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/win32/color_adjust/gens-ca_window.o -MD -MP -MF ui/win32/color_adjust/$(DEPDIR)/gens-ca_window.Tpo -c -o ui/win32/color_adjust/gens-ca_window.o `test -f 'ui/win32/color_adjust/ca_window.c' || echo '$(srcdir)/'`ui/win32/color_adjust/ca_window.c
	$(AM_V_at)$(am__mv) ui/win32/color_adjust/$(DEPDIR)/gens-ca_window.Tpo ui/win32/color_adjust/$(DEPDIR)/gens-ca_window.Po
#	$(AM_V_CC)source='ui/win32/color_adjust/ca_window.c' object='ui/win32/color_adjust/gens-ca_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/win32/color_adjust/gens-ca_window.o `test -f 'ui/win32/color_adjust/ca_window.c' || echo '$(srcdir)/'`ui/win32/color_adjust/ca_window.c

ui/win32/color_adjust/gens-ca_window.obj: ui/win32/color_adjust/ca_window.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/win32/color_adjust/gens-ca_window.obj -MD -MP -MF ui/win32/color_adjust/$(DEPDIR)/gens-ca_window.Tpo -c -o ui/win32/color_adjust/gens-ca_window.obj `if test -f 'ui/win32/color_adjust/ca_window.c'; then $(CYGPATH_W) 'ui/win32/color_adjust/ca_window.c'; else $(CYGPATH_W) '$(srcdir)/ui/win32/color_adjust/ca_window.c'; fi`
	$(AM_V_at)$(am__mv) ui/win32/color_adjust/$(DEPDIR)/gens-ca_window.Tpo ui/win32/color_adjust/$(DEPDIR)/gens-ca_window.Po
#	$(AM_V_CC)source='ui/win32/color_adjust/ca_window.c' object='ui/win32/color_adjust/gens-ca_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/win32/color_adjust/gens-ca_window.obj `if test -f 'ui/win32/color_adjust/ca_window.c'; then $(CYGPATH_W) 'ui/win32/color_adjust/ca_window.c'; else $(CYGPATH_W) '$(srcdir)/ui/win32/color_adjust/ca_window.c'; fi`

ui/win32/country_code/gens-ccode_window.o: ui/win32/country_code/ccode_window.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/win32/country_code/gens-ccode_window.o -MD -MP -MF ui/win32/country_code/$(DEPDIR)/gens-ccode_window.Tpo -c -o ui/win32/country_code/gens-ccode_window.o `test -f 'ui/win32/country_code/ccode_window.c' || echo '$(srcdir)/'`ui/win32/country_code/ccode_window.c
	$(AM_V_at)$(am__mv) ui/win32/country_code/$(DEPDIR)/gens-ccode_window.Tpo ui/win32/country_code/$(DEPDIR)/gens-ccode_window.Po
#	$(AM_V_CC)source='ui/win32/country_code/ccode_window.c' object='ui/win32/country_code/gens-ccode_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/win32/country_code/gens-ccode_window.o `test -f 'ui/win32/country_code/ccode_window.c' || echo '$(srcdir)/'`ui/win32/country_code/ccode_window.c

ui/win32/country_code/gens-ccode_window.obj: ui/win32/country_code/ccode_window.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/win32/country_code/gens-ccode_window.obj -MD -MP -MF ui/win32/country_code/$(DEPDIR)/gens-ccode_window.Tpo -c -o ui/win32/country_code/gens-ccode_window.obj `if test -f 'ui/win32/country_code/ccode_window.c'; then $(CYGPATH_W) 'ui/win32/country_code/ccode_window.c'; else $(CYGPATH_W) '$(srcdir)/ui/win32/country_code/ccode_window.c'; fi`
	$(AM_V_at)$(am__mv) ui/win32/country_code/$(DEPDIR)/gens-ccode_window.Tpo ui/win32/country_code/$(DEPDIR)/gens-ccode_window.Po
#	$(AM_V_CC)source='ui/win32/country_code/ccode_window.c' object='ui/win32/country_code/gens-ccode_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/win32/country_code/gens-ccode_window.obj `if test -f 'ui/win32/country_code/ccode_window.c'; then $(CYGPATH_W) 'ui/win32/country_code/ccode_window.c'; else $(CYGPATH_W) '$(srcdir)/ui/win32/country_code/ccode_window.c'; fi`

ui/win32/zip_select/gens-zipsel_dialog.o: ui/win32/zip_select/zipsel_dialog.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/win32/zip_select/gens-zipsel_dialog.o -MD -MP -MF ui/win32/zip_select/$(DEPDIR)/gens-zipsel_dialog.Tpo -c -o ui/win32/zip_select/gens-zipsel_dialog.o `test -f 'ui/win32/zip_select/zipsel_dialog.c' || echo '$(srcdir)/'`ui/win32/zip_select/zipsel_dialog.c
	$(AM_V_at)$(am__mv) ui/win32/zip_select/$(DEPDIR)/gens-zipsel_dialog.Tpo ui/win32/zip_select/$(DEPDIR)/gens-zipsel_dialog.Po
#	$(AM_V_CC)source='ui/win32/zip_select/zipsel_dialog.c' object='ui/win32/zip_select/gens-zipsel_dialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/win32/zip_select/gens-zipsel_dialog.o `test -f 'ui/win32/zip_select/zipsel_dialog.c' || echo '$(srcdir)/'`ui/win32/zip_select/zipsel_dialog.c

ui/win32/zip_select/gens-zipsel_dialog.obj: ui/win32/zip_select/zipsel_dialog.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT ui/win32/zip_select/gens-zipsel_dialog.obj -MD -MP -MF ui/win32/zip_select/$(DEPDIR)/gens-zipsel_dialog.Tpo -c -o ui/win32/zip_select/gens-zipsel_dialog.obj `if test -f 'ui/win32/zip_select/zipsel_dialog.c'; then $(CYGPATH_W) 'ui/win32/zip_select/zipsel_dialog.c'; else $(CYGPATH_W) '$(srcdir)/ui/win32/zip_select/zipsel_dialog.c'; fi`
	$(AM_V_at)$(am__mv) ui/win32/zip_select/$(DEPDIR)/gens-zipsel_dialog.Tpo ui/win32/zip_select/$(DEPDIR)/gens-zipsel_dialog.Po
#	$(AM_V_CC)source='ui/win32/zip_select/zipsel_dialog.c' object='ui/win32/zip_select/gens-zipsel_dialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o ui/win32/zip_select/gens-zipsel_dialog.obj `if test -f 'ui/win32/zip_select/zipsel_dialog.c'; then $(CYGPATH_W) 'ui/win32/zip_select/zipsel_dialog.c'; else $(CYGPATH_W) '$(srcdir)/ui/win32/zip_select/zipsel_dialog.c'; fi`

input/gens-input_haiku_t.o: input/input_haiku_t.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT input/gens-input_haiku_t.o -MD -MP -MF input/$(DEPDIR)/gens-input_haiku_t.Tpo -c -o input/gens-input_haiku_t.o `test -f 'input/input_haiku_t.c' || echo '$(srcdir)/'`input/input_haiku_t.c
	$(AM_V_at)$(am__mv) input/$(DEPDIR)/gens-input_haiku_t.Tpo input/$(DEPDIR)/gens-input_haiku_t.Po
#	$(AM_V_CC)source='input/input_haiku_t.c' object='input/gens-input_haiku_t.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o input/gens-input_haiku_t.o `test -f 'input/input_haiku_t.c' || echo '$(srcdir)/'`input/input_haiku_t.c

input/gens-input_haiku_t.obj: input/input_haiku_t.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT input/gens-input_haiku_t.obj -MD -MP -MF input/$(DEPDIR)/gens-input_haiku_t.Tpo -c -o input/gens-input_haiku_t.obj `if test -f 'input/input_haiku_t.c'; then $(CYGPATH_W) 'input/input_haiku_t.c'; else $(CYGPATH_W) '$(srcdir)/input/input_haiku_t.c'; fi`
	$(AM_V_at)$(am__mv) input/$(DEPDIR)/gens-input_haiku_t.Tpo input/$(DEPDIR)/gens-input_haiku_t.Po
#	$(AM_V_CC)source='input/input_haiku_t.c' object='input/gens-input_haiku_t.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o input/gens-input_haiku_t.obj `if test -f 'input/input_haiku_t.c'; then $(CYGPATH_W) 'input/input_haiku_t.c'; else $(CYGPATH_W) '$(srcdir)/input/input_haiku_t.c'; fi`

video/gens-vdraw_haiku_t.o: video/vdraw_haiku_t.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT video/gens-vdraw_haiku_t.o -MD -MP -MF video/$(DEPDIR)/gens-vdraw_haiku_t.Tpo -c -o video/gens-vdraw_haiku_t.o `test -f 'video/vdraw_haiku_t.c' || echo '$(srcdir)/'`video/vdraw_haiku_t.c
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-vdraw_haiku_t.Tpo video/$(DEPDIR)/gens-vdraw_haiku_t.Po
#	$(AM_V_CC)source='video/vdraw_haiku_t.c' object='video/gens-vdraw_haiku_t.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o video/gens-vdraw_haiku_t.o `test -f 'video/vdraw_haiku_t.c' || echo '$(srcdir)/'`video/vdraw_haiku_t.c

video/gens-vdraw_haiku_t.obj: video/vdraw_haiku_t.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT video/gens-vdraw_haiku_t.obj -MD -MP -MF video/$(DEPDIR)/gens-vdraw_haiku_t.Tpo -c -o video/gens-vdraw_haiku_t.obj `if test -f 'video/vdraw_haiku_t.c'; then $(CYGPATH_W) 'video/vdraw_haiku_t.c'; else $(CYGPATH_W) '$(srcdir)/video/vdraw_haiku_t.c'; fi`
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-vdraw_haiku_t.Tpo video/$(DEPDIR)/gens-vdraw_haiku_t.Po
#	$(AM_V_CC)source='video/vdraw_haiku_t.c' object='video/gens-vdraw_haiku_t.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o video/gens-vdraw_haiku_t.obj `if test -f 'video/vdraw_haiku_t.c'; then $(CYGPATH_W) 'video/vdraw_haiku_t.c'; else $(CYGPATH_W) '$(srcdir)/video/vdraw_haiku_t.c'; fi`

audio/gens-audio_haiku.o: audio/audio_haiku.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT audio/gens-audio_haiku.o -MD -MP -MF audio/$(DEPDIR)/gens-audio_haiku.Tpo -c -o audio/gens-audio_haiku.o `test -f 'audio/audio_haiku.c' || echo '$(srcdir)/'`audio/audio_haiku.c
	$(AM_V_at)$(am__mv) audio/$(DEPDIR)/gens-audio_haiku.Tpo audio/$(DEPDIR)/gens-audio_haiku.Po
#	$(AM_V_CC)source='audio/audio_haiku.c' object='audio/gens-audio_haiku.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o audio/gens-audio_haiku.o `test -f 'audio/audio_haiku.c' || echo '$(srcdir)/'`audio/audio_haiku.c

audio/gens-audio_haiku.obj: audio/audio_haiku.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -MT audio/gens-audio_haiku.obj -MD -MP -MF audio/$(DEPDIR)/gens-audio_haiku.Tpo -c -o audio/gens-audio_haiku.obj `if test -f 'audio/audio_haiku.c'; then $(CYGPATH_W) 'audio/audio_haiku.c'; else $(CYGPATH_W) '$(srcdir)/audio/audio_haiku.c'; fi`
	$(AM_V_at)$(am__mv) audio/$(DEPDIR)/gens-audio_haiku.Tpo audio/$(DEPDIR)/gens-audio_haiku.Po
#	$(AM_V_CC)source='audio/audio_haiku.c' object='audio/gens-audio_haiku.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CFLAGS) $(CFLAGS) -c -o audio/gens-audio_haiku.obj `if test -f 'audio/audio_haiku.c'; then $(CYGPATH_W) 'audio/audio_haiku.c'; else $(CYGPATH_W) '$(srcdir)/audio/audio_haiku.c'; fi`

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

emulator/gens-gens.o: emulator/gens.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT emulator/gens-gens.o -MD -MP -MF emulator/$(DEPDIR)/gens-gens.Tpo -c -o emulator/gens-gens.o `test -f 'emulator/gens.cpp' || echo '$(srcdir)/'`emulator/gens.cpp
	$(AM_V_at)$(am__mv) emulator/$(DEPDIR)/gens-gens.Tpo emulator/$(DEPDIR)/gens-gens.Po
#	$(AM_V_CXX)source='emulator/gens.cpp' object='emulator/gens-gens.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o emulator/gens-gens.o `test -f 'emulator/gens.cpp' || echo '$(srcdir)/'`emulator/gens.cpp

emulator/gens-gens.obj: emulator/gens.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT emulator/gens-gens.obj -MD -MP -MF emulator/$(DEPDIR)/gens-gens.Tpo -c -o emulator/gens-gens.obj `if test -f 'emulator/gens.cpp'; then $(CYGPATH_W) 'emulator/gens.cpp'; else $(CYGPATH_W) '$(srcdir)/emulator/gens.cpp'; fi`
	$(AM_V_at)$(am__mv) emulator/$(DEPDIR)/gens-gens.Tpo emulator/$(DEPDIR)/gens-gens.Po
#	$(AM_V_CXX)source='emulator/gens.cpp' object='emulator/gens-gens.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o emulator/gens-gens.obj `if test -f 'emulator/gens.cpp'; then $(CYGPATH_W) 'emulator/gens.cpp'; else $(CYGPATH_W) '$(srcdir)/emulator/gens.cpp'; fi`

emulator/gens-g_main.o: emulator/g_main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT emulator/gens-g_main.o -MD -MP -MF emulator/$(DEPDIR)/gens-g_main.Tpo -c -o emulator/gens-g_main.o `test -f 'emulator/g_main.cpp' || echo '$(srcdir)/'`emulator/g_main.cpp
	$(AM_V_at)$(am__mv) emulator/$(DEPDIR)/gens-g_main.Tpo emulator/$(DEPDIR)/gens-g_main.Po
#	$(AM_V_CXX)source='emulator/g_main.cpp' object='emulator/gens-g_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o emulator/gens-g_main.o `test -f 'emulator/g_main.cpp' || echo '$(srcdir)/'`emulator/g_main.cpp

emulator/gens-g_main.obj: emulator/g_main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT emulator/gens-g_main.obj -MD -MP -MF emulator/$(DEPDIR)/gens-g_main.Tpo -c -o emulator/gens-g_main.obj `if test -f 'emulator/g_main.cpp'; then $(CYGPATH_W) 'emulator/g_main.cpp'; else $(CYGPATH_W) '$(srcdir)/emulator/g_main.cpp'; fi`
	$(AM_V_at)$(am__mv) emulator/$(DEPDIR)/gens-g_main.Tpo emulator/$(DEPDIR)/gens-g_main.Po
#	$(AM_V_CXX)source='emulator/g_main.cpp' object='emulator/gens-g_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o emulator/gens-g_main.obj `if test -f 'emulator/g_main.cpp'; then $(CYGPATH_W) 'emulator/g_main.cpp'; else $(CYGPATH_W) '$(srcdir)/emulator/g_main.cpp'; fi`

emulator/gens-g_md.o: emulator/g_md.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT emulator/gens-g_md.o -MD -MP -MF emulator/$(DEPDIR)/gens-g_md.Tpo -c -o emulator/gens-g_md.o `test -f 'emulator/g_md.cpp' || echo '$(srcdir)/'`emulator/g_md.cpp
	$(AM_V_at)$(am__mv) emulator/$(DEPDIR)/gens-g_md.Tpo emulator/$(DEPDIR)/gens-g_md.Po
#	$(AM_V_CXX)source='emulator/g_md.cpp' object='emulator/gens-g_md.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o emulator/gens-g_md.o `test -f 'emulator/g_md.cpp' || echo '$(srcdir)/'`emulator/g_md.cpp

emulator/gens-g_md.obj: emulator/g_md.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT emulator/gens-g_md.obj -MD -MP -MF emulator/$(DEPDIR)/gens-g_md.Tpo -c -o emulator/gens-g_md.obj `if test -f 'emulator/g_md.cpp'; then $(CYGPATH_W) 'emulator/g_md.cpp'; else $(CYGPATH_W) '$(srcdir)/emulator/g_md.cpp'; fi`
	$(AM_V_at)$(am__mv) emulator/$(DEPDIR)/gens-g_md.Tpo emulator/$(DEPDIR)/gens-g_md.Po
#	$(AM_V_CXX)source='emulator/g_md.cpp' object='emulator/gens-g_md.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o emulator/gens-g_md.obj `if test -f 'emulator/g_md.cpp'; then $(CYGPATH_W) 'emulator/g_md.cpp'; else $(CYGPATH_W) '$(srcdir)/emulator/g_md.cpp'; fi`

emulator/gens-g_mcd.o: emulator/g_mcd.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT emulator/gens-g_mcd.o -MD -MP -MF emulator/$(DEPDIR)/gens-g_mcd.Tpo -c -o emulator/gens-g_mcd.o `test -f 'emulator/g_mcd.cpp' || echo '$(srcdir)/'`emulator/g_mcd.cpp
	$(AM_V_at)$(am__mv) emulator/$(DEPDIR)/gens-g_mcd.Tpo emulator/$(DEPDIR)/gens-g_mcd.Po
#	$(AM_V_CXX)source='emulator/g_mcd.cpp' object='emulator/gens-g_mcd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o emulator/gens-g_mcd.o `test -f 'emulator/g_mcd.cpp' || echo '$(srcdir)/'`emulator/g_mcd.cpp

emulator/gens-g_mcd.obj: emulator/g_mcd.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT emulator/gens-g_mcd.obj -MD -MP -MF emulator/$(DEPDIR)/gens-g_mcd.Tpo -c -o emulator/gens-g_mcd.obj `if test -f 'emulator/g_mcd.cpp'; then $(CYGPATH_W) 'emulator/g_mcd.cpp'; else $(CYGPATH_W) '$(srcdir)/emulator/g_mcd.cpp'; fi`
	$(AM_V_at)$(am__mv) emulator/$(DEPDIR)/gens-g_mcd.Tpo emulator/$(DEPDIR)/gens-g_mcd.Po
#	$(AM_V_CXX)source='emulator/g_mcd.cpp' object='emulator/gens-g_mcd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o emulator/gens-g_mcd.obj `if test -f 'emulator/g_mcd.cpp'; then $(CYGPATH_W) 'emulator/g_mcd.cpp'; else $(CYGPATH_W) '$(srcdir)/emulator/g_mcd.cpp'; fi`

emulator/gens-g_32x.o: emulator/g_32x.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT emulator/gens-g_32x.o -MD -MP -MF emulator/$(DEPDIR)/gens-g_32x.Tpo -c -o emulator/gens-g_32x.o `test -f 'emulator/g_32x.cpp' || echo '$(srcdir)/'`emulator/g_32x.cpp
	$(AM_V_at)$(am__mv) emulator/$(DEPDIR)/gens-g_32x.Tpo emulator/$(DEPDIR)/gens-g_32x.Po
#	$(AM_V_CXX)source='emulator/g_32x.cpp' object='emulator/gens-g_32x.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o emulator/gens-g_32x.o `test -f 'emulator/g_32x.cpp' || echo '$(srcdir)/'`emulator/g_32x.cpp

emulator/gens-g_32x.obj: emulator/g_32x.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT emulator/gens-g_32x.obj -MD -MP -MF emulator/$(DEPDIR)/gens-g_32x.Tpo -c -o emulator/gens-g_32x.obj `if test -f 'emulator/g_32x.cpp'; then $(CYGPATH_W) 'emulator/g_32x.cpp'; else $(CYGPATH_W) '$(srcdir)/emulator/g_32x.cpp'; fi`
	$(AM_V_at)$(am__mv) emulator/$(DEPDIR)/gens-g_32x.Tpo emulator/$(DEPDIR)/gens-g_32x.Po
#	$(AM_V_CXX)source='emulator/g_32x.cpp' object='emulator/gens-g_32x.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o emulator/gens-g_32x.obj `if test -f 'emulator/g_32x.cpp'; then $(CYGPATH_W) 'emulator/g_32x.cpp'; else $(CYGPATH_W) '$(srcdir)/emulator/g_32x.cpp'; fi`

emulator/gens-md_palette.o: emulator/md_palette.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT emulator/gens-md_palette.o -MD -MP -MF emulator/$(DEPDIR)/gens-md_palette.Tpo -c -o emulator/gens-md_palette.o `test -f 'emulator/md_palette.cpp' || echo '$(srcdir)/'`emulator/md_palette.cpp
	$(AM_V_at)$(am__mv) emulator/$(DEPDIR)/gens-md_palette.Tpo emulator/$(DEPDIR)/gens-md_palette.Po
#	$(AM_V_CXX)source='emulator/md_palette.cpp' object='emulator/gens-md_palette.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o emulator/gens-md_palette.o `test -f 'emulator/md_palette.cpp' || echo '$(srcdir)/'`emulator/md_palette.cpp

emulator/gens-md_palette.obj: emulator/md_palette.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT emulator/gens-md_palette.obj -MD -MP -MF emulator/$(DEPDIR)/gens-md_palette.Tpo -c -o emulator/gens-md_palette.obj `if test -f 'emulator/md_palette.cpp'; then $(CYGPATH_W) 'emulator/md_palette.cpp'; else $(CYGPATH_W) '$(srcdir)/emulator/md_palette.cpp'; fi`
	$(AM_V_at)$(am__mv) emulator/$(DEPDIR)/gens-md_palette.Tpo emulator/$(DEPDIR)/gens-md_palette.Po
#	$(AM_V_CXX)source='emulator/md_palette.cpp' object='emulator/gens-md_palette.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o emulator/gens-md_palette.obj `if test -f 'emulator/md_palette.cpp'; then $(CYGPATH_W) 'emulator/md_palette.cpp'; else $(CYGPATH_W) '$(srcdir)/emulator/md_palette.cpp'; fi`

emulator/gens-g_update.o: emulator/g_update.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT emulator/gens-g_update.o -MD -MP -MF emulator/$(DEPDIR)/gens-g_update.Tpo -c -o emulator/gens-g_update.o `test -f 'emulator/g_update.cpp' || echo '$(srcdir)/'`emulator/g_update.cpp
	$(AM_V_at)$(am__mv) emulator/$(DEPDIR)/gens-g_update.Tpo emulator/$(DEPDIR)/gens-g_update.Po
#	$(AM_V_CXX)source='emulator/g_update.cpp' object='emulator/gens-g_update.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o emulator/gens-g_update.o `test -f 'emulator/g_update.cpp' || echo '$(srcdir)/'`emulator/g_update.cpp

emulator/gens-g_update.obj: emulator/g_update.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT emulator/gens-g_update.obj -MD -MP -MF emulator/$(DEPDIR)/gens-g_update.Tpo -c -o emulator/gens-g_update.obj `if test -f 'emulator/g_update.cpp'; then $(CYGPATH_W) 'emulator/g_update.cpp'; else $(CYGPATH_W) '$(srcdir)/emulator/g_update.cpp'; fi`
	$(AM_V_at)$(am__mv) emulator/$(DEPDIR)/gens-g_update.Tpo emulator/$(DEPDIR)/gens-g_update.Po
#	$(AM_V_CXX)source='emulator/g_update.cpp' object='emulator/gens-g_update.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o emulator/gens-g_update.obj `if test -f 'emulator/g_update.cpp'; then $(CYGPATH_W) 'emulator/g_update.cpp'; else $(CYGPATH_W) '$(srcdir)/emulator/g_update.cpp'; fi`

emulator/gens-parse.o: emulator/parse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT emulator/gens-parse.o -MD -MP -MF emulator/$(DEPDIR)/gens-parse.Tpo -c -o emulator/gens-parse.o `test -f 'emulator/parse.cpp' || echo '$(srcdir)/'`emulator/parse.cpp
	$(AM_V_at)$(am__mv) emulator/$(DEPDIR)/gens-parse.Tpo emulator/$(DEPDIR)/gens-parse.Po
#	$(AM_V_CXX)source='emulator/parse.cpp' object='emulator/gens-parse.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o emulator/gens-parse.o `test -f 'emulator/parse.cpp' || echo '$(srcdir)/'`emulator/parse.cpp

emulator/gens-parse.obj: emulator/parse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT emulator/gens-parse.obj -MD -MP -MF emulator/$(DEPDIR)/gens-parse.Tpo -c -o emulator/gens-parse.obj `if test -f 'emulator/parse.cpp'; then $(CYGPATH_W) 'emulator/parse.cpp'; else $(CYGPATH_W) '$(srcdir)/emulator/parse.cpp'; fi`
	$(AM_V_at)$(am__mv) emulator/$(DEPDIR)/gens-parse.Tpo emulator/$(DEPDIR)/gens-parse.Po
#	$(AM_V_CXX)source='emulator/parse.cpp' object='emulator/gens-parse.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o emulator/gens-parse.obj `if test -f 'emulator/parse.cpp'; then $(CYGPATH_W) 'emulator/parse.cpp'; else $(CYGPATH_W) '$(srcdir)/emulator/parse.cpp'; fi`

emulator/gens-options.o: emulator/options.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT emulator/gens-options.o -MD -MP -MF emulator/$(DEPDIR)/gens-options.Tpo -c -o emulator/gens-options.o `test -f 'emulator/options.cpp' || echo '$(srcdir)/'`emulator/options.cpp
	$(AM_V_at)$(am__mv) emulator/$(DEPDIR)/gens-options.Tpo emulator/$(DEPDIR)/gens-options.Po
#	$(AM_V_CXX)source='emulator/options.cpp' object='emulator/gens-options.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o emulator/gens-options.o `test -f 'emulator/options.cpp' || echo '$(srcdir)/'`emulator/options.cpp

emulator/gens-options.obj: emulator/options.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT emulator/gens-options.obj -MD -MP -MF emulator/$(DEPDIR)/gens-options.Tpo -c -o emulator/gens-options.obj `if test -f 'emulator/options.cpp'; then $(CYGPATH_W) 'emulator/options.cpp'; else $(CYGPATH_W) '$(srcdir)/emulator/options.cpp'; fi`
	$(AM_V_at)$(am__mv) emulator/$(DEPDIR)/gens-options.Tpo emulator/$(DEPDIR)/gens-options.Po
#	$(AM_V_CXX)source='emulator/options.cpp' object='emulator/gens-options.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o emulator/gens-options.obj `if test -f 'emulator/options.cpp'; then $(CYGPATH_W) 'emulator/options.cpp'; else $(CYGPATH_W) '$(srcdir)/emulator/options.cpp'; fi`

gens_core/sound/gens-ym2612.o: gens_core/sound/ym2612.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT gens_core/sound/gens-ym2612.o -MD -MP -MF gens_core/sound/$(DEPDIR)/gens-ym2612.Tpo -c -o gens_core/sound/gens-ym2612.o `test -f 'gens_core/sound/ym2612.cpp' || echo '$(srcdir)/'`gens_core/sound/ym2612.cpp
	$(AM_V_at)$(am__mv) gens_core/sound/$(DEPDIR)/gens-ym2612.Tpo gens_core/sound/$(DEPDIR)/gens-ym2612.Po
#	$(AM_V_CXX)source='gens_core/sound/ym2612.cpp' object='gens_core/sound/gens-ym2612.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o gens_core/sound/gens-ym2612.o `test -f 'gens_core/sound/ym2612.cpp' || echo '$(srcdir)/'`gens_core/sound/ym2612.cpp

gens_core/sound/gens-ym2612.obj: gens_core/sound/ym2612.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT gens_core/sound/gens-ym2612.obj -MD -MP -MF gens_core/sound/$(DEPDIR)/gens-ym2612.Tpo -c -o gens_core/sound/gens-ym2612.obj `if test -f 'gens_core/sound/ym2612.cpp'; then $(CYGPATH_W) 'gens_core/sound/ym2612.cpp'; else $(CYGPATH_W) '$(srcdir)/gens_core/sound/ym2612.cpp'; fi`
	$(AM_V_at)$(am__mv) gens_core/sound/$(DEPDIR)/gens-ym2612.Tpo gens_core/sound/$(DEPDIR)/gens-ym2612.Po
#	$(AM_V_CXX)source='gens_core/sound/ym2612.cpp' object='gens_core/sound/gens-ym2612.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o gens_core/sound/gens-ym2612.obj `if test -f 'gens_core/sound/ym2612.cpp'; then $(CYGPATH_W) 'gens_core/sound/ym2612.cpp'; else $(CYGPATH_W) '$(srcdir)/gens_core/sound/ym2612.cpp'; fi`

gens_core/gfx/gens-fastblur.o: gens_core/gfx/fastblur.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT gens_core/gfx/gens-fastblur.o -MD -MP -MF gens_core/gfx/$(DEPDIR)/gens-fastblur.Tpo -c -o gens_core/gfx/gens-fastblur.o `test -f 'gens_core/gfx/fastblur.cpp' || echo '$(srcdir)/'`gens_core/gfx/fastblur.cpp
	$(AM_V_at)$(am__mv) gens_core/gfx/$(DEPDIR)/gens-fastblur.Tpo gens_core/gfx/$(DEPDIR)/gens-fastblur.Po
#	$(AM_V_CXX)source='gens_core/gfx/fastblur.cpp' object='gens_core/gfx/gens-fastblur.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o gens_core/gfx/gens-fastblur.o `test -f 'gens_core/gfx/fastblur.cpp' || echo '$(srcdir)/'`gens_core/gfx/fastblur.cpp

gens_core/gfx/gens-fastblur.obj: gens_core/gfx/fastblur.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT gens_core/gfx/gens-fastblur.obj -MD -MP -MF gens_core/gfx/$(DEPDIR)/gens-fastblur.Tpo -c -o gens_core/gfx/gens-fastblur.obj `if test -f 'gens_core/gfx/fastblur.cpp'; then $(CYGPATH_W) 'gens_core/gfx/fastblur.cpp'; else $(CYGPATH_W) '$(srcdir)/gens_core/gfx/fastblur.cpp'; fi`
	$(AM_V_at)$(am__mv) gens_core/gfx/$(DEPDIR)/gens-fastblur.Tpo gens_core/gfx/$(DEPDIR)/gens-fastblur.Po
#	$(AM_V_CXX)source='gens_core/gfx/fastblur.cpp' object='gens_core/gfx/gens-fastblur.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o gens_core/gfx/gens-fastblur.obj `if test -f 'gens_core/gfx/fastblur.cpp'; then $(CYGPATH_W) 'gens_core/gfx/fastblur.cpp'; else $(CYGPATH_W) '$(srcdir)/gens_core/gfx/fastblur.cpp'; fi`

gens_core/vdp/gens-vdp_rend.o: gens_core/vdp/vdp_rend.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT gens_core/vdp/gens-vdp_rend.o -MD -MP -MF gens_core/vdp/$(DEPDIR)/gens-vdp_rend.Tpo -c -o gens_core/vdp/gens-vdp_rend.o `test -f 'gens_core/vdp/vdp_rend.cpp' || echo '$(srcdir)/'`gens_core/vdp/vdp_rend.cpp
	$(AM_V_at)$(am__mv) gens_core/vdp/$(DEPDIR)/gens-vdp_rend.Tpo gens_core/vdp/$(DEPDIR)/gens-vdp_rend.Po
#	$(AM_V_CXX)source='gens_core/vdp/vdp_rend.cpp' object='gens_core/vdp/gens-vdp_rend.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o gens_core/vdp/gens-vdp_rend.o `test -f 'gens_core/vdp/vdp_rend.cpp' || echo '$(srcdir)/'`gens_core/vdp/vdp_rend.cpp

gens_core/vdp/gens-vdp_rend.obj: gens_core/vdp/vdp_rend.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT gens_core/vdp/gens-vdp_rend.obj -MD -MP -MF gens_core/vdp/$(DEPDIR)/gens-vdp_rend.Tpo -c -o gens_core/vdp/gens-vdp_rend.obj `if test -f 'gens_core/vdp/vdp_rend.cpp'; then $(CYGPATH_W) 'gens_core/vdp/vdp_rend.cpp'; else $(CYGPATH_W) '$(srcdir)/gens_core/vdp/vdp_rend.cpp'; fi`
	$(AM_V_at)$(am__mv) gens_core/vdp/$(DEPDIR)/gens-vdp_rend.Tpo gens_core/vdp/$(DEPDIR)/gens-vdp_rend.Po
#	$(AM_V_CXX)source='gens_core/vdp/vdp_rend.cpp' object='gens_core/vdp/gens-vdp_rend.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o gens_core/vdp/gens-vdp_rend.obj `if test -f 'gens_core/vdp/vdp_rend.cpp'; then $(CYGPATH_W) 'gens_core/vdp/vdp_rend.cpp'; else $(CYGPATH_W) '$(srcdir)/gens_core/vdp/vdp_rend.cpp'; fi`

port/gens-ini.o: port/ini.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT port/gens-ini.o -MD -MP -MF port/$(DEPDIR)/gens-ini.Tpo -c -o port/gens-ini.o `test -f 'port/ini.cpp' || echo '$(srcdir)/'`port/ini.cpp
	$(AM_V_at)$(am__mv) port/$(DEPDIR)/gens-ini.Tpo port/$(DEPDIR)/gens-ini.Po
#	$(AM_V_CXX)source='port/ini.cpp' object='port/gens-ini.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o port/gens-ini.o `test -f 'port/ini.cpp' || echo '$(srcdir)/'`port/ini.cpp

port/gens-ini.obj: port/ini.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT port/gens-ini.obj -MD -MP -MF port/$(DEPDIR)/gens-ini.Tpo -c -o port/gens-ini.obj `if test -f 'port/ini.cpp'; then $(CYGPATH_W) 'port/ini.cpp'; else $(CYGPATH_W) '$(srcdir)/port/ini.cpp'; fi`
	$(AM_V_at)$(am__mv) port/$(DEPDIR)/gens-ini.Tpo port/$(DEPDIR)/gens-ini.Po
#	$(AM_V_CXX)source='port/ini.cpp' object='port/gens-ini.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o port/gens-ini.obj `if test -f 'port/ini.cpp'; then $(CYGPATH_W) 'port/ini.cpp'; else $(CYGPATH_W) '$(srcdir)/port/ini.cpp'; fi`

segacd/gens-cd_sys.o: segacd/cd_sys.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT segacd/gens-cd_sys.o -MD -MP -MF segacd/$(DEPDIR)/gens-cd_sys.Tpo -c -o segacd/gens-cd_sys.o `test -f 'segacd/cd_sys.cpp' || echo '$(srcdir)/'`segacd/cd_sys.cpp
	$(AM_V_at)$(am__mv) segacd/$(DEPDIR)/gens-cd_sys.Tpo segacd/$(DEPDIR)/gens-cd_sys.Po
#	$(AM_V_CXX)source='segacd/cd_sys.cpp' object='segacd/gens-cd_sys.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o segacd/gens-cd_sys.o `test -f 'segacd/cd_sys.cpp' || echo '$(srcdir)/'`segacd/cd_sys.cpp

segacd/gens-cd_sys.obj: segacd/cd_sys.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT segacd/gens-cd_sys.obj -MD -MP -MF segacd/$(DEPDIR)/gens-cd_sys.Tpo -c -o segacd/gens-cd_sys.obj `if test -f 'segacd/cd_sys.cpp'; then $(CYGPATH_W) 'segacd/cd_sys.cpp'; else $(CYGPATH_W) '$(srcdir)/segacd/cd_sys.cpp'; fi`
	$(AM_V_at)$(am__mv) segacd/$(DEPDIR)/gens-cd_sys.Tpo segacd/$(DEPDIR)/gens-cd_sys.Po
#	$(AM_V_CXX)source='segacd/cd_sys.cpp' object='segacd/gens-cd_sys.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o segacd/gens-cd_sys.obj `if test -f 'segacd/cd_sys.cpp'; then $(CYGPATH_W) 'segacd/cd_sys.cpp'; else $(CYGPATH_W) '$(srcdir)/segacd/cd_sys.cpp'; fi`

ui/gens-gens_ui.o: ui/gens_ui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/gens-gens_ui.o -MD -MP -MF ui/$(DEPDIR)/gens-gens_ui.Tpo -c -o ui/gens-gens_ui.o `test -f 'ui/gens_ui.cpp' || echo '$(srcdir)/'`ui/gens_ui.cpp
	$(AM_V_at)$(am__mv) ui/$(DEPDIR)/gens-gens_ui.Tpo ui/$(DEPDIR)/gens-gens_ui.Po
#	$(AM_V_CXX)source='ui/gens_ui.cpp' object='ui/gens-gens_ui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/gens-gens_ui.o `test -f 'ui/gens_ui.cpp' || echo '$(srcdir)/'`ui/gens_ui.cpp

ui/gens-gens_ui.obj: ui/gens_ui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/gens-gens_ui.obj -MD -MP -MF ui/$(DEPDIR)/gens-gens_ui.Tpo -c -o ui/gens-gens_ui.obj `if test -f 'ui/gens_ui.cpp'; then $(CYGPATH_W) 'ui/gens_ui.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/gens_ui.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/$(DEPDIR)/gens-gens_ui.Tpo ui/$(DEPDIR)/gens-gens_ui.Po
#	$(AM_V_CXX)source='ui/gens_ui.cpp' object='ui/gens-gens_ui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/gens-gens_ui.obj `if test -f 'ui/gens_ui.cpp'; then $(CYGPATH_W) 'ui/gens_ui.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/gens_ui.cpp'; fi`

ui/common/gens/gens-gens_menu_callbacks.o: ui/common/gens/gens_menu_callbacks.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/common/gens/gens-gens_menu_callbacks.o -MD -MP -MF ui/common/gens/$(DEPDIR)/gens-gens_menu_callbacks.Tpo -c -o ui/common/gens/gens-gens_menu_callbacks.o `test -f 'ui/common/gens/gens_menu_callbacks.cpp' || echo '$(srcdir)/'`ui/common/gens/gens_menu_callbacks.cpp
	$(AM_V_at)$(am__mv) ui/common/gens/$(DEPDIR)/gens-gens_menu_callbacks.Tpo ui/common/gens/$(DEPDIR)/gens-gens_menu_callbacks.Po
#	$(AM_V_CXX)source='ui/common/gens/gens_menu_callbacks.cpp' object='ui/common/gens/gens-gens_menu_callbacks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/common/gens/gens-gens_menu_callbacks.o `test -f 'ui/common/gens/gens_menu_callbacks.cpp' || echo '$(srcdir)/'`ui/common/gens/gens_menu_callbacks.cpp

ui/common/gens/gens-gens_menu_callbacks.obj: ui/common/gens/gens_menu_callbacks.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/common/gens/gens-gens_menu_callbacks.obj -MD -MP -MF ui/common/gens/$(DEPDIR)/gens-gens_menu_callbacks.Tpo -c -o ui/common/gens/gens-gens_menu_callbacks.obj `if test -f 'ui/common/gens/gens_menu_callbacks.cpp'; then $(CYGPATH_W) 'ui/common/gens/gens_menu_callbacks.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/common/gens/gens_menu_callbacks.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/common/gens/$(DEPDIR)/gens-gens_menu_callbacks.Tpo ui/common/gens/$(DEPDIR)/gens-gens_menu_callbacks.Po
#	$(AM_V_CXX)source='ui/common/gens/gens_menu_callbacks.cpp' object='ui/common/gens/gens-gens_menu_callbacks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/common/gens/gens-gens_menu_callbacks.obj `if test -f 'ui/common/gens/gens_menu_callbacks.cpp'; then $(CYGPATH_W) 'ui/common/gens/gens_menu_callbacks.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/common/gens/gens_menu_callbacks.cpp'; fi`

ui/common/gens-pmgr_window_common.o: ui/common/pmgr_window_common.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/common/gens-pmgr_window_common.o -MD -MP -MF ui/common/$(DEPDIR)/gens-pmgr_window_common.Tpo -c -o ui/common/gens-pmgr_window_common.o `test -f 'ui/common/pmgr_window_common.cpp' || echo '$(srcdir)/'`ui/common/pmgr_window_common.cpp
	$(AM_V_at)$(am__mv) ui/common/$(DEPDIR)/gens-pmgr_window_common.Tpo ui/common/$(DEPDIR)/gens-pmgr_window_common.Po
#	$(AM_V_CXX)source='ui/common/pmgr_window_common.cpp' object='ui/common/gens-pmgr_window_common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/common/gens-pmgr_window_common.o `test -f 'ui/common/pmgr_window_common.cpp' || echo '$(srcdir)/'`ui/common/pmgr_window_common.cpp

ui/common/gens-pmgr_window_common.obj: ui/common/pmgr_window_common.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/common/gens-pmgr_window_common.obj -MD -MP -MF ui/common/$(DEPDIR)/gens-pmgr_window_common.Tpo -c -o ui/common/gens-pmgr_window_common.obj `if test -f 'ui/common/pmgr_window_common.cpp'; then $(CYGPATH_W) 'ui/common/pmgr_window_common.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/common/pmgr_window_common.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/common/$(DEPDIR)/gens-pmgr_window_common.Tpo ui/common/$(DEPDIR)/gens-pmgr_window_common.Po
#	$(AM_V_CXX)source='ui/common/pmgr_window_common.cpp' object='ui/common/gens-pmgr_window_common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/common/gens-pmgr_window_common.obj `if test -f 'ui/common/pmgr_window_common.cpp'; then $(CYGPATH_W) 'ui/common/pmgr_window_common.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/common/pmgr_window_common.cpp'; fi`

util/file/gens-config_file.o: util/file/config_file.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT util/file/gens-config_file.o -MD -MP -MF util/file/$(DEPDIR)/gens-config_file.Tpo -c -o util/file/gens-config_file.o `test -f 'util/file/config_file.cpp' || echo '$(srcdir)/'`util/file/config_file.cpp
	$(AM_V_at)$(am__mv) util/file/$(DEPDIR)/gens-config_file.Tpo util/file/$(DEPDIR)/gens-config_file.Po
#	$(AM_V_CXX)source='util/file/config_file.cpp' object='util/file/gens-config_file.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o util/file/gens-config_file.o `test -f 'util/file/config_file.cpp' || echo '$(srcdir)/'`util/file/config_file.cpp

util/file/gens-config_file.obj: util/file/config_file.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT util/file/gens-config_file.obj -MD -MP -MF util/file/$(DEPDIR)/gens-config_file.Tpo -c -o util/file/gens-config_file.obj `if test -f 'util/file/config_file.cpp'; then $(CYGPATH_W) 'util/file/config_file.cpp'; else $(CYGPATH_W) '$(srcdir)/util/file/config_file.cpp'; fi`
	$(AM_V_at)$(am__mv) util/file/$(DEPDIR)/gens-config_file.Tpo util/file/$(DEPDIR)/gens-config_file.Po
#	$(AM_V_CXX)source='util/file/config_file.cpp' object='util/file/gens-config_file.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o util/file/gens-config_file.obj `if test -f 'util/file/config_file.cpp'; then $(CYGPATH_W) 'util/file/config_file.cpp'; else $(CYGPATH_W) '$(srcdir)/util/file/config_file.cpp'; fi`

util/file/gens-rom.o: util/file/rom.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT util/file/gens-rom.o -MD -MP -MF util/file/$(DEPDIR)/gens-rom.Tpo -c -o util/file/gens-rom.o `test -f 'util/file/rom.cpp' || echo '$(srcdir)/'`util/file/rom.cpp
	$(AM_V_at)$(am__mv) util/file/$(DEPDIR)/gens-rom.Tpo util/file/$(DEPDIR)/gens-rom.Po
#	$(AM_V_CXX)source='util/file/rom.cpp' object='util/file/gens-rom.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o util/file/gens-rom.o `test -f 'util/file/rom.cpp' || echo '$(srcdir)/'`util/file/rom.cpp

util/file/gens-rom.obj: util/file/rom.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT util/file/gens-rom.obj -MD -MP -MF util/file/$(DEPDIR)/gens-rom.Tpo -c -o util/file/gens-rom.obj `if test -f 'util/file/rom.cpp'; then $(CYGPATH_W) 'util/file/rom.cpp'; else $(CYGPATH_W) '$(srcdir)/util/file/rom.cpp'; fi`
	$(AM_V_at)$(am__mv) util/file/$(DEPDIR)/gens-rom.Tpo util/file/$(DEPDIR)/gens-rom.Po
#	$(AM_V_CXX)source='util/file/rom.cpp' object='util/file/gens-rom.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o util/file/gens-rom.obj `if test -f 'util/file/rom.cpp'; then $(CYGPATH_W) 'util/file/rom.cpp'; else $(CYGPATH_W) '$(srcdir)/util/file/rom.cpp'; fi`

util/file/gens-save.o: util/file/save.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT util/file/gens-save.o -MD -MP -MF util/file/$(DEPDIR)/gens-save.Tpo -c -o util/file/gens-save.o `test -f 'util/file/save.cpp' || echo '$(srcdir)/'`util/file/save.cpp
	$(AM_V_at)$(am__mv) util/file/$(DEPDIR)/gens-save.Tpo util/file/$(DEPDIR)/gens-save.Po
#	$(AM_V_CXX)source='util/file/save.cpp' object='util/file/gens-save.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o util/file/gens-save.o `test -f 'util/file/save.cpp' || echo '$(srcdir)/'`util/file/save.cpp

util/file/gens-save.obj: util/file/save.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT util/file/gens-save.obj -MD -MP -MF util/file/$(DEPDIR)/gens-save.Tpo -c -o util/file/gens-save.obj `if test -f 'util/file/save.cpp'; then $(CYGPATH_W) 'util/file/save.cpp'; else $(CYGPATH_W) '$(srcdir)/util/file/save.cpp'; fi`
	$(AM_V_at)$(am__mv) util/file/$(DEPDIR)/gens-save.Tpo util/file/$(DEPDIR)/gens-save.Po
#	$(AM_V_CXX)source='util/file/save.cpp' object='util/file/gens-save.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o util/file/gens-save.obj `if test -f 'util/file/save.cpp'; then $(CYGPATH_W) 'util/file/save.cpp'; else $(CYGPATH_W) '$(srcdir)/util/file/save.cpp'; fi`

util/file/gens-file.o: util/file/file.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT util/file/gens-file.o -MD -MP -MF util/file/$(DEPDIR)/gens-file.Tpo -c -o util/file/gens-file.o `test -f 'util/file/file.cpp' || echo '$(srcdir)/'`util/file/file.cpp
	$(AM_V_at)$(am__mv) util/file/$(DEPDIR)/gens-file.Tpo util/file/$(DEPDIR)/gens-file.Po
#	$(AM_V_CXX)source='util/file/file.cpp' object='util/file/gens-file.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o util/file/gens-file.o `test -f 'util/file/file.cpp' || echo '$(srcdir)/'`util/file/file.cpp

util/file/gens-file.obj: util/file/file.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT util/file/gens-file.obj -MD -MP -MF util/file/$(DEPDIR)/gens-file.Tpo -c -o util/file/gens-file.obj `if test -f 'util/file/file.cpp'; then $(CYGPATH_W) 'util/file/file.cpp'; else $(CYGPATH_W) '$(srcdir)/util/file/file.cpp'; fi`
	$(AM_V_at)$(am__mv) util/file/$(DEPDIR)/gens-file.Tpo util/file/$(DEPDIR)/gens-file.Po
#	$(AM_V_CXX)source='util/file/file.cpp' object='util/file/gens-file.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o util/file/gens-file.obj `if test -f 'util/file/file.cpp'; then $(CYGPATH_W) 'util/file/file.cpp'; else $(CYGPATH_W) '$(srcdir)/util/file/file.cpp'; fi`

util/file/decompressor/gens-md_rar.o: util/file/decompressor/md_rar.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT util/file/decompressor/gens-md_rar.o -MD -MP -MF util/file/decompressor/$(DEPDIR)/gens-md_rar.Tpo -c -o util/file/decompressor/gens-md_rar.o `test -f 'util/file/decompressor/md_rar.cpp' || echo '$(srcdir)/'`util/file/decompressor/md_rar.cpp
	$(AM_V_at)$(am__mv) util/file/decompressor/$(DEPDIR)/gens-md_rar.Tpo util/file/decompressor/$(DEPDIR)/gens-md_rar.Po
#	$(AM_V_CXX)source='util/file/decompressor/md_rar.cpp' object='util/file/decompressor/gens-md_rar.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o util/file/decompressor/gens-md_rar.o `test -f 'util/file/decompressor/md_rar.cpp' || echo '$(srcdir)/'`util/file/decompressor/md_rar.cpp

util/file/decompressor/gens-md_rar.obj: util/file/decompressor/md_rar.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT util/file/decompressor/gens-md_rar.obj -MD -MP -MF util/file/decompressor/$(DEPDIR)/gens-md_rar.Tpo -c -o util/file/decompressor/gens-md_rar.obj `if test -f 'util/file/decompressor/md_rar.cpp'; then $(CYGPATH_W) 'util/file/decompressor/md_rar.cpp'; else $(CYGPATH_W) '$(srcdir)/util/file/decompressor/md_rar.cpp'; fi`
	$(AM_V_at)$(am__mv) util/file/decompressor/$(DEPDIR)/gens-md_rar.Tpo util/file/decompressor/$(DEPDIR)/gens-md_rar.Po
#	$(AM_V_CXX)source='util/file/decompressor/md_rar.cpp' object='util/file/decompressor/gens-md_rar.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o util/file/decompressor/gens-md_rar.obj `if test -f 'util/file/decompressor/md_rar.cpp'; then $(CYGPATH_W) 'util/file/decompressor/md_rar.cpp'; else $(CYGPATH_W) '$(srcdir)/util/file/decompressor/md_rar.cpp'; fi`

util/gfx/gens-imageutil.o: util/gfx/imageutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT util/gfx/gens-imageutil.o -MD -MP -MF util/gfx/$(DEPDIR)/gens-imageutil.Tpo -c -o util/gfx/gens-imageutil.o `test -f 'util/gfx/imageutil.cpp' || echo '$(srcdir)/'`util/gfx/imageutil.cpp
	$(AM_V_at)$(am__mv) util/gfx/$(DEPDIR)/gens-imageutil.Tpo util/gfx/$(DEPDIR)/gens-imageutil.Po
#	$(AM_V_CXX)source='util/gfx/imageutil.cpp' object='util/gfx/gens-imageutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o util/gfx/gens-imageutil.o `test -f 'util/gfx/imageutil.cpp' || echo '$(srcdir)/'`util/gfx/imageutil.cpp

util/gfx/gens-imageutil.obj: util/gfx/imageutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT util/gfx/gens-imageutil.obj -MD -MP -MF util/gfx/$(DEPDIR)/gens-imageutil.Tpo -c -o util/gfx/gens-imageutil.obj `if test -f 'util/gfx/imageutil.cpp'; then $(CYGPATH_W) 'util/gfx/imageutil.cpp'; else $(CYGPATH_W) '$(srcdir)/util/gfx/imageutil.cpp'; fi`
	$(AM_V_at)$(am__mv) util/gfx/$(DEPDIR)/gens-imageutil.Tpo util/gfx/$(DEPDIR)/gens-imageutil.Po
#	$(AM_V_CXX)source='util/gfx/imageutil.cpp' object='util/gfx/gens-imageutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o util/gfx/gens-imageutil.obj `if test -f 'util/gfx/imageutil.cpp'; then $(CYGPATH_W) 'util/gfx/imageutil.cpp'; else $(CYGPATH_W) '$(srcdir)/util/gfx/imageutil.cpp'; fi`

util/sound/gens-gym.o: util/sound/gym.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT util/sound/gens-gym.o -MD -MP -MF util/sound/$(DEPDIR)/gens-gym.Tpo -c -o util/sound/gens-gym.o `test -f 'util/sound/gym.cpp' || echo '$(srcdir)/'`util/sound/gym.cpp
	$(AM_V_at)$(am__mv) util/sound/$(DEPDIR)/gens-gym.Tpo util/sound/$(DEPDIR)/gens-gym.Po
#	$(AM_V_CXX)source='util/sound/gym.cpp' object='util/sound/gens-gym.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o util/sound/gens-gym.o `test -f 'util/sound/gym.cpp' || echo '$(srcdir)/'`util/sound/gym.cpp

util/sound/gens-gym.obj: util/sound/gym.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT util/sound/gens-gym.obj -MD -MP -MF util/sound/$(DEPDIR)/gens-gym.Tpo -c -o util/sound/gens-gym.obj `if test -f 'util/sound/gym.cpp'; then $(CYGPATH_W) 'util/sound/gym.cpp'; else $(CYGPATH_W) '$(srcdir)/util/sound/gym.cpp'; fi`
	$(AM_V_at)$(am__mv) util/sound/$(DEPDIR)/gens-gym.Tpo util/sound/$(DEPDIR)/gens-gym.Po
#	$(AM_V_CXX)source='util/sound/gym.cpp' object='util/sound/gens-gym.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o util/sound/gens-gym.obj `if test -f 'util/sound/gym.cpp'; then $(CYGPATH_W) 'util/sound/gym.cpp'; else $(CYGPATH_W) '$(srcdir)/util/sound/gym.cpp'; fi`

video/gens-osd_charset.o: video/osd_charset.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT video/gens-osd_charset.o -MD -MP -MF video/$(DEPDIR)/gens-osd_charset.Tpo -c -o video/gens-osd_charset.o `test -f 'video/osd_charset.cpp' || echo '$(srcdir)/'`video/osd_charset.cpp
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-osd_charset.Tpo video/$(DEPDIR)/gens-osd_charset.Po
#	$(AM_V_CXX)source='video/osd_charset.cpp' object='video/gens-osd_charset.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o video/gens-osd_charset.o `test -f 'video/osd_charset.cpp' || echo '$(srcdir)/'`video/osd_charset.cpp

video/gens-osd_charset.obj: video/osd_charset.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT video/gens-osd_charset.obj -MD -MP -MF video/$(DEPDIR)/gens-osd_charset.Tpo -c -o video/gens-osd_charset.obj `if test -f 'video/osd_charset.cpp'; then $(CYGPATH_W) 'video/osd_charset.cpp'; else $(CYGPATH_W) '$(srcdir)/video/osd_charset.cpp'; fi`
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-osd_charset.Tpo video/$(DEPDIR)/gens-osd_charset.Po
#	$(AM_V_CXX)source='video/osd_charset.cpp' object='video/gens-osd_charset.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o video/gens-osd_charset.obj `if test -f 'video/osd_charset.cpp'; then $(CYGPATH_W) 'video/osd_charset.cpp'; else $(CYGPATH_W) '$(srcdir)/video/osd_charset.cpp'; fi`

video/gens-vdraw_cpp.o: video/vdraw_cpp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT video/gens-vdraw_cpp.o -MD -MP -MF video/$(DEPDIR)/gens-vdraw_cpp.Tpo -c -o video/gens-vdraw_cpp.o `test -f 'video/vdraw_cpp.cpp' || echo '$(srcdir)/'`video/vdraw_cpp.cpp
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-vdraw_cpp.Tpo video/$(DEPDIR)/gens-vdraw_cpp.Po
#	$(AM_V_CXX)source='video/vdraw_cpp.cpp' object='video/gens-vdraw_cpp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o video/gens-vdraw_cpp.o `test -f 'video/vdraw_cpp.cpp' || echo '$(srcdir)/'`video/vdraw_cpp.cpp

video/gens-vdraw_cpp.obj: video/vdraw_cpp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT video/gens-vdraw_cpp.obj -MD -MP -MF video/$(DEPDIR)/gens-vdraw_cpp.Tpo -c -o video/gens-vdraw_cpp.obj `if test -f 'video/vdraw_cpp.cpp'; then $(CYGPATH_W) 'video/vdraw_cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/video/vdraw_cpp.cpp'; fi`
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-vdraw_cpp.Tpo video/$(DEPDIR)/gens-vdraw_cpp.Po
#	$(AM_V_CXX)source='video/vdraw_cpp.cpp' object='video/gens-vdraw_cpp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o video/gens-vdraw_cpp.obj `if test -f 'video/vdraw_cpp.cpp'; then $(CYGPATH_W) 'video/vdraw_cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/video/vdraw_cpp.cpp'; fi`

video/gens-vdraw_text.o: video/vdraw_text.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT video/gens-vdraw_text.o -MD -MP -MF video/$(DEPDIR)/gens-vdraw_text.Tpo -c -o video/gens-vdraw_text.o `test -f 'video/vdraw_text.cpp' || echo '$(srcdir)/'`video/vdraw_text.cpp
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-vdraw_text.Tpo video/$(DEPDIR)/gens-vdraw_text.Po
#	$(AM_V_CXX)source='video/vdraw_text.cpp' object='video/gens-vdraw_text.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o video/gens-vdraw_text.o `test -f 'video/vdraw_text.cpp' || echo '$(srcdir)/'`video/vdraw_text.cpp

video/gens-vdraw_text.obj: video/vdraw_text.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT video/gens-vdraw_text.obj -MD -MP -MF video/$(DEPDIR)/gens-vdraw_text.Tpo -c -o video/gens-vdraw_text.obj `if test -f 'video/vdraw_text.cpp'; then $(CYGPATH_W) 'video/vdraw_text.cpp'; else $(CYGPATH_W) '$(srcdir)/video/vdraw_text.cpp'; fi`
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-vdraw_text.Tpo video/$(DEPDIR)/gens-vdraw_text.Po
#	$(AM_V_CXX)source='video/vdraw_text.cpp' object='video/gens-vdraw_text.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o video/gens-vdraw_text.obj `if test -f 'video/vdraw_text.cpp'; then $(CYGPATH_W) 'video/vdraw_text.cpp'; else $(CYGPATH_W) '$(srcdir)/video/vdraw_text.cpp'; fi`

video/gens-v_effects.o: video/v_effects.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT video/gens-v_effects.o -MD -MP -MF video/$(DEPDIR)/gens-v_effects.Tpo -c -o video/gens-v_effects.o `test -f 'video/v_effects.cpp' || echo '$(srcdir)/'`video/v_effects.cpp
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-v_effects.Tpo video/$(DEPDIR)/gens-v_effects.Po
#	$(AM_V_CXX)source='video/v_effects.cpp' object='video/gens-v_effects.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o video/gens-v_effects.o `test -f 'video/v_effects.cpp' || echo '$(srcdir)/'`video/v_effects.cpp

video/gens-v_effects.obj: video/v_effects.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT video/gens-v_effects.obj -MD -MP -MF video/$(DEPDIR)/gens-v_effects.Tpo -c -o video/gens-v_effects.obj `if test -f 'video/v_effects.cpp'; then $(CYGPATH_W) 'video/v_effects.cpp'; else $(CYGPATH_W) '$(srcdir)/video/v_effects.cpp'; fi`
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-v_effects.Tpo video/$(DEPDIR)/gens-v_effects.Po
#	$(AM_V_CXX)source='video/v_effects.cpp' object='video/gens-v_effects.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o video/gens-v_effects.obj `if test -f 'video/v_effects.cpp'; then $(CYGPATH_W) 'video/v_effects.cpp'; else $(CYGPATH_W) '$(srcdir)/video/v_effects.cpp'; fi`

plugins/gens-pluginmgr.o: plugins/pluginmgr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT plugins/gens-pluginmgr.o -MD -MP -MF plugins/$(DEPDIR)/gens-pluginmgr.Tpo -c -o plugins/gens-pluginmgr.o `test -f 'plugins/pluginmgr.cpp' || echo '$(srcdir)/'`plugins/pluginmgr.cpp
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/gens-pluginmgr.Tpo plugins/$(DEPDIR)/gens-pluginmgr.Po
#	$(AM_V_CXX)source='plugins/pluginmgr.cpp' object='plugins/gens-pluginmgr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o plugins/gens-pluginmgr.o `test -f 'plugins/pluginmgr.cpp' || echo '$(srcdir)/'`plugins/pluginmgr.cpp

plugins/gens-pluginmgr.obj: plugins/pluginmgr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT plugins/gens-pluginmgr.obj -MD -MP -MF plugins/$(DEPDIR)/gens-pluginmgr.Tpo -c -o plugins/gens-pluginmgr.obj `if test -f 'plugins/pluginmgr.cpp'; then $(CYGPATH_W) 'plugins/pluginmgr.cpp'; else $(CYGPATH_W) '$(srcdir)/plugins/pluginmgr.cpp'; fi`
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/gens-pluginmgr.Tpo plugins/$(DEPDIR)/gens-pluginmgr.Po
#	$(AM_V_CXX)source='plugins/pluginmgr.cpp' object='plugins/gens-pluginmgr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o plugins/gens-pluginmgr.obj `if test -f 'plugins/pluginmgr.cpp'; then $(CYGPATH_W) 'plugins/pluginmgr.cpp'; else $(CYGPATH_W) '$(srcdir)/plugins/pluginmgr.cpp'; fi`

plugins/gens-rendermgr.o: plugins/rendermgr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT plugins/gens-rendermgr.o -MD -MP -MF plugins/$(DEPDIR)/gens-rendermgr.Tpo -c -o plugins/gens-rendermgr.o `test -f 'plugins/rendermgr.cpp' || echo '$(srcdir)/'`plugins/rendermgr.cpp
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/gens-rendermgr.Tpo plugins/$(DEPDIR)/gens-rendermgr.Po
#	$(AM_V_CXX)source='plugins/rendermgr.cpp' object='plugins/gens-rendermgr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o plugins/gens-rendermgr.o `test -f 'plugins/rendermgr.cpp' || echo '$(srcdir)/'`plugins/rendermgr.cpp

plugins/gens-rendermgr.obj: plugins/rendermgr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT plugins/gens-rendermgr.obj -MD -MP -MF plugins/$(DEPDIR)/gens-rendermgr.Tpo -c -o plugins/gens-rendermgr.obj `if test -f 'plugins/rendermgr.cpp'; then $(CYGPATH_W) 'plugins/rendermgr.cpp'; else $(CYGPATH_W) '$(srcdir)/plugins/rendermgr.cpp'; fi`
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/gens-rendermgr.Tpo plugins/$(DEPDIR)/gens-rendermgr.Po
#	$(AM_V_CXX)source='plugins/rendermgr.cpp' object='plugins/gens-rendermgr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o plugins/gens-rendermgr.obj `if test -f 'plugins/rendermgr.cpp'; then $(CYGPATH_W) 'plugins/rendermgr.cpp'; else $(CYGPATH_W) '$(srcdir)/plugins/rendermgr.cpp'; fi`

plugins/gens-mdp_host_gens_cpp.o: plugins/mdp_host_gens_cpp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT plugins/gens-mdp_host_gens_cpp.o -MD -MP -MF plugins/$(DEPDIR)/gens-mdp_host_gens_cpp.Tpo -c -o plugins/gens-mdp_host_gens_cpp.o `test -f 'plugins/mdp_host_gens_cpp.cpp' || echo '$(srcdir)/'`plugins/mdp_host_gens_cpp.cpp
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/gens-mdp_host_gens_cpp.Tpo plugins/$(DEPDIR)/gens-mdp_host_gens_cpp.Po
#	$(AM_V_CXX)source='plugins/mdp_host_gens_cpp.cpp' object='plugins/gens-mdp_host_gens_cpp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o plugins/gens-mdp_host_gens_cpp.o `test -f 'plugins/mdp_host_gens_cpp.cpp' || echo '$(srcdir)/'`plugins/mdp_host_gens_cpp.cpp

plugins/gens-mdp_host_gens_cpp.obj: plugins/mdp_host_gens_cpp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT plugins/gens-mdp_host_gens_cpp.obj -MD -MP -MF plugins/$(DEPDIR)/gens-mdp_host_gens_cpp.Tpo -c -o plugins/gens-mdp_host_gens_cpp.obj `if test -f 'plugins/mdp_host_gens_cpp.cpp'; then $(CYGPATH_W) 'plugins/mdp_host_gens_cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/plugins/mdp_host_gens_cpp.cpp'; fi`
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/gens-mdp_host_gens_cpp.Tpo plugins/$(DEPDIR)/gens-mdp_host_gens_cpp.Po
#	$(AM_V_CXX)source='plugins/mdp_host_gens_cpp.cpp' object='plugins/gens-mdp_host_gens_cpp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o plugins/gens-mdp_host_gens_cpp.obj `if test -f 'plugins/mdp_host_gens_cpp.cpp'; then $(CYGPATH_W) 'plugins/mdp_host_gens_cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/plugins/mdp_host_gens_cpp.cpp'; fi`

plugins/gens-mdp_host_gens_menu.o: plugins/mdp_host_gens_menu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT plugins/gens-mdp_host_gens_menu.o -MD -MP -MF plugins/$(DEPDIR)/gens-mdp_host_gens_menu.Tpo -c -o plugins/gens-mdp_host_gens_menu.o `test -f 'plugins/mdp_host_gens_menu.cpp' || echo '$(srcdir)/'`plugins/mdp_host_gens_menu.cpp
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/gens-mdp_host_gens_menu.Tpo plugins/$(DEPDIR)/gens-mdp_host_gens_menu.Po
#	$(AM_V_CXX)source='plugins/mdp_host_gens_menu.cpp' object='plugins/gens-mdp_host_gens_menu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o plugins/gens-mdp_host_gens_menu.o `test -f 'plugins/mdp_host_gens_menu.cpp' || echo '$(srcdir)/'`plugins/mdp_host_gens_menu.cpp

plugins/gens-mdp_host_gens_menu.obj: plugins/mdp_host_gens_menu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT plugins/gens-mdp_host_gens_menu.obj -MD -MP -MF plugins/$(DEPDIR)/gens-mdp_host_gens_menu.Tpo -c -o plugins/gens-mdp_host_gens_menu.obj `if test -f 'plugins/mdp_host_gens_menu.cpp'; then $(CYGPATH_W) 'plugins/mdp_host_gens_menu.cpp'; else $(CYGPATH_W) '$(srcdir)/plugins/mdp_host_gens_menu.cpp'; fi`
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/gens-mdp_host_gens_menu.Tpo plugins/$(DEPDIR)/gens-mdp_host_gens_menu.Po
#	$(AM_V_CXX)source='plugins/mdp_host_gens_menu.cpp' object='plugins/gens-mdp_host_gens_menu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o plugins/gens-mdp_host_gens_menu.obj `if test -f 'plugins/mdp_host_gens_menu.cpp'; then $(CYGPATH_W) 'plugins/mdp_host_gens_menu.cpp'; else $(CYGPATH_W) '$(srcdir)/plugins/mdp_host_gens_menu.cpp'; fi`

plugins/gens-mdp_host_gens_event.o: plugins/mdp_host_gens_event.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT plugins/gens-mdp_host_gens_event.o -MD -MP -MF plugins/$(DEPDIR)/gens-mdp_host_gens_event.Tpo -c -o plugins/gens-mdp_host_gens_event.o `test -f 'plugins/mdp_host_gens_event.cpp' || echo '$(srcdir)/'`plugins/mdp_host_gens_event.cpp
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/gens-mdp_host_gens_event.Tpo plugins/$(DEPDIR)/gens-mdp_host_gens_event.Po
#	$(AM_V_CXX)source='plugins/mdp_host_gens_event.cpp' object='plugins/gens-mdp_host_gens_event.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o plugins/gens-mdp_host_gens_event.o `test -f 'plugins/mdp_host_gens_event.cpp' || echo '$(srcdir)/'`plugins/mdp_host_gens_event.cpp

plugins/gens-mdp_host_gens_event.obj: plugins/mdp_host_gens_event.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT plugins/gens-mdp_host_gens_event.obj -MD -MP -MF plugins/$(DEPDIR)/gens-mdp_host_gens_event.Tpo -c -o plugins/gens-mdp_host_gens_event.obj `if test -f 'plugins/mdp_host_gens_event.cpp'; then $(CYGPATH_W) 'plugins/mdp_host_gens_event.cpp'; else $(CYGPATH_W) '$(srcdir)/plugins/mdp_host_gens_event.cpp'; fi`
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/gens-mdp_host_gens_event.Tpo plugins/$(DEPDIR)/gens-mdp_host_gens_event.Po
#	$(AM_V_CXX)source='plugins/mdp_host_gens_event.cpp' object='plugins/gens-mdp_host_gens_event.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o plugins/gens-mdp_host_gens_event.obj `if test -f 'plugins/mdp_host_gens_event.cpp'; then $(CYGPATH_W) 'plugins/mdp_host_gens_event.cpp'; else $(CYGPATH_W) '$(srcdir)/plugins/mdp_host_gens_event.cpp'; fi`

plugins/gens-mdp_host_gens_emuctrl.o: plugins/mdp_host_gens_emuctrl.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT plugins/gens-mdp_host_gens_emuctrl.o -MD -MP -MF plugins/$(DEPDIR)/gens-mdp_host_gens_emuctrl.Tpo -c -o plugins/gens-mdp_host_gens_emuctrl.o `test -f 'plugins/mdp_host_gens_emuctrl.cpp' || echo '$(srcdir)/'`plugins/mdp_host_gens_emuctrl.cpp
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/gens-mdp_host_gens_emuctrl.Tpo plugins/$(DEPDIR)/gens-mdp_host_gens_emuctrl.Po
#	$(AM_V_CXX)source='plugins/mdp_host_gens_emuctrl.cpp' object='plugins/gens-mdp_host_gens_emuctrl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o plugins/gens-mdp_host_gens_emuctrl.o `test -f 'plugins/mdp_host_gens_emuctrl.cpp' || echo '$(srcdir)/'`plugins/mdp_host_gens_emuctrl.cpp

plugins/gens-mdp_host_gens_emuctrl.obj: plugins/mdp_host_gens_emuctrl.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT plugins/gens-mdp_host_gens_emuctrl.obj -MD -MP -MF plugins/$(DEPDIR)/gens-mdp_host_gens_emuctrl.Tpo -c -o plugins/gens-mdp_host_gens_emuctrl.obj `if test -f 'plugins/mdp_host_gens_emuctrl.cpp'; then $(CYGPATH_W) 'plugins/mdp_host_gens_emuctrl.cpp'; else $(CYGPATH_W) '$(srcdir)/plugins/mdp_host_gens_emuctrl.cpp'; fi`
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/gens-mdp_host_gens_emuctrl.Tpo plugins/$(DEPDIR)/gens-mdp_host_gens_emuctrl.Po
#	$(AM_V_CXX)source='plugins/mdp_host_gens_emuctrl.cpp' object='plugins/gens-mdp_host_gens_emuctrl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o plugins/gens-mdp_host_gens_emuctrl.obj `if test -f 'plugins/mdp_host_gens_emuctrl.cpp'; then $(CYGPATH_W) 'plugins/mdp_host_gens_emuctrl.cpp'; else $(CYGPATH_W) '$(srcdir)/plugins/mdp_host_gens_emuctrl.cpp'; fi`

plugins/gens-mdp_host_gens_config.o: plugins/mdp_host_gens_config.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT plugins/gens-mdp_host_gens_config.o -MD -MP -MF plugins/$(DEPDIR)/gens-mdp_host_gens_config.Tpo -c -o plugins/gens-mdp_host_gens_config.o `test -f 'plugins/mdp_host_gens_config.cpp' || echo '$(srcdir)/'`plugins/mdp_host_gens_config.cpp
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/gens-mdp_host_gens_config.Tpo plugins/$(DEPDIR)/gens-mdp_host_gens_config.Po
#	$(AM_V_CXX)source='plugins/mdp_host_gens_config.cpp' object='plugins/gens-mdp_host_gens_config.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o plugins/gens-mdp_host_gens_config.o `test -f 'plugins/mdp_host_gens_config.cpp' || echo '$(srcdir)/'`plugins/mdp_host_gens_config.cpp

plugins/gens-mdp_host_gens_config.obj: plugins/mdp_host_gens_config.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT plugins/gens-mdp_host_gens_config.obj -MD -MP -MF plugins/$(DEPDIR)/gens-mdp_host_gens_config.Tpo -c -o plugins/gens-mdp_host_gens_config.obj `if test -f 'plugins/mdp_host_gens_config.cpp'; then $(CYGPATH_W) 'plugins/mdp_host_gens_config.cpp'; else $(CYGPATH_W) '$(srcdir)/plugins/mdp_host_gens_config.cpp'; fi`
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/gens-mdp_host_gens_config.Tpo plugins/$(DEPDIR)/gens-mdp_host_gens_config.Po
#	$(AM_V_CXX)source='plugins/mdp_host_gens_config.cpp' object='plugins/gens-mdp_host_gens_config.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o plugins/gens-mdp_host_gens_config.obj `if test -f 'plugins/mdp_host_gens_config.cpp'; then $(CYGPATH_W) 'plugins/mdp_host_gens_config.cpp'; else $(CYGPATH_W) '$(srcdir)/plugins/mdp_host_gens_config.cpp'; fi`

plugins/gens-mdp_host_gens_dir.o: plugins/mdp_host_gens_dir.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT plugins/gens-mdp_host_gens_dir.o -MD -MP -MF plugins/$(DEPDIR)/gens-mdp_host_gens_dir.Tpo -c -o plugins/gens-mdp_host_gens_dir.o `test -f 'plugins/mdp_host_gens_dir.cpp' || echo '$(srcdir)/'`plugins/mdp_host_gens_dir.cpp
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/gens-mdp_host_gens_dir.Tpo plugins/$(DEPDIR)/gens-mdp_host_gens_dir.Po
#	$(AM_V_CXX)source='plugins/mdp_host_gens_dir.cpp' object='plugins/gens-mdp_host_gens_dir.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o plugins/gens-mdp_host_gens_dir.o `test -f 'plugins/mdp_host_gens_dir.cpp' || echo '$(srcdir)/'`plugins/mdp_host_gens_dir.cpp

plugins/gens-mdp_host_gens_dir.obj: plugins/mdp_host_gens_dir.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT plugins/gens-mdp_host_gens_dir.obj -MD -MP -MF plugins/$(DEPDIR)/gens-mdp_host_gens_dir.Tpo -c -o plugins/gens-mdp_host_gens_dir.obj `if test -f 'plugins/mdp_host_gens_dir.cpp'; then $(CYGPATH_W) 'plugins/mdp_host_gens_dir.cpp'; else $(CYGPATH_W) '$(srcdir)/plugins/mdp_host_gens_dir.cpp'; fi`
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/gens-mdp_host_gens_dir.Tpo plugins/$(DEPDIR)/gens-mdp_host_gens_dir.Po
#	$(AM_V_CXX)source='plugins/mdp_host_gens_dir.cpp' object='plugins/gens-mdp_host_gens_dir.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o plugins/gens-mdp_host_gens_dir.obj `if test -f 'plugins/mdp_host_gens_dir.cpp'; then $(CYGPATH_W) 'plugins/mdp_host_gens_dir.cpp'; else $(CYGPATH_W) '$(srcdir)/plugins/mdp_host_gens_dir.cpp'; fi`

plugins/gens-eventmgr.o: plugins/eventmgr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT plugins/gens-eventmgr.o -MD -MP -MF plugins/$(DEPDIR)/gens-eventmgr.Tpo -c -o plugins/gens-eventmgr.o `test -f 'plugins/eventmgr.cpp' || echo '$(srcdir)/'`plugins/eventmgr.cpp
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/gens-eventmgr.Tpo plugins/$(DEPDIR)/gens-eventmgr.Po
#	$(AM_V_CXX)source='plugins/eventmgr.cpp' object='plugins/gens-eventmgr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o plugins/gens-eventmgr.o `test -f 'plugins/eventmgr.cpp' || echo '$(srcdir)/'`plugins/eventmgr.cpp

plugins/gens-eventmgr.obj: plugins/eventmgr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT plugins/gens-eventmgr.obj -MD -MP -MF plugins/$(DEPDIR)/gens-eventmgr.Tpo -c -o plugins/gens-eventmgr.obj `if test -f 'plugins/eventmgr.cpp'; then $(CYGPATH_W) 'plugins/eventmgr.cpp'; else $(CYGPATH_W) '$(srcdir)/plugins/eventmgr.cpp'; fi`
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/gens-eventmgr.Tpo plugins/$(DEPDIR)/gens-eventmgr.Po
#	$(AM_V_CXX)source='plugins/eventmgr.cpp' object='plugins/gens-eventmgr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o plugins/gens-eventmgr.obj `if test -f 'plugins/eventmgr.cpp'; then $(CYGPATH_W) 'plugins/eventmgr.cpp'; else $(CYGPATH_W) '$(srcdir)/plugins/eventmgr.cpp'; fi`

plugins/gens-mdp_incompat.o: plugins/mdp_incompat.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT plugins/gens-mdp_incompat.o -MD -MP -MF plugins/$(DEPDIR)/gens-mdp_incompat.Tpo -c -o plugins/gens-mdp_incompat.o `test -f 'plugins/mdp_incompat.cpp' || echo '$(srcdir)/'`plugins/mdp_incompat.cpp
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/gens-mdp_incompat.Tpo plugins/$(DEPDIR)/gens-mdp_incompat.Po
#	$(AM_V_CXX)source='plugins/mdp_incompat.cpp' object='plugins/gens-mdp_incompat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o plugins/gens-mdp_incompat.o `test -f 'plugins/mdp_incompat.cpp' || echo '$(srcdir)/'`plugins/mdp_incompat.cpp

plugins/gens-mdp_incompat.obj: plugins/mdp_incompat.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT plugins/gens-mdp_incompat.obj -MD -MP -MF plugins/$(DEPDIR)/gens-mdp_incompat.Tpo -c -o plugins/gens-mdp_incompat.obj `if test -f 'plugins/mdp_incompat.cpp'; then $(CYGPATH_W) 'plugins/mdp_incompat.cpp'; else $(CYGPATH_W) '$(srcdir)/plugins/mdp_incompat.cpp'; fi`
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/gens-mdp_incompat.Tpo plugins/$(DEPDIR)/gens-mdp_incompat.Po
#	$(AM_V_CXX)source='plugins/mdp_incompat.cpp' object='plugins/gens-mdp_incompat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o plugins/gens-mdp_incompat.obj `if test -f 'plugins/mdp_incompat.cpp'; then $(CYGPATH_W) 'plugins/mdp_incompat.cpp'; else $(CYGPATH_W) '$(srcdir)/plugins/mdp_incompat.cpp'; fi`

debugger/gens-debugger.o: debugger/debugger.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT debugger/gens-debugger.o -MD -MP -MF debugger/$(DEPDIR)/gens-debugger.Tpo -c -o debugger/gens-debugger.o `test -f 'debugger/debugger.cpp' || echo '$(srcdir)/'`debugger/debugger.cpp
	$(AM_V_at)$(am__mv) debugger/$(DEPDIR)/gens-debugger.Tpo debugger/$(DEPDIR)/gens-debugger.Po
#	$(AM_V_CXX)source='debugger/debugger.cpp' object='debugger/gens-debugger.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o debugger/gens-debugger.o `test -f 'debugger/debugger.cpp' || echo '$(srcdir)/'`debugger/debugger.cpp

debugger/gens-debugger.obj: debugger/debugger.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT debugger/gens-debugger.obj -MD -MP -MF debugger/$(DEPDIR)/gens-debugger.Tpo -c -o debugger/gens-debugger.obj `if test -f 'debugger/debugger.cpp'; then $(CYGPATH_W) 'debugger/debugger.cpp'; else $(CYGPATH_W) '$(srcdir)/debugger/debugger.cpp'; fi`
	$(AM_V_at)$(am__mv) debugger/$(DEPDIR)/gens-debugger.Tpo debugger/$(DEPDIR)/gens-debugger.Po
#	$(AM_V_CXX)source='debugger/debugger.cpp' object='debugger/gens-debugger.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o debugger/gens-debugger.obj `if test -f 'debugger/debugger.cpp'; then $(CYGPATH_W) 'debugger/debugger.cpp'; else $(CYGPATH_W) '$(srcdir)/debugger/debugger.cpp'; fi`

emulator/gens-g_main_unix.o: emulator/g_main_unix.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT emulator/gens-g_main_unix.o -MD -MP -MF emulator/$(DEPDIR)/gens-g_main_unix.Tpo -c -o emulator/gens-g_main_unix.o `test -f 'emulator/g_main_unix.cpp' || echo '$(srcdir)/'`emulator/g_main_unix.cpp
	$(AM_V_at)$(am__mv) emulator/$(DEPDIR)/gens-g_main_unix.Tpo emulator/$(DEPDIR)/gens-g_main_unix.Po
#	$(AM_V_CXX)source='emulator/g_main_unix.cpp' object='emulator/gens-g_main_unix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o emulator/gens-g_main_unix.o `test -f 'emulator/g_main_unix.cpp' || echo '$(srcdir)/'`emulator/g_main_unix.cpp

emulator/gens-g_main_unix.obj: emulator/g_main_unix.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT emulator/gens-g_main_unix.obj -MD -MP -MF emulator/$(DEPDIR)/gens-g_main_unix.Tpo -c -o emulator/gens-g_main_unix.obj `if test -f 'emulator/g_main_unix.cpp'; then $(CYGPATH_W) 'emulator/g_main_unix.cpp'; else $(CYGPATH_W) '$(srcdir)/emulator/g_main_unix.cpp'; fi`
	$(AM_V_at)$(am__mv) emulator/$(DEPDIR)/gens-g_main_unix.Tpo emulator/$(DEPDIR)/gens-g_main_unix.Po
#	$(AM_V_CXX)source='emulator/g_main_unix.cpp' object='emulator/gens-g_main_unix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o emulator/gens-g_main_unix.obj `if test -f 'emulator/g_main_unix.cpp'; then $(CYGPATH_W) 'emulator/g_main_unix.cpp'; else $(CYGPATH_W) '$(srcdir)/emulator/g_main_unix.cpp'; fi`

charset/gens-iconv_string.o: charset/iconv_string.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT charset/gens-iconv_string.o -MD -MP -MF charset/$(DEPDIR)/gens-iconv_string.Tpo -c -o charset/gens-iconv_string.o `test -f 'charset/iconv_string.cpp' || echo '$(srcdir)/'`charset/iconv_string.cpp
	$(AM_V_at)$(am__mv) charset/$(DEPDIR)/gens-iconv_string.Tpo charset/$(DEPDIR)/gens-iconv_string.Po
#	$(AM_V_CXX)source='charset/iconv_string.cpp' object='charset/gens-iconv_string.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o charset/gens-iconv_string.o `test -f 'charset/iconv_string.cpp' || echo '$(srcdir)/'`charset/iconv_string.cpp

charset/gens-iconv_string.obj: charset/iconv_string.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT charset/gens-iconv_string.obj -MD -MP -MF charset/$(DEPDIR)/gens-iconv_string.Tpo -c -o charset/gens-iconv_string.obj `if test -f 'charset/iconv_string.cpp'; then $(CYGPATH_W) 'charset/iconv_string.cpp'; else $(CYGPATH_W) '$(srcdir)/charset/iconv_string.cpp'; fi`
	$(AM_V_at)$(am__mv) charset/$(DEPDIR)/gens-iconv_string.Tpo charset/$(DEPDIR)/gens-iconv_string.Po
#	$(AM_V_CXX)source='charset/iconv_string.cpp' object='charset/gens-iconv_string.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o charset/gens-iconv_string.obj `if test -f 'charset/iconv_string.cpp'; then $(CYGPATH_W) 'charset/iconv_string.cpp'; else $(CYGPATH_W) '$(srcdir)/charset/iconv_string.cpp'; fi`

input/gens-input_sdl_events.o: input/input_sdl_events.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT input/gens-input_sdl_events.o -MD -MP -MF input/$(DEPDIR)/gens-input_sdl_events.Tpo -c -o input/gens-input_sdl_events.o `test -f 'input/input_sdl_events.cpp' || echo '$(srcdir)/'`input/input_sdl_events.cpp
	$(AM_V_at)$(am__mv) input/$(DEPDIR)/gens-input_sdl_events.Tpo input/$(DEPDIR)/gens-input_sdl_events.Po
#	$(AM_V_CXX)source='input/input_sdl_events.cpp' object='input/gens-input_sdl_events.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o input/gens-input_sdl_events.o `test -f 'input/input_sdl_events.cpp' || echo '$(srcdir)/'`input/input_sdl_events.cpp

input/gens-input_sdl_events.obj: input/input_sdl_events.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT input/gens-input_sdl_events.obj -MD -MP -MF input/$(DEPDIR)/gens-input_sdl_events.Tpo -c -o input/gens-input_sdl_events.obj `if test -f 'input/input_sdl_events.cpp'; then $(CYGPATH_W) 'input/input_sdl_events.cpp'; else $(CYGPATH_W) '$(srcdir)/input/input_sdl_events.cpp'; fi`
	$(AM_V_at)$(am__mv) input/$(DEPDIR)/gens-input_sdl_events.Tpo input/$(DEPDIR)/gens-input_sdl_events.Po
#	$(AM_V_CXX)source='input/input_sdl_events.cpp' object='input/gens-input_sdl_events.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o input/gens-input_sdl_events.obj `if test -f 'input/input_sdl_events.cpp'; then $(CYGPATH_W) 'input/input_sdl_events.cpp'; else $(CYGPATH_W) '$(srcdir)/input/input_sdl_events.cpp'; fi`

segacd/gens-cd_aspi_linux.o: segacd/cd_aspi_linux.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT segacd/gens-cd_aspi_linux.o -MD -MP -MF segacd/$(DEPDIR)/gens-cd_aspi_linux.Tpo -c -o segacd/gens-cd_aspi_linux.o `test -f 'segacd/cd_aspi_linux.cpp' || echo '$(srcdir)/'`segacd/cd_aspi_linux.cpp
	$(AM_V_at)$(am__mv) segacd/$(DEPDIR)/gens-cd_aspi_linux.Tpo segacd/$(DEPDIR)/gens-cd_aspi_linux.Po
#	$(AM_V_CXX)source='segacd/cd_aspi_linux.cpp' object='segacd/gens-cd_aspi_linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o segacd/gens-cd_aspi_linux.o `test -f 'segacd/cd_aspi_linux.cpp' || echo '$(srcdir)/'`segacd/cd_aspi_linux.cpp

segacd/gens-cd_aspi_linux.obj: segacd/cd_aspi_linux.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT segacd/gens-cd_aspi_linux.obj -MD -MP -MF segacd/$(DEPDIR)/gens-cd_aspi_linux.Tpo -c -o segacd/gens-cd_aspi_linux.obj `if test -f 'segacd/cd_aspi_linux.cpp'; then $(CYGPATH_W) 'segacd/cd_aspi_linux.cpp'; else $(CYGPATH_W) '$(srcdir)/segacd/cd_aspi_linux.cpp'; fi`
	$(AM_V_at)$(am__mv) segacd/$(DEPDIR)/gens-cd_aspi_linux.Tpo segacd/$(DEPDIR)/gens-cd_aspi_linux.Po
#	$(AM_V_CXX)source='segacd/cd_aspi_linux.cpp' object='segacd/gens-cd_aspi_linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o segacd/gens-cd_aspi_linux.obj `if test -f 'segacd/cd_aspi_linux.cpp'; then $(CYGPATH_W) 'segacd/cd_aspi_linux.cpp'; else $(CYGPATH_W) '$(srcdir)/segacd/cd_aspi_linux.cpp'; fi`

ui/gtk/gens-gens_ui_gtk.o: ui/gtk/gens_ui_gtk.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/gtk/gens-gens_ui_gtk.o -MD -MP -MF ui/gtk/$(DEPDIR)/gens-gens_ui_gtk.Tpo -c -o ui/gtk/gens-gens_ui_gtk.o `test -f 'ui/gtk/gens_ui_gtk.cpp' || echo '$(srcdir)/'`ui/gtk/gens_ui_gtk.cpp
	$(AM_V_at)$(am__mv) ui/gtk/$(DEPDIR)/gens-gens_ui_gtk.Tpo ui/gtk/$(DEPDIR)/gens-gens_ui_gtk.Po
#	$(AM_V_CXX)source='ui/gtk/gens_ui_gtk.cpp' object='ui/gtk/gens-gens_ui_gtk.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/gtk/gens-gens_ui_gtk.o `test -f 'ui/gtk/gens_ui_gtk.cpp' || echo '$(srcdir)/'`ui/gtk/gens_ui_gtk.cpp

ui/gtk/gens-gens_ui_gtk.obj: ui/gtk/gens_ui_gtk.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/gtk/gens-gens_ui_gtk.obj -MD -MP -MF ui/gtk/$(DEPDIR)/gens-gens_ui_gtk.Tpo -c -o ui/gtk/gens-gens_ui_gtk.obj `if test -f 'ui/gtk/gens_ui_gtk.cpp'; then $(CYGPATH_W) 'ui/gtk/gens_ui_gtk.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/gens_ui_gtk.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/gtk/$(DEPDIR)/gens-gens_ui_gtk.Tpo ui/gtk/$(DEPDIR)/gens-gens_ui_gtk.Po
#	$(AM_V_CXX)source='ui/gtk/gens_ui_gtk.cpp' object='ui/gtk/gens-gens_ui_gtk.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/gtk/gens-gens_ui_gtk.obj `if test -f 'ui/gtk/gens_ui_gtk.cpp'; then $(CYGPATH_W) 'ui/gtk/gens_ui_gtk.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/gens_ui_gtk.cpp'; fi`

ui/gtk/gens/gens-gens_window_callbacks.o: ui/gtk/gens/gens_window_callbacks.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/gtk/gens/gens-gens_window_callbacks.o -MD -MP -MF ui/gtk/gens/$(DEPDIR)/gens-gens_window_callbacks.Tpo -c -o ui/gtk/gens/gens-gens_window_callbacks.o `test -f 'ui/gtk/gens/gens_window_callbacks.cpp' || echo '$(srcdir)/'`ui/gtk/gens/gens_window_callbacks.cpp
	$(AM_V_at)$(am__mv) ui/gtk/gens/$(DEPDIR)/gens-gens_window_callbacks.Tpo ui/gtk/gens/$(DEPDIR)/gens-gens_window_callbacks.Po
#	$(AM_V_CXX)source='ui/gtk/gens/gens_window_callbacks.cpp' object='ui/gtk/gens/gens-gens_window_callbacks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/gtk/gens/gens-gens_window_callbacks.o `test -f 'ui/gtk/gens/gens_window_callbacks.cpp' || echo '$(srcdir)/'`ui/gtk/gens/gens_window_callbacks.cpp

ui/gtk/gens/gens-gens_window_callbacks.obj: ui/gtk/gens/gens_window_callbacks.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/gtk/gens/gens-gens_window_callbacks.obj -MD -MP -MF ui/gtk/gens/$(DEPDIR)/gens-gens_window_callbacks.Tpo -c -o ui/gtk/gens/gens-gens_window_callbacks.obj `if test -f 'ui/gtk/gens/gens_window_callbacks.cpp'; then $(CYGPATH_W) 'ui/gtk/gens/gens_window_callbacks.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/gens/gens_window_callbacks.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/gtk/gens/$(DEPDIR)/gens-gens_window_callbacks.Tpo ui/gtk/gens/$(DEPDIR)/gens-gens_window_callbacks.Po
#	$(AM_V_CXX)source='ui/gtk/gens/gens_window_callbacks.cpp' object='ui/gtk/gens/gens-gens_window_callbacks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/gtk/gens/gens-gens_window_callbacks.obj `if test -f 'ui/gtk/gens/gens_window_callbacks.cpp'; then $(CYGPATH_W) 'ui/gtk/gens/gens_window_callbacks.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/gens/gens_window_callbacks.cpp'; fi`

ui/gtk/gens/gens-gens_window_sync.o: ui/gtk/gens/gens_window_sync.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/gtk/gens/gens-gens_window_sync.o -MD -MP -MF ui/gtk/gens/$(DEPDIR)/gens-gens_window_sync.Tpo -c -o ui/gtk/gens/gens-gens_window_sync.o `test -f 'ui/gtk/gens/gens_window_sync.cpp' || echo '$(srcdir)/'`ui/gtk/gens/gens_window_sync.cpp
	$(AM_V_at)$(am__mv) ui/gtk/gens/$(DEPDIR)/gens-gens_window_sync.Tpo ui/gtk/gens/$(DEPDIR)/gens-gens_window_sync.Po
#	$(AM_V_CXX)source='ui/gtk/gens/gens_window_sync.cpp' object='ui/gtk/gens/gens-gens_window_sync.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/gtk/gens/gens-gens_window_sync.o `test -f 'ui/gtk/gens/gens_window_sync.cpp' || echo '$(srcdir)/'`ui/gtk/gens/gens_window_sync.cpp

ui/gtk/gens/gens-gens_window_sync.obj: ui/gtk/gens/gens_window_sync.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/gtk/gens/gens-gens_window_sync.obj -MD -MP -MF ui/gtk/gens/$(DEPDIR)/gens-gens_window_sync.Tpo -c -o ui/gtk/gens/gens-gens_window_sync.obj `if test -f 'ui/gtk/gens/gens_window_sync.cpp'; then $(CYGPATH_W) 'ui/gtk/gens/gens_window_sync.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/gens/gens_window_sync.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/gtk/gens/$(DEPDIR)/gens-gens_window_sync.Tpo ui/gtk/gens/$(DEPDIR)/gens-gens_window_sync.Po
#	$(AM_V_CXX)source='ui/gtk/gens/gens_window_sync.cpp' object='ui/gtk/gens/gens-gens_window_sync.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/gtk/gens/gens-gens_window_sync.obj `if test -f 'ui/gtk/gens/gens_window_sync.cpp'; then $(CYGPATH_W) 'ui/gtk/gens/gens_window_sync.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/gens/gens_window_sync.cpp'; fi`

ui/gtk/gens/gens-gens_menu.o: ui/gtk/gens/gens_menu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/gtk/gens/gens-gens_menu.o -MD -MP -MF ui/gtk/gens/$(DEPDIR)/gens-gens_menu.Tpo -c -o ui/gtk/gens/gens-gens_menu.o `test -f 'ui/gtk/gens/gens_menu.cpp' || echo '$(srcdir)/'`ui/gtk/gens/gens_menu.cpp
	$(AM_V_at)$(am__mv) ui/gtk/gens/$(DEPDIR)/gens-gens_menu.Tpo ui/gtk/gens/$(DEPDIR)/gens-gens_menu.Po
#	$(AM_V_CXX)source='ui/gtk/gens/gens_menu.cpp' object='ui/gtk/gens/gens-gens_menu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/gtk/gens/gens-gens_menu.o `test -f 'ui/gtk/gens/gens_menu.cpp' || echo '$(srcdir)/'`ui/gtk/gens/gens_menu.cpp

ui/gtk/gens/gens-gens_menu.obj: ui/gtk/gens/gens_menu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/gtk/gens/gens-gens_menu.obj -MD -MP -MF ui/gtk/gens/$(DEPDIR)/gens-gens_menu.Tpo -c -o ui/gtk/gens/gens-gens_menu.obj `if test -f 'ui/gtk/gens/gens_menu.cpp'; then $(CYGPATH_W) 'ui/gtk/gens/gens_menu.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/gens/gens_menu.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/gtk/gens/$(DEPDIR)/gens-gens_menu.Tpo ui/gtk/gens/$(DEPDIR)/gens-gens_menu.Po
#	$(AM_V_CXX)source='ui/gtk/gens/gens_menu.cpp' object='ui/gtk/gens/gens-gens_menu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/gtk/gens/gens-gens_menu.obj `if test -f 'ui/gtk/gens/gens_menu.cpp'; then $(CYGPATH_W) 'ui/gtk/gens/gens_menu.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/gens/gens_menu.cpp'; fi`

ui/gtk/bios_misc_files/gens-bmf_window.o: ui/gtk/bios_misc_files/bmf_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/gtk/bios_misc_files/gens-bmf_window.o -MD -MP -MF ui/gtk/bios_misc_files/$(DEPDIR)/gens-bmf_window.Tpo -c -o ui/gtk/bios_misc_files/gens-bmf_window.o `test -f 'ui/gtk/bios_misc_files/bmf_window.cpp' || echo '$(srcdir)/'`ui/gtk/bios_misc_files/bmf_window.cpp
	$(AM_V_at)$(am__mv) ui/gtk/bios_misc_files/$(DEPDIR)/gens-bmf_window.Tpo ui/gtk/bios_misc_files/$(DEPDIR)/gens-bmf_window.Po
#	$(AM_V_CXX)source='ui/gtk/bios_misc_files/bmf_window.cpp' object='ui/gtk/bios_misc_files/gens-bmf_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/gtk/bios_misc_files/gens-bmf_window.o `test -f 'ui/gtk/bios_misc_files/bmf_window.cpp' || echo '$(srcdir)/'`ui/gtk/bios_misc_files/bmf_window.cpp

ui/gtk/bios_misc_files/gens-bmf_window.obj: ui/gtk/bios_misc_files/bmf_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/gtk/bios_misc_files/gens-bmf_window.obj -MD -MP -MF ui/gtk/bios_misc_files/$(DEPDIR)/gens-bmf_window.Tpo -c -o ui/gtk/bios_misc_files/gens-bmf_window.obj `if test -f 'ui/gtk/bios_misc_files/bmf_window.cpp'; then $(CYGPATH_W) 'ui/gtk/bios_misc_files/bmf_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/bios_misc_files/bmf_window.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/gtk/bios_misc_files/$(DEPDIR)/gens-bmf_window.Tpo ui/gtk/bios_misc_files/$(DEPDIR)/gens-bmf_window.Po
#	$(AM_V_CXX)source='ui/gtk/bios_misc_files/bmf_window.cpp' object='ui/gtk/bios_misc_files/gens-bmf_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/gtk/bios_misc_files/gens-bmf_window.obj `if test -f 'ui/gtk/bios_misc_files/bmf_window.cpp'; then $(CYGPATH_W) 'ui/gtk/bios_misc_files/bmf_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/bios_misc_files/bmf_window.cpp'; fi`

ui/gtk/directory_config/gens-dir_window.o: ui/gtk/directory_config/dir_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/gtk/directory_config/gens-dir_window.o -MD -MP -MF ui/gtk/directory_config/$(DEPDIR)/gens-dir_window.Tpo -c -o ui/gtk/directory_config/gens-dir_window.o `test -f 'ui/gtk/directory_config/dir_window.cpp' || echo '$(srcdir)/'`ui/gtk/directory_config/dir_window.cpp
	$(AM_V_at)$(am__mv) ui/gtk/directory_config/$(DEPDIR)/gens-dir_window.Tpo ui/gtk/directory_config/$(DEPDIR)/gens-dir_window.Po
#	$(AM_V_CXX)source='ui/gtk/directory_config/dir_window.cpp' object='ui/gtk/directory_config/gens-dir_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/gtk/directory_config/gens-dir_window.o `test -f 'ui/gtk/directory_config/dir_window.cpp' || echo '$(srcdir)/'`ui/gtk/directory_config/dir_window.cpp

ui/gtk/directory_config/gens-dir_window.obj: ui/gtk/directory_config/dir_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/gtk/directory_config/gens-dir_window.obj -MD -MP -MF ui/gtk/directory_config/$(DEPDIR)/gens-dir_window.Tpo -c -o ui/gtk/directory_config/gens-dir_window.obj `if test -f 'ui/gtk/directory_config/dir_window.cpp'; then $(CYGPATH_W) 'ui/gtk/directory_config/dir_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/directory_config/dir_window.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/gtk/directory_config/$(DEPDIR)/gens-dir_window.Tpo ui/gtk/directory_config/$(DEPDIR)/gens-dir_window.Po
#	$(AM_V_CXX)source='ui/gtk/directory_config/dir_window.cpp' object='ui/gtk/directory_config/gens-dir_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/gtk/directory_config/gens-dir_window.obj `if test -f 'ui/gtk/directory_config/dir_window.cpp'; then $(CYGPATH_W) 'ui/gtk/directory_config/dir_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/directory_config/dir_window.cpp'; fi`

ui/gtk/general_options/gens-genopt_window.o: ui/gtk/general_options/genopt_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/gtk/general_options/gens-genopt_window.o -MD -MP -MF ui/gtk/general_options/$(DEPDIR)/gens-genopt_window.Tpo -c -o ui/gtk/general_options/gens-genopt_window.o `test -f 'ui/gtk/general_options/genopt_window.cpp' || echo '$(srcdir)/'`ui/gtk/general_options/genopt_window.cpp
	$(AM_V_at)$(am__mv) ui/gtk/general_options/$(DEPDIR)/gens-genopt_window.Tpo ui/gtk/general_options/$(DEPDIR)/gens-genopt_window.Po
#	$(AM_V_CXX)source='ui/gtk/general_options/genopt_window.cpp' object='ui/gtk/general_options/gens-genopt_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/gtk/general_options/gens-genopt_window.o `test -f 'ui/gtk/general_options/genopt_window.cpp' || echo '$(srcdir)/'`ui/gtk/general_options/genopt_window.cpp

ui/gtk/general_options/gens-genopt_window.obj: ui/gtk/general_options/genopt_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/gtk/general_options/gens-genopt_window.obj -MD -MP -MF ui/gtk/general_options/$(DEPDIR)/gens-genopt_window.Tpo -c -o ui/gtk/general_options/gens-genopt_window.obj `if test -f 'ui/gtk/general_options/genopt_window.cpp'; then $(CYGPATH_W) 'ui/gtk/general_options/genopt_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/general_options/genopt_window.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/gtk/general_options/$(DEPDIR)/gens-genopt_window.Tpo ui/gtk/general_options/$(DEPDIR)/gens-genopt_window.Po
#	$(AM_V_CXX)source='ui/gtk/general_options/genopt_window.cpp' object='ui/gtk/general_options/gens-genopt_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/gtk/general_options/gens-genopt_window.obj `if test -f 'ui/gtk/general_options/genopt_window.cpp'; then $(CYGPATH_W) 'ui/gtk/general_options/genopt_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/general_options/genopt_window.cpp'; fi`

ui/gtk/plugin_manager/gens-pmgr_window.o: ui/gtk/plugin_manager/pmgr_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/gtk/plugin_manager/gens-pmgr_window.o -MD -MP -MF ui/gtk/plugin_manager/$(DEPDIR)/gens-pmgr_window.Tpo -c -o ui/gtk/plugin_manager/gens-pmgr_window.o `test -f 'ui/gtk/plugin_manager/pmgr_window.cpp' || echo '$(srcdir)/'`ui/gtk/plugin_manager/pmgr_window.cpp
	$(AM_V_at)$(am__mv) ui/gtk/plugin_manager/$(DEPDIR)/gens-pmgr_window.Tpo ui/gtk/plugin_manager/$(DEPDIR)/gens-pmgr_window.Po
#	$(AM_V_CXX)source='ui/gtk/plugin_manager/pmgr_window.cpp' object='ui/gtk/plugin_manager/gens-pmgr_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/gtk/plugin_manager/gens-pmgr_window.o `test -f 'ui/gtk/plugin_manager/pmgr_window.cpp' || echo '$(srcdir)/'`ui/gtk/plugin_manager/pmgr_window.cpp

ui/gtk/plugin_manager/gens-pmgr_window.obj: ui/gtk/plugin_manager/pmgr_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/gtk/plugin_manager/gens-pmgr_window.obj -MD -MP -MF ui/gtk/plugin_manager/$(DEPDIR)/gens-pmgr_window.Tpo -c -o ui/gtk/plugin_manager/gens-pmgr_window.obj `if test -f 'ui/gtk/plugin_manager/pmgr_window.cpp'; then $(CYGPATH_W) 'ui/gtk/plugin_manager/pmgr_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/plugin_manager/pmgr_window.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/gtk/plugin_manager/$(DEPDIR)/gens-pmgr_window.Tpo ui/gtk/plugin_manager/$(DEPDIR)/gens-pmgr_window.Po
#	$(AM_V_CXX)source='ui/gtk/plugin_manager/pmgr_window.cpp' object='ui/gtk/plugin_manager/gens-pmgr_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/gtk/plugin_manager/gens-pmgr_window.obj `if test -f 'ui/gtk/plugin_manager/pmgr_window.cpp'; then $(CYGPATH_W) 'ui/gtk/plugin_manager/pmgr_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/plugin_manager/pmgr_window.cpp'; fi`

ui/gtk/about/gens-about_window.o: ui/gtk/about/about_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/gtk/about/gens-about_window.o -MD -MP -MF ui/gtk/about/$(DEPDIR)/gens-about_window.Tpo -c -o ui/gtk/about/gens-about_window.o `test -f 'ui/gtk/about/about_window.cpp' || echo '$(srcdir)/'`ui/gtk/about/about_window.cpp
	$(AM_V_at)$(am__mv) ui/gtk/about/$(DEPDIR)/gens-about_window.Tpo ui/gtk/about/$(DEPDIR)/gens-about_window.Po
#	$(AM_V_CXX)source='ui/gtk/about/about_window.cpp' object='ui/gtk/about/gens-about_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/gtk/about/gens-about_window.o `test -f 'ui/gtk/about/about_window.cpp' || echo '$(srcdir)/'`ui/gtk/about/about_window.cpp

ui/gtk/about/gens-about_window.obj: ui/gtk/about/about_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/gtk/about/gens-about_window.obj -MD -MP -MF ui/gtk/about/$(DEPDIR)/gens-about_window.Tpo -c -o ui/gtk/about/gens-about_window.obj `if test -f 'ui/gtk/about/about_window.cpp'; then $(CYGPATH_W) 'ui/gtk/about/about_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/about/about_window.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/gtk/about/$(DEPDIR)/gens-about_window.Tpo ui/gtk/about/$(DEPDIR)/gens-about_window.Po
#	$(AM_V_CXX)source='ui/gtk/about/about_window.cpp' object='ui/gtk/about/gens-about_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/gtk/about/gens-about_window.obj `if test -f 'ui/gtk/about/about_window.cpp'; then $(CYGPATH_W) 'ui/gtk/about/about_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/about/about_window.cpp'; fi`

ui/gtk/opengl_resolution/gens-glres_window.o: ui/gtk/opengl_resolution/glres_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/gtk/opengl_resolution/gens-glres_window.o -MD -MP -MF ui/gtk/opengl_resolution/$(DEPDIR)/gens-glres_window.Tpo -c -o ui/gtk/opengl_resolution/gens-glres_window.o `test -f 'ui/gtk/opengl_resolution/glres_window.cpp' || echo '$(srcdir)/'`ui/gtk/opengl_resolution/glres_window.cpp
	$(AM_V_at)$(am__mv) ui/gtk/opengl_resolution/$(DEPDIR)/gens-glres_window.Tpo ui/gtk/opengl_resolution/$(DEPDIR)/gens-glres_window.Po
#	$(AM_V_CXX)source='ui/gtk/opengl_resolution/glres_window.cpp' object='ui/gtk/opengl_resolution/gens-glres_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/gtk/opengl_resolution/gens-glres_window.o `test -f 'ui/gtk/opengl_resolution/glres_window.cpp' || echo '$(srcdir)/'`ui/gtk/opengl_resolution/glres_window.cpp

ui/gtk/opengl_resolution/gens-glres_window.obj: ui/gtk/opengl_resolution/glres_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/gtk/opengl_resolution/gens-glres_window.obj -MD -MP -MF ui/gtk/opengl_resolution/$(DEPDIR)/gens-glres_window.Tpo -c -o ui/gtk/opengl_resolution/gens-glres_window.obj `if test -f 'ui/gtk/opengl_resolution/glres_window.cpp'; then $(CYGPATH_W) 'ui/gtk/opengl_resolution/glres_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/opengl_resolution/glres_window.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/gtk/opengl_resolution/$(DEPDIR)/gens-glres_window.Tpo ui/gtk/opengl_resolution/$(DEPDIR)/gens-glres_window.Po
#	$(AM_V_CXX)source='ui/gtk/opengl_resolution/glres_window.cpp' object='ui/gtk/opengl_resolution/gens-glres_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/gtk/opengl_resolution/gens-glres_window.obj `if test -f 'ui/gtk/opengl_resolution/glres_window.cpp'; then $(CYGPATH_W) 'ui/gtk/opengl_resolution/glres_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/opengl_resolution/glres_window.cpp'; fi`

ui/gtk/select_cdrom/gens-selcd_window.o: ui/gtk/select_cdrom/selcd_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/gtk/select_cdrom/gens-selcd_window.o -MD -MP -MF ui/gtk/select_cdrom/$(DEPDIR)/gens-selcd_window.Tpo -c -o ui/gtk/select_cdrom/gens-selcd_window.o `test -f 'ui/gtk/select_cdrom/selcd_window.cpp' || echo '$(srcdir)/'`ui/gtk/select_cdrom/selcd_window.cpp
	$(AM_V_at)$(am__mv) ui/gtk/select_cdrom/$(DEPDIR)/gens-selcd_window.Tpo ui/gtk/select_cdrom/$(DEPDIR)/gens-selcd_window.Po
#	$(AM_V_CXX)source='ui/gtk/select_cdrom/selcd_window.cpp' object='ui/gtk/select_cdrom/gens-selcd_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/gtk/select_cdrom/gens-selcd_window.o `test -f 'ui/gtk/select_cdrom/selcd_window.cpp' || echo '$(srcdir)/'`ui/gtk/select_cdrom/selcd_window.cpp

ui/gtk/select_cdrom/gens-selcd_window.obj: ui/gtk/select_cdrom/selcd_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/gtk/select_cdrom/gens-selcd_window.obj -MD -MP -MF ui/gtk/select_cdrom/$(DEPDIR)/gens-selcd_window.Tpo -c -o ui/gtk/select_cdrom/gens-selcd_window.obj `if test -f 'ui/gtk/select_cdrom/selcd_window.cpp'; then $(CYGPATH_W) 'ui/gtk/select_cdrom/selcd_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/select_cdrom/selcd_window.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/gtk/select_cdrom/$(DEPDIR)/gens-selcd_window.Tpo ui/gtk/select_cdrom/$(DEPDIR)/gens-selcd_window.Po
#	$(AM_V_CXX)source='ui/gtk/select_cdrom/selcd_window.cpp' object='ui/gtk/select_cdrom/gens-selcd_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/gtk/select_cdrom/gens-selcd_window.obj `if test -f 'ui/gtk/select_cdrom/selcd_window.cpp'; then $(CYGPATH_W) 'ui/gtk/select_cdrom/selcd_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/gtk/select_cdrom/selcd_window.cpp'; fi`

emulator/gens-g_main_win32.o: emulator/g_main_win32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT emulator/gens-g_main_win32.o -MD -MP -MF emulator/$(DEPDIR)/gens-g_main_win32.Tpo -c -o emulator/gens-g_main_win32.o `test -f 'emulator/g_main_win32.cpp' || echo '$(srcdir)/'`emulator/g_main_win32.cpp
	$(AM_V_at)$(am__mv) emulator/$(DEPDIR)/gens-g_main_win32.Tpo emulator/$(DEPDIR)/gens-g_main_win32.Po
#	$(AM_V_CXX)source='emulator/g_main_win32.cpp' object='emulator/gens-g_main_win32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o emulator/gens-g_main_win32.o `test -f 'emulator/g_main_win32.cpp' || echo '$(srcdir)/'`emulator/g_main_win32.cpp

emulator/gens-g_main_win32.obj: emulator/g_main_win32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT emulator/gens-g_main_win32.obj -MD -MP -MF emulator/$(DEPDIR)/gens-g_main_win32.Tpo -c -o emulator/gens-g_main_win32.obj `if test -f 'emulator/g_main_win32.cpp'; then $(CYGPATH_W) 'emulator/g_main_win32.cpp'; else $(CYGPATH_W) '$(srcdir)/emulator/g_main_win32.cpp'; fi`
	$(AM_V_at)$(am__mv) emulator/$(DEPDIR)/gens-g_main_win32.Tpo emulator/$(DEPDIR)/gens-g_main_win32.Po
#	$(AM_V_CXX)source='emulator/g_main_win32.cpp' object='emulator/gens-g_main_win32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o emulator/gens-g_main_win32.obj `if test -f 'emulator/g_main_win32.cpp'; then $(CYGPATH_W) 'emulator/g_main_win32.cpp'; else $(CYGPATH_W) '$(srcdir)/emulator/g_main_win32.cpp'; fi`

video/gens-vdraw_ddraw.o: video/vdraw_ddraw.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT video/gens-vdraw_ddraw.o -MD -MP -MF video/$(DEPDIR)/gens-vdraw_ddraw.Tpo -c -o video/gens-vdraw_ddraw.o `test -f 'video/vdraw_ddraw.cpp' || echo '$(srcdir)/'`video/vdraw_ddraw.cpp
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-vdraw_ddraw.Tpo video/$(DEPDIR)/gens-vdraw_ddraw.Po
#	$(AM_V_CXX)source='video/vdraw_ddraw.cpp' object='video/gens-vdraw_ddraw.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o video/gens-vdraw_ddraw.o `test -f 'video/vdraw_ddraw.cpp' || echo '$(srcdir)/'`video/vdraw_ddraw.cpp

video/gens-vdraw_ddraw.obj: video/vdraw_ddraw.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT video/gens-vdraw_ddraw.obj -MD -MP -MF video/$(DEPDIR)/gens-vdraw_ddraw.Tpo -c -o video/gens-vdraw_ddraw.obj `if test -f 'video/vdraw_ddraw.cpp'; then $(CYGPATH_W) 'video/vdraw_ddraw.cpp'; else $(CYGPATH_W) '$(srcdir)/video/vdraw_ddraw.cpp'; fi`
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-vdraw_ddraw.Tpo video/$(DEPDIR)/gens-vdraw_ddraw.Po
#	$(AM_V_CXX)source='video/vdraw_ddraw.cpp' object='video/gens-vdraw_ddraw.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o video/gens-vdraw_ddraw.obj `if test -f 'video/vdraw_ddraw.cpp'; then $(CYGPATH_W) 'video/vdraw_ddraw.cpp'; else $(CYGPATH_W) '$(srcdir)/video/vdraw_ddraw.cpp'; fi`

input/gens-input_dinput.o: input/input_dinput.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT input/gens-input_dinput.o -MD -MP -MF input/$(DEPDIR)/gens-input_dinput.Tpo -c -o input/gens-input_dinput.o `test -f 'input/input_dinput.cpp' || echo '$(srcdir)/'`input/input_dinput.cpp
	$(AM_V_at)$(am__mv) input/$(DEPDIR)/gens-input_dinput.Tpo input/$(DEPDIR)/gens-input_dinput.Po
#	$(AM_V_CXX)source='input/input_dinput.cpp' object='input/gens-input_dinput.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o input/gens-input_dinput.o `test -f 'input/input_dinput.cpp' || echo '$(srcdir)/'`input/input_dinput.cpp

input/gens-input_dinput.obj: input/input_dinput.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT input/gens-input_dinput.obj -MD -MP -MF input/$(DEPDIR)/gens-input_dinput.Tpo -c -o input/gens-input_dinput.obj `if test -f 'input/input_dinput.cpp'; then $(CYGPATH_W) 'input/input_dinput.cpp'; else $(CYGPATH_W) '$(srcdir)/input/input_dinput.cpp'; fi`
	$(AM_V_at)$(am__mv) input/$(DEPDIR)/gens-input_dinput.Tpo input/$(DEPDIR)/gens-input_dinput.Po
#	$(AM_V_CXX)source='input/input_dinput.cpp' object='input/gens-input_dinput.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o input/gens-input_dinput.obj `if test -f 'input/input_dinput.cpp'; then $(CYGPATH_W) 'input/input_dinput.cpp'; else $(CYGPATH_W) '$(srcdir)/input/input_dinput.cpp'; fi`

audio/gens-audio_dsound.o: audio/audio_dsound.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT audio/gens-audio_dsound.o -MD -MP -MF audio/$(DEPDIR)/gens-audio_dsound.Tpo -c -o audio/gens-audio_dsound.o `test -f 'audio/audio_dsound.cpp' || echo '$(srcdir)/'`audio/audio_dsound.cpp
	$(AM_V_at)$(am__mv) audio/$(DEPDIR)/gens-audio_dsound.Tpo audio/$(DEPDIR)/gens-audio_dsound.Po
#	$(AM_V_CXX)source='audio/audio_dsound.cpp' object='audio/gens-audio_dsound.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o audio/gens-audio_dsound.o `test -f 'audio/audio_dsound.cpp' || echo '$(srcdir)/'`audio/audio_dsound.cpp

audio/gens-audio_dsound.obj: audio/audio_dsound.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT audio/gens-audio_dsound.obj -MD -MP -MF audio/$(DEPDIR)/gens-audio_dsound.Tpo -c -o audio/gens-audio_dsound.obj `if test -f 'audio/audio_dsound.cpp'; then $(CYGPATH_W) 'audio/audio_dsound.cpp'; else $(CYGPATH_W) '$(srcdir)/audio/audio_dsound.cpp'; fi`
	$(AM_V_at)$(am__mv) audio/$(DEPDIR)/gens-audio_dsound.Tpo audio/$(DEPDIR)/gens-audio_dsound.Po
#	$(AM_V_CXX)source='audio/audio_dsound.cpp' object='audio/gens-audio_dsound.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o audio/gens-audio_dsound.obj `if test -f 'audio/audio_dsound.cpp'; then $(CYGPATH_W) 'audio/audio_dsound.cpp'; else $(CYGPATH_W) '$(srcdir)/audio/audio_dsound.cpp'; fi`

charset/gens-cp1252.o: charset/cp1252.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT charset/gens-cp1252.o -MD -MP -MF charset/$(DEPDIR)/gens-cp1252.Tpo -c -o charset/gens-cp1252.o `test -f 'charset/cp1252.cpp' || echo '$(srcdir)/'`charset/cp1252.cpp
	$(AM_V_at)$(am__mv) charset/$(DEPDIR)/gens-cp1252.Tpo charset/$(DEPDIR)/gens-cp1252.Po
#	$(AM_V_CXX)source='charset/cp1252.cpp' object='charset/gens-cp1252.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o charset/gens-cp1252.o `test -f 'charset/cp1252.cpp' || echo '$(srcdir)/'`charset/cp1252.cpp

charset/gens-cp1252.obj: charset/cp1252.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT charset/gens-cp1252.obj -MD -MP -MF charset/$(DEPDIR)/gens-cp1252.Tpo -c -o charset/gens-cp1252.obj `if test -f 'charset/cp1252.cpp'; then $(CYGPATH_W) 'charset/cp1252.cpp'; else $(CYGPATH_W) '$(srcdir)/charset/cp1252.cpp'; fi`
	$(AM_V_at)$(am__mv) charset/$(DEPDIR)/gens-cp1252.Tpo charset/$(DEPDIR)/gens-cp1252.Po
#	$(AM_V_CXX)source='charset/cp1252.cpp' object='charset/gens-cp1252.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o charset/gens-cp1252.obj `if test -f 'charset/cp1252.cpp'; then $(CYGPATH_W) 'charset/cp1252.cpp'; else $(CYGPATH_W) '$(srcdir)/charset/cp1252.cpp'; fi`

ui/win32/gens-gens_ui_win32.o: ui/win32/gens_ui_win32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/win32/gens-gens_ui_win32.o -MD -MP -MF ui/win32/$(DEPDIR)/gens-gens_ui_win32.Tpo -c -o ui/win32/gens-gens_ui_win32.o `test -f 'ui/win32/gens_ui_win32.cpp' || echo '$(srcdir)/'`ui/win32/gens_ui_win32.cpp
	$(AM_V_at)$(am__mv) ui/win32/$(DEPDIR)/gens-gens_ui_win32.Tpo ui/win32/$(DEPDIR)/gens-gens_ui_win32.Po
#	$(AM_V_CXX)source='ui/win32/gens_ui_win32.cpp' object='ui/win32/gens-gens_ui_win32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/win32/gens-gens_ui_win32.o `test -f 'ui/win32/gens_ui_win32.cpp' || echo '$(srcdir)/'`ui/win32/gens_ui_win32.cpp

ui/win32/gens-gens_ui_win32.obj: ui/win32/gens_ui_win32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/win32/gens-gens_ui_win32.obj -MD -MP -MF ui/win32/$(DEPDIR)/gens-gens_ui_win32.Tpo -c -o ui/win32/gens-gens_ui_win32.obj `if test -f 'ui/win32/gens_ui_win32.cpp'; then $(CYGPATH_W) 'ui/win32/gens_ui_win32.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/win32/gens_ui_win32.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/win32/$(DEPDIR)/gens-gens_ui_win32.Tpo ui/win32/$(DEPDIR)/gens-gens_ui_win32.Po
#	$(AM_V_CXX)source='ui/win32/gens_ui_win32.cpp' object='ui/win32/gens-gens_ui_win32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/win32/gens-gens_ui_win32.obj `if test -f 'ui/win32/gens_ui_win32.cpp'; then $(CYGPATH_W) 'ui/win32/gens_ui_win32.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/win32/gens_ui_win32.cpp'; fi`

ui/win32/gens/gens-gens_window_callbacks.o: ui/win32/gens/gens_window_callbacks.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/win32/gens/gens-gens_window_callbacks.o -MD -MP -MF ui/win32/gens/$(DEPDIR)/gens-gens_window_callbacks.Tpo -c -o ui/win32/gens/gens-gens_window_callbacks.o `test -f 'ui/win32/gens/gens_window_callbacks.cpp' || echo '$(srcdir)/'`ui/win32/gens/gens_window_callbacks.cpp
	$(AM_V_at)$(am__mv) ui/win32/gens/$(DEPDIR)/gens-gens_window_callbacks.Tpo ui/win32/gens/$(DEPDIR)/gens-gens_window_callbacks.Po
#	$(AM_V_CXX)source='ui/win32/gens/gens_window_callbacks.cpp' object='ui/win32/gens/gens-gens_window_callbacks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/win32/gens/gens-gens_window_callbacks.o `test -f 'ui/win32/gens/gens_window_callbacks.cpp' || echo '$(srcdir)/'`ui/win32/gens/gens_window_callbacks.cpp

ui/win32/gens/gens-gens_window_callbacks.obj: ui/win32/gens/gens_window_callbacks.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/win32/gens/gens-gens_window_callbacks.obj -MD -MP -MF ui/win32/gens/$(DEPDIR)/gens-gens_window_callbacks.Tpo -c -o ui/win32/gens/gens-gens_window_callbacks.obj `if test -f 'ui/win32/gens/gens_window_callbacks.cpp'; then $(CYGPATH_W) 'ui/win32/gens/gens_window_callbacks.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/win32/gens/gens_window_callbacks.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/win32/gens/$(DEPDIR)/gens-gens_window_callbacks.Tpo ui/win32/gens/$(DEPDIR)/gens-gens_window_callbacks.Po
#	$(AM_V_CXX)source='ui/win32/gens/gens_window_callbacks.cpp' object='ui/win32/gens/gens-gens_window_callbacks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/win32/gens/gens-gens_window_callbacks.obj `if test -f 'ui/win32/gens/gens_window_callbacks.cpp'; then $(CYGPATH_W) 'ui/win32/gens/gens_window_callbacks.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/win32/gens/gens_window_callbacks.cpp'; fi`

ui/win32/gens/gens-gens_window_sync.o: ui/win32/gens/gens_window_sync.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/win32/gens/gens-gens_window_sync.o -MD -MP -MF ui/win32/gens/$(DEPDIR)/gens-gens_window_sync.Tpo -c -o ui/win32/gens/gens-gens_window_sync.o `test -f 'ui/win32/gens/gens_window_sync.cpp' || echo '$(srcdir)/'`ui/win32/gens/gens_window_sync.cpp
	$(AM_V_at)$(am__mv) ui/win32/gens/$(DEPDIR)/gens-gens_window_sync.Tpo ui/win32/gens/$(DEPDIR)/gens-gens_window_sync.Po
#	$(AM_V_CXX)source='ui/win32/gens/gens_window_sync.cpp' object='ui/win32/gens/gens-gens_window_sync.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/win32/gens/gens-gens_window_sync.o `test -f 'ui/win32/gens/gens_window_sync.cpp' || echo '$(srcdir)/'`ui/win32/gens/gens_window_sync.cpp

ui/win32/gens/gens-gens_window_sync.obj: ui/win32/gens/gens_window_sync.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/win32/gens/gens-gens_window_sync.obj -MD -MP -MF ui/win32/gens/$(DEPDIR)/gens-gens_window_sync.Tpo -c -o ui/win32/gens/gens-gens_window_sync.obj `if test -f 'ui/win32/gens/gens_window_sync.cpp'; then $(CYGPATH_W) 'ui/win32/gens/gens_window_sync.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/win32/gens/gens_window_sync.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/win32/gens/$(DEPDIR)/gens-gens_window_sync.Tpo ui/win32/gens/$(DEPDIR)/gens-gens_window_sync.Po
#	$(AM_V_CXX)source='ui/win32/gens/gens_window_sync.cpp' object='ui/win32/gens/gens-gens_window_sync.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/win32/gens/gens-gens_window_sync.obj `if test -f 'ui/win32/gens/gens_window_sync.cpp'; then $(CYGPATH_W) 'ui/win32/gens/gens_window_sync.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/win32/gens/gens_window_sync.cpp'; fi`

ui/win32/gens/gens-gens_menu.o: ui/win32/gens/gens_menu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/win32/gens/gens-gens_menu.o -MD -MP -MF ui/win32/gens/$(DEPDIR)/gens-gens_menu.Tpo -c -o ui/win32/gens/gens-gens_menu.o `test -f 'ui/win32/gens/gens_menu.cpp' || echo '$(srcdir)/'`ui/win32/gens/gens_menu.cpp
	$(AM_V_at)$(am__mv) ui/win32/gens/$(DEPDIR)/gens-gens_menu.Tpo ui/win32/gens/$(DEPDIR)/gens-gens_menu.Po
#	$(AM_V_CXX)source='ui/win32/gens/gens_menu.cpp' object='ui/win32/gens/gens-gens_menu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/win32/gens/gens-gens_menu.o `test -f 'ui/win32/gens/gens_menu.cpp' || echo '$(srcdir)/'`ui/win32/gens/gens_menu.cpp

ui/win32/gens/gens-gens_menu.obj: ui/win32/gens/gens_menu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/win32/gens/gens-gens_menu.obj -MD -MP -MF ui/win32/gens/$(DEPDIR)/gens-gens_menu.Tpo -c -o ui/win32/gens/gens-gens_menu.obj `if test -f 'ui/win32/gens/gens_menu.cpp'; then $(CYGPATH_W) 'ui/win32/gens/gens_menu.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/win32/gens/gens_menu.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/win32/gens/$(DEPDIR)/gens-gens_menu.Tpo ui/win32/gens/$(DEPDIR)/gens-gens_menu.Po
#	$(AM_V_CXX)source='ui/win32/gens/gens_menu.cpp' object='ui/win32/gens/gens-gens_menu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/win32/gens/gens-gens_menu.obj `if test -f 'ui/win32/gens/gens_menu.cpp'; then $(CYGPATH_W) 'ui/win32/gens/gens_menu.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/win32/gens/gens_menu.cpp'; fi`

ui/win32/bios_misc_files/gens-bmf_window.o: ui/win32/bios_misc_files/bmf_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/win32/bios_misc_files/gens-bmf_window.o -MD -MP -MF ui/win32/bios_misc_files/$(DEPDIR)/gens-bmf_window.Tpo -c -o ui/win32/bios_misc_files/gens-bmf_window.o `test -f 'ui/win32/bios_misc_files/bmf_window.cpp' || echo '$(srcdir)/'`ui/win32/bios_misc_files/bmf_window.cpp
	$(AM_V_at)$(am__mv) ui/win32/bios_misc_files/$(DEPDIR)/gens-bmf_window.Tpo ui/win32/bios_misc_files/$(DEPDIR)/gens-bmf_window.Po
#	$(AM_V_CXX)source='ui/win32/bios_misc_files/bmf_window.cpp' object='ui/win32/bios_misc_files/gens-bmf_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/win32/bios_misc_files/gens-bmf_window.o `test -f 'ui/win32/bios_misc_files/bmf_window.cpp' || echo '$(srcdir)/'`ui/win32/bios_misc_files/bmf_window.cpp

ui/win32/bios_misc_files/gens-bmf_window.obj: ui/win32/bios_misc_files/bmf_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/win32/bios_misc_files/gens-bmf_window.obj -MD -MP -MF ui/win32/bios_misc_files/$(DEPDIR)/gens-bmf_window.Tpo -c -o ui/win32/bios_misc_files/gens-bmf_window.obj `if test -f 'ui/win32/bios_misc_files/bmf_window.cpp'; then $(CYGPATH_W) 'ui/win32/bios_misc_files/bmf_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/win32/bios_misc_files/bmf_window.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/win32/bios_misc_files/$(DEPDIR)/gens-bmf_window.Tpo ui/win32/bios_misc_files/$(DEPDIR)/gens-bmf_window.Po
#	$(AM_V_CXX)source='ui/win32/bios_misc_files/bmf_window.cpp' object='ui/win32/bios_misc_files/gens-bmf_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/win32/bios_misc_files/gens-bmf_window.obj `if test -f 'ui/win32/bios_misc_files/bmf_window.cpp'; then $(CYGPATH_W) 'ui/win32/bios_misc_files/bmf_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/win32/bios_misc_files/bmf_window.cpp'; fi`

ui/win32/directory_config/gens-dir_window.o: ui/win32/directory_config/dir_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/win32/directory_config/gens-dir_window.o -MD -MP -MF ui/win32/directory_config/$(DEPDIR)/gens-dir_window.Tpo -c -o ui/win32/directory_config/gens-dir_window.o `test -f 'ui/win32/directory_config/dir_window.cpp' || echo '$(srcdir)/'`ui/win32/directory_config/dir_window.cpp
	$(AM_V_at)$(am__mv) ui/win32/directory_config/$(DEPDIR)/gens-dir_window.Tpo ui/win32/directory_config/$(DEPDIR)/gens-dir_window.Po
#	$(AM_V_CXX)source='ui/win32/directory_config/dir_window.cpp' object='ui/win32/directory_config/gens-dir_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/win32/directory_config/gens-dir_window.o `test -f 'ui/win32/directory_config/dir_window.cpp' || echo '$(srcdir)/'`ui/win32/directory_config/dir_window.cpp

ui/win32/directory_config/gens-dir_window.obj: ui/win32/directory_config/dir_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/win32/directory_config/gens-dir_window.obj -MD -MP -MF ui/win32/directory_config/$(DEPDIR)/gens-dir_window.Tpo -c -o ui/win32/directory_config/gens-dir_window.obj `if test -f 'ui/win32/directory_config/dir_window.cpp'; then $(CYGPATH_W) 'ui/win32/directory_config/dir_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/win32/directory_config/dir_window.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/win32/directory_config/$(DEPDIR)/gens-dir_window.Tpo ui/win32/directory_config/$(DEPDIR)/gens-dir_window.Po
#	$(AM_V_CXX)source='ui/win32/directory_config/dir_window.cpp' object='ui/win32/directory_config/gens-dir_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/win32/directory_config/gens-dir_window.obj `if test -f 'ui/win32/directory_config/dir_window.cpp'; then $(CYGPATH_W) 'ui/win32/directory_config/dir_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/win32/directory_config/dir_window.cpp'; fi`

ui/win32/general_options/gens-genopt_window.o: ui/win32/general_options/genopt_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/win32/general_options/gens-genopt_window.o -MD -MP -MF ui/win32/general_options/$(DEPDIR)/gens-genopt_window.Tpo -c -o ui/win32/general_options/gens-genopt_window.o `test -f 'ui/win32/general_options/genopt_window.cpp' || echo '$(srcdir)/'`ui/win32/general_options/genopt_window.cpp
	$(AM_V_at)$(am__mv) ui/win32/general_options/$(DEPDIR)/gens-genopt_window.Tpo ui/win32/general_options/$(DEPDIR)/gens-genopt_window.Po
#	$(AM_V_CXX)source='ui/win32/general_options/genopt_window.cpp' object='ui/win32/general_options/gens-genopt_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/win32/general_options/gens-genopt_window.o `test -f 'ui/win32/general_options/genopt_window.cpp' || echo '$(srcdir)/'`ui/win32/general_options/genopt_window.cpp

ui/win32/general_options/gens-genopt_window.obj: ui/win32/general_options/genopt_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/win32/general_options/gens-genopt_window.obj -MD -MP -MF ui/win32/general_options/$(DEPDIR)/gens-genopt_window.Tpo -c -o ui/win32/general_options/gens-genopt_window.obj `if test -f 'ui/win32/general_options/genopt_window.cpp'; then $(CYGPATH_W) 'ui/win32/general_options/genopt_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/win32/general_options/genopt_window.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/win32/general_options/$(DEPDIR)/gens-genopt_window.Tpo ui/win32/general_options/$(DEPDIR)/gens-genopt_window.Po
#	$(AM_V_CXX)source='ui/win32/general_options/genopt_window.cpp' object='ui/win32/general_options/gens-genopt_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/win32/general_options/gens-genopt_window.obj `if test -f 'ui/win32/general_options/genopt_window.cpp'; then $(CYGPATH_W) 'ui/win32/general_options/genopt_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/win32/general_options/genopt_window.cpp'; fi`

ui/win32/plugin_manager/gens-pmgr_window.o: ui/win32/plugin_manager/pmgr_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/win32/plugin_manager/gens-pmgr_window.o -MD -MP -MF ui/win32/plugin_manager/$(DEPDIR)/gens-pmgr_window.Tpo -c -o ui/win32/plugin_manager/gens-pmgr_window.o `test -f 'ui/win32/plugin_manager/pmgr_window.cpp' || echo '$(srcdir)/'`ui/win32/plugin_manager/pmgr_window.cpp
	$(AM_V_at)$(am__mv) ui/win32/plugin_manager/$(DEPDIR)/gens-pmgr_window.Tpo ui/win32/plugin_manager/$(DEPDIR)/gens-pmgr_window.Po
#	$(AM_V_CXX)source='ui/win32/plugin_manager/pmgr_window.cpp' object='ui/win32/plugin_manager/gens-pmgr_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/win32/plugin_manager/gens-pmgr_window.o `test -f 'ui/win32/plugin_manager/pmgr_window.cpp' || echo '$(srcdir)/'`ui/win32/plugin_manager/pmgr_window.cpp

ui/win32/plugin_manager/gens-pmgr_window.obj: ui/win32/plugin_manager/pmgr_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/win32/plugin_manager/gens-pmgr_window.obj -MD -MP -MF ui/win32/plugin_manager/$(DEPDIR)/gens-pmgr_window.Tpo -c -o ui/win32/plugin_manager/gens-pmgr_window.obj `if test -f 'ui/win32/plugin_manager/pmgr_window.cpp'; then $(CYGPATH_W) 'ui/win32/plugin_manager/pmgr_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/win32/plugin_manager/pmgr_window.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/win32/plugin_manager/$(DEPDIR)/gens-pmgr_window.Tpo ui/win32/plugin_manager/$(DEPDIR)/gens-pmgr_window.Po
#	$(AM_V_CXX)source='ui/win32/plugin_manager/pmgr_window.cpp' object='ui/win32/plugin_manager/gens-pmgr_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/win32/plugin_manager/gens-pmgr_window.obj `if test -f 'ui/win32/plugin_manager/pmgr_window.cpp'; then $(CYGPATH_W) 'ui/win32/plugin_manager/pmgr_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/win32/plugin_manager/pmgr_window.cpp'; fi`

ui/win32/about/gens-about_window.o: ui/win32/about/about_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/win32/about/gens-about_window.o -MD -MP -MF ui/win32/about/$(DEPDIR)/gens-about_window.Tpo -c -o ui/win32/about/gens-about_window.o `test -f 'ui/win32/about/about_window.cpp' || echo '$(srcdir)/'`ui/win32/about/about_window.cpp
	$(AM_V_at)$(am__mv) ui/win32/about/$(DEPDIR)/gens-about_window.Tpo ui/win32/about/$(DEPDIR)/gens-about_window.Po
#	$(AM_V_CXX)source='ui/win32/about/about_window.cpp' object='ui/win32/about/gens-about_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/win32/about/gens-about_window.o `test -f 'ui/win32/about/about_window.cpp' || echo '$(srcdir)/'`ui/win32/about/about_window.cpp

ui/win32/about/gens-about_window.obj: ui/win32/about/about_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/win32/about/gens-about_window.obj -MD -MP -MF ui/win32/about/$(DEPDIR)/gens-about_window.Tpo -c -o ui/win32/about/gens-about_window.obj `if test -f 'ui/win32/about/about_window.cpp'; then $(CYGPATH_W) 'ui/win32/about/about_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/win32/about/about_window.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/win32/about/$(DEPDIR)/gens-about_window.Tpo ui/win32/about/$(DEPDIR)/gens-about_window.Po
#	$(AM_V_CXX)source='ui/win32/about/about_window.cpp' object='ui/win32/about/gens-about_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/win32/about/gens-about_window.obj `if test -f 'ui/win32/about/about_window.cpp'; then $(CYGPATH_W) 'ui/win32/about/about_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/win32/about/about_window.cpp'; fi`

segacd/gens-cd_aspi_win32.o: segacd/cd_aspi_win32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT segacd/gens-cd_aspi_win32.o -MD -MP -MF segacd/$(DEPDIR)/gens-cd_aspi_win32.Tpo -c -o segacd/gens-cd_aspi_win32.o `test -f 'segacd/cd_aspi_win32.cpp' || echo '$(srcdir)/'`segacd/cd_aspi_win32.cpp
	$(AM_V_at)$(am__mv) segacd/$(DEPDIR)/gens-cd_aspi_win32.Tpo segacd/$(DEPDIR)/gens-cd_aspi_win32.Po
#	$(AM_V_CXX)source='segacd/cd_aspi_win32.cpp' object='segacd/gens-cd_aspi_win32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o segacd/gens-cd_aspi_win32.o `test -f 'segacd/cd_aspi_win32.cpp' || echo '$(srcdir)/'`segacd/cd_aspi_win32.cpp

segacd/gens-cd_aspi_win32.obj: segacd/cd_aspi_win32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT segacd/gens-cd_aspi_win32.obj -MD -MP -MF segacd/$(DEPDIR)/gens-cd_aspi_win32.Tpo -c -o segacd/gens-cd_aspi_win32.obj `if test -f 'segacd/cd_aspi_win32.cpp'; then $(CYGPATH_W) 'segacd/cd_aspi_win32.cpp'; else $(CYGPATH_W) '$(srcdir)/segacd/cd_aspi_win32.cpp'; fi`
	$(AM_V_at)$(am__mv) segacd/$(DEPDIR)/gens-cd_aspi_win32.Tpo segacd/$(DEPDIR)/gens-cd_aspi_win32.Po
#	$(AM_V_CXX)source='segacd/cd_aspi_win32.cpp' object='segacd/gens-cd_aspi_win32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o segacd/gens-cd_aspi_win32.obj `if test -f 'segacd/cd_aspi_win32.cpp'; then $(CYGPATH_W) 'segacd/cd_aspi_win32.cpp'; else $(CYGPATH_W) '$(srcdir)/segacd/cd_aspi_win32.cpp'; fi`

ui/win32/select_cdrom/gens-selcd_window.o: ui/win32/select_cdrom/selcd_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/win32/select_cdrom/gens-selcd_window.o -MD -MP -MF ui/win32/select_cdrom/$(DEPDIR)/gens-selcd_window.Tpo -c -o ui/win32/select_cdrom/gens-selcd_window.o `test -f 'ui/win32/select_cdrom/selcd_window.cpp' || echo '$(srcdir)/'`ui/win32/select_cdrom/selcd_window.cpp
	$(AM_V_at)$(am__mv) ui/win32/select_cdrom/$(DEPDIR)/gens-selcd_window.Tpo ui/win32/select_cdrom/$(DEPDIR)/gens-selcd_window.Po
#	$(AM_V_CXX)source='ui/win32/select_cdrom/selcd_window.cpp' object='ui/win32/select_cdrom/gens-selcd_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/win32/select_cdrom/gens-selcd_window.o `test -f 'ui/win32/select_cdrom/selcd_window.cpp' || echo '$(srcdir)/'`ui/win32/select_cdrom/selcd_window.cpp

ui/win32/select_cdrom/gens-selcd_window.obj: ui/win32/select_cdrom/selcd_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/win32/select_cdrom/gens-selcd_window.obj -MD -MP -MF ui/win32/select_cdrom/$(DEPDIR)/gens-selcd_window.Tpo -c -o ui/win32/select_cdrom/gens-selcd_window.obj `if test -f 'ui/win32/select_cdrom/selcd_window.cpp'; then $(CYGPATH_W) 'ui/win32/select_cdrom/selcd_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/win32/select_cdrom/selcd_window.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/win32/select_cdrom/$(DEPDIR)/gens-selcd_window.Tpo ui/win32/select_cdrom/$(DEPDIR)/gens-selcd_window.Po
#	$(AM_V_CXX)source='ui/win32/select_cdrom/selcd_window.cpp' object='ui/win32/select_cdrom/gens-selcd_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/win32/select_cdrom/gens-selcd_window.obj `if test -f 'ui/win32/select_cdrom/selcd_window.cpp'; then $(CYGPATH_W) 'ui/win32/select_cdrom/selcd_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/win32/select_cdrom/selcd_window.cpp'; fi`

emulator/gens-g_main_haiku.o: emulator/g_main_haiku.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT emulator/gens-g_main_haiku.o -MD -MP -MF emulator/$(DEPDIR)/gens-g_main_haiku.Tpo -c -o emulator/gens-g_main_haiku.o `test -f 'emulator/g_main_haiku.cpp' || echo '$(srcdir)/'`emulator/g_main_haiku.cpp
	$(AM_V_at)$(am__mv) emulator/$(DEPDIR)/gens-g_main_haiku.Tpo emulator/$(DEPDIR)/gens-g_main_haiku.Po
#	$(AM_V_CXX)source='emulator/g_main_haiku.cpp' object='emulator/gens-g_main_haiku.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o emulator/gens-g_main_haiku.o `test -f 'emulator/g_main_haiku.cpp' || echo '$(srcdir)/'`emulator/g_main_haiku.cpp

emulator/gens-g_main_haiku.obj: emulator/g_main_haiku.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT emulator/gens-g_main_haiku.obj -MD -MP -MF emulator/$(DEPDIR)/gens-g_main_haiku.Tpo -c -o emulator/gens-g_main_haiku.obj `if test -f 'emulator/g_main_haiku.cpp'; then $(CYGPATH_W) 'emulator/g_main_haiku.cpp'; else $(CYGPATH_W) '$(srcdir)/emulator/g_main_haiku.cpp'; fi`
	$(AM_V_at)$(am__mv) emulator/$(DEPDIR)/gens-g_main_haiku.Tpo emulator/$(DEPDIR)/gens-g_main_haiku.Po
#	$(AM_V_CXX)source='emulator/g_main_haiku.cpp' object='emulator/gens-g_main_haiku.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o emulator/gens-g_main_haiku.obj `if test -f 'emulator/g_main_haiku.cpp'; then $(CYGPATH_W) 'emulator/g_main_haiku.cpp'; else $(CYGPATH_W) '$(srcdir)/emulator/g_main_haiku.cpp'; fi`

input/gens-input_haiku.o: input/input_haiku.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT input/gens-input_haiku.o -MD -MP -MF input/$(DEPDIR)/gens-input_haiku.Tpo -c -o input/gens-input_haiku.o `test -f 'input/input_haiku.cpp' || echo '$(srcdir)/'`input/input_haiku.cpp
	$(AM_V_at)$(am__mv) input/$(DEPDIR)/gens-input_haiku.Tpo input/$(DEPDIR)/gens-input_haiku.Po
#	$(AM_V_CXX)source='input/input_haiku.cpp' object='input/gens-input_haiku.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o input/gens-input_haiku.o `test -f 'input/input_haiku.cpp' || echo '$(srcdir)/'`input/input_haiku.cpp

input/gens-input_haiku.obj: input/input_haiku.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT input/gens-input_haiku.obj -MD -MP -MF input/$(DEPDIR)/gens-input_haiku.Tpo -c -o input/gens-input_haiku.obj `if test -f 'input/input_haiku.cpp'; then $(CYGPATH_W) 'input/input_haiku.cpp'; else $(CYGPATH_W) '$(srcdir)/input/input_haiku.cpp'; fi`
	$(AM_V_at)$(am__mv) input/$(DEPDIR)/gens-input_haiku.Tpo input/$(DEPDIR)/gens-input_haiku.Po
#	$(AM_V_CXX)source='input/input_haiku.cpp' object='input/gens-input_haiku.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o input/gens-input_haiku.obj `if test -f 'input/input_haiku.cpp'; then $(CYGPATH_W) 'input/input_haiku.cpp'; else $(CYGPATH_W) '$(srcdir)/input/input_haiku.cpp'; fi`

video/gens-vdraw_haiku.o: video/vdraw_haiku.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT video/gens-vdraw_haiku.o -MD -MP -MF video/$(DEPDIR)/gens-vdraw_haiku.Tpo -c -o video/gens-vdraw_haiku.o `test -f 'video/vdraw_haiku.cpp' || echo '$(srcdir)/'`video/vdraw_haiku.cpp
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-vdraw_haiku.Tpo video/$(DEPDIR)/gens-vdraw_haiku.Po
#	$(AM_V_CXX)source='video/vdraw_haiku.cpp' object='video/gens-vdraw_haiku.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o video/gens-vdraw_haiku.o `test -f 'video/vdraw_haiku.cpp' || echo '$(srcdir)/'`video/vdraw_haiku.cpp

video/gens-vdraw_haiku.obj: video/vdraw_haiku.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT video/gens-vdraw_haiku.obj -MD -MP -MF video/$(DEPDIR)/gens-vdraw_haiku.Tpo -c -o video/gens-vdraw_haiku.obj `if test -f 'video/vdraw_haiku.cpp'; then $(CYGPATH_W) 'video/vdraw_haiku.cpp'; else $(CYGPATH_W) '$(srcdir)/video/vdraw_haiku.cpp'; fi`
	$(AM_V_at)$(am__mv) video/$(DEPDIR)/gens-vdraw_haiku.Tpo video/$(DEPDIR)/gens-vdraw_haiku.Po
#	$(AM_V_CXX)source='video/vdraw_haiku.cpp' object='video/gens-vdraw_haiku.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o video/gens-vdraw_haiku.obj `if test -f 'video/vdraw_haiku.cpp'; then $(CYGPATH_W) 'video/vdraw_haiku.cpp'; else $(CYGPATH_W) '$(srcdir)/video/vdraw_haiku.cpp'; fi`

ui/haiku/gens-gens_ui_haiku.o: ui/haiku/gens_ui_haiku.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/haiku/gens-gens_ui_haiku.o -MD -MP -MF ui/haiku/$(DEPDIR)/gens-gens_ui_haiku.Tpo -c -o ui/haiku/gens-gens_ui_haiku.o `test -f 'ui/haiku/gens_ui_haiku.cpp' || echo '$(srcdir)/'`ui/haiku/gens_ui_haiku.cpp
	$(AM_V_at)$(am__mv) ui/haiku/$(DEPDIR)/gens-gens_ui_haiku.Tpo ui/haiku/$(DEPDIR)/gens-gens_ui_haiku.Po
#	$(AM_V_CXX)source='ui/haiku/gens_ui_haiku.cpp' object='ui/haiku/gens-gens_ui_haiku.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/haiku/gens-gens_ui_haiku.o `test -f 'ui/haiku/gens_ui_haiku.cpp' || echo '$(srcdir)/'`ui/haiku/gens_ui_haiku.cpp

ui/haiku/gens-gens_ui_haiku.obj: ui/haiku/gens_ui_haiku.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/haiku/gens-gens_ui_haiku.obj -MD -MP -MF ui/haiku/$(DEPDIR)/gens-gens_ui_haiku.Tpo -c -o ui/haiku/gens-gens_ui_haiku.obj `if test -f 'ui/haiku/gens_ui_haiku.cpp'; then $(CYGPATH_W) 'ui/haiku/gens_ui_haiku.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/haiku/gens_ui_haiku.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/haiku/$(DEPDIR)/gens-gens_ui_haiku.Tpo ui/haiku/$(DEPDIR)/gens-gens_ui_haiku.Po
#	$(AM_V_CXX)source='ui/haiku/gens_ui_haiku.cpp' object='ui/haiku/gens-gens_ui_haiku.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/haiku/gens-gens_ui_haiku.obj `if test -f 'ui/haiku/gens_ui_haiku.cpp'; then $(CYGPATH_W) 'ui/haiku/gens_ui_haiku.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/haiku/gens_ui_haiku.cpp'; fi`

ui/haiku/gens/gens-gens_app.o: ui/haiku/gens/gens_app.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/haiku/gens/gens-gens_app.o -MD -MP -MF ui/haiku/gens/$(DEPDIR)/gens-gens_app.Tpo -c -o ui/haiku/gens/gens-gens_app.o `test -f 'ui/haiku/gens/gens_app.cpp' || echo '$(srcdir)/'`ui/haiku/gens/gens_app.cpp
	$(AM_V_at)$(am__mv) ui/haiku/gens/$(DEPDIR)/gens-gens_app.Tpo ui/haiku/gens/$(DEPDIR)/gens-gens_app.Po
#	$(AM_V_CXX)source='ui/haiku/gens/gens_app.cpp' object='ui/haiku/gens/gens-gens_app.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/haiku/gens/gens-gens_app.o `test -f 'ui/haiku/gens/gens_app.cpp' || echo '$(srcdir)/'`ui/haiku/gens/gens_app.cpp

ui/haiku/gens/gens-gens_app.obj: ui/haiku/gens/gens_app.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/haiku/gens/gens-gens_app.obj -MD -MP -MF ui/haiku/gens/$(DEPDIR)/gens-gens_app.Tpo -c -o ui/haiku/gens/gens-gens_app.obj `if test -f 'ui/haiku/gens/gens_app.cpp'; then $(CYGPATH_W) 'ui/haiku/gens/gens_app.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/haiku/gens/gens_app.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/haiku/gens/$(DEPDIR)/gens-gens_app.Tpo ui/haiku/gens/$(DEPDIR)/gens-gens_app.Po
#	$(AM_V_CXX)source='ui/haiku/gens/gens_app.cpp' object='ui/haiku/gens/gens-gens_app.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/haiku/gens/gens-gens_app.obj `if test -f 'ui/haiku/gens/gens_app.cpp'; then $(CYGPATH_W) 'ui/haiku/gens/gens_app.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/haiku/gens/gens_app.cpp'; fi`

ui/haiku/gens/gens-gens_window.o: ui/haiku/gens/gens_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/haiku/gens/gens-gens_window.o -MD -MP -MF ui/haiku/gens/$(DEPDIR)/gens-gens_window.Tpo -c -o ui/haiku/gens/gens-gens_window.o `test -f 'ui/haiku/gens/gens_window.cpp' || echo '$(srcdir)/'`ui/haiku/gens/gens_window.cpp
	$(AM_V_at)$(am__mv) ui/haiku/gens/$(DEPDIR)/gens-gens_window.Tpo ui/haiku/gens/$(DEPDIR)/gens-gens_window.Po
#	$(AM_V_CXX)source='ui/haiku/gens/gens_window.cpp' object='ui/haiku/gens/gens-gens_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/haiku/gens/gens-gens_window.o `test -f 'ui/haiku/gens/gens_window.cpp' || echo '$(srcdir)/'`ui/haiku/gens/gens_window.cpp

ui/haiku/gens/gens-gens_window.obj: ui/haiku/gens/gens_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/haiku/gens/gens-gens_window.obj -MD -MP -MF ui/haiku/gens/$(DEPDIR)/gens-gens_window.Tpo -c -o ui/haiku/gens/gens-gens_window.obj `if test -f 'ui/haiku/gens/gens_window.cpp'; then $(CYGPATH_W) 'ui/haiku/gens/gens_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/haiku/gens/gens_window.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/haiku/gens/$(DEPDIR)/gens-gens_window.Tpo ui/haiku/gens/$(DEPDIR)/gens-gens_window.Po
#	$(AM_V_CXX)source='ui/haiku/gens/gens_window.cpp' object='ui/haiku/gens/gens-gens_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/haiku/gens/gens-gens_window.obj `if test -f 'ui/haiku/gens/gens_window.cpp'; then $(CYGPATH_W) 'ui/haiku/gens/gens_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/haiku/gens/gens_window.cpp'; fi`

ui/haiku/gens/gens-gens_window_callbacks.o: ui/haiku/gens/gens_window_callbacks.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/haiku/gens/gens-gens_window_callbacks.o -MD -MP -MF ui/haiku/gens/$(DEPDIR)/gens-gens_window_callbacks.Tpo -c -o ui/haiku/gens/gens-gens_window_callbacks.o `test -f 'ui/haiku/gens/gens_window_callbacks.cpp' || echo '$(srcdir)/'`ui/haiku/gens/gens_window_callbacks.cpp
	$(AM_V_at)$(am__mv) ui/haiku/gens/$(DEPDIR)/gens-gens_window_callbacks.Tpo ui/haiku/gens/$(DEPDIR)/gens-gens_window_callbacks.Po
#	$(AM_V_CXX)source='ui/haiku/gens/gens_window_callbacks.cpp' object='ui/haiku/gens/gens-gens_window_callbacks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/haiku/gens/gens-gens_window_callbacks.o `test -f 'ui/haiku/gens/gens_window_callbacks.cpp' || echo '$(srcdir)/'`ui/haiku/gens/gens_window_callbacks.cpp

ui/haiku/gens/gens-gens_window_callbacks.obj: ui/haiku/gens/gens_window_callbacks.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/haiku/gens/gens-gens_window_callbacks.obj -MD -MP -MF ui/haiku/gens/$(DEPDIR)/gens-gens_window_callbacks.Tpo -c -o ui/haiku/gens/gens-gens_window_callbacks.obj `if test -f 'ui/haiku/gens/gens_window_callbacks.cpp'; then $(CYGPATH_W) 'ui/haiku/gens/gens_window_callbacks.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/haiku/gens/gens_window_callbacks.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/haiku/gens/$(DEPDIR)/gens-gens_window_callbacks.Tpo ui/haiku/gens/$(DEPDIR)/gens-gens_window_callbacks.Po
#	$(AM_V_CXX)source='ui/haiku/gens/gens_window_callbacks.cpp' object='ui/haiku/gens/gens-gens_window_callbacks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/haiku/gens/gens-gens_window_callbacks.obj `if test -f 'ui/haiku/gens/gens_window_callbacks.cpp'; then $(CYGPATH_W) 'ui/haiku/gens/gens_window_callbacks.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/haiku/gens/gens_window_callbacks.cpp'; fi`

ui/haiku/gens/gens-gens_window_sync.o: ui/haiku/gens/gens_window_sync.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/haiku/gens/gens-gens_window_sync.o -MD -MP -MF ui/haiku/gens/$(DEPDIR)/gens-gens_window_sync.Tpo -c -o ui/haiku/gens/gens-gens_window_sync.o `test -f 'ui/haiku/gens/gens_window_sync.cpp' || echo '$(srcdir)/'`ui/haiku/gens/gens_window_sync.cpp
	$(AM_V_at)$(am__mv) ui/haiku/gens/$(DEPDIR)/gens-gens_window_sync.Tpo ui/haiku/gens/$(DEPDIR)/gens-gens_window_sync.Po
#	$(AM_V_CXX)source='ui/haiku/gens/gens_window_sync.cpp' object='ui/haiku/gens/gens-gens_window_sync.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/haiku/gens/gens-gens_window_sync.o `test -f 'ui/haiku/gens/gens_window_sync.cpp' || echo '$(srcdir)/'`ui/haiku/gens/gens_window_sync.cpp

ui/haiku/gens/gens-gens_window_sync.obj: ui/haiku/gens/gens_window_sync.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/haiku/gens/gens-gens_window_sync.obj -MD -MP -MF ui/haiku/gens/$(DEPDIR)/gens-gens_window_sync.Tpo -c -o ui/haiku/gens/gens-gens_window_sync.obj `if test -f 'ui/haiku/gens/gens_window_sync.cpp'; then $(CYGPATH_W) 'ui/haiku/gens/gens_window_sync.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/haiku/gens/gens_window_sync.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/haiku/gens/$(DEPDIR)/gens-gens_window_sync.Tpo ui/haiku/gens/$(DEPDIR)/gens-gens_window_sync.Po
#	$(AM_V_CXX)source='ui/haiku/gens/gens_window_sync.cpp' object='ui/haiku/gens/gens-gens_window_sync.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/haiku/gens/gens-gens_window_sync.obj `if test -f 'ui/haiku/gens/gens_window_sync.cpp'; then $(CYGPATH_W) 'ui/haiku/gens/gens_window_sync.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/haiku/gens/gens_window_sync.cpp'; fi`

ui/haiku/gens/gens-gens_menu.o: ui/haiku/gens/gens_menu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/haiku/gens/gens-gens_menu.o -MD -MP -MF ui/haiku/gens/$(DEPDIR)/gens-gens_menu.Tpo -c -o ui/haiku/gens/gens-gens_menu.o `test -f 'ui/haiku/gens/gens_menu.cpp' || echo '$(srcdir)/'`ui/haiku/gens/gens_menu.cpp
	$(AM_V_at)$(am__mv) ui/haiku/gens/$(DEPDIR)/gens-gens_menu.Tpo ui/haiku/gens/$(DEPDIR)/gens-gens_menu.Po
#	$(AM_V_CXX)source='ui/haiku/gens/gens_menu.cpp' object='ui/haiku/gens/gens-gens_menu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/haiku/gens/gens-gens_menu.o `test -f 'ui/haiku/gens/gens_menu.cpp' || echo '$(srcdir)/'`ui/haiku/gens/gens_menu.cpp

ui/haiku/gens/gens-gens_menu.obj: ui/haiku/gens/gens_menu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/haiku/gens/gens-gens_menu.obj -MD -MP -MF ui/haiku/gens/$(DEPDIR)/gens-gens_menu.Tpo -c -o ui/haiku/gens/gens-gens_menu.obj `if test -f 'ui/haiku/gens/gens_menu.cpp'; then $(CYGPATH_W) 'ui/haiku/gens/gens_menu.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/haiku/gens/gens_menu.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/haiku/gens/$(DEPDIR)/gens-gens_menu.Tpo ui/haiku/gens/$(DEPDIR)/gens-gens_menu.Po
#	$(AM_V_CXX)source='ui/haiku/gens/gens_menu.cpp' object='ui/haiku/gens/gens-gens_menu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/haiku/gens/gens-gens_menu.obj `if test -f 'ui/haiku/gens/gens_menu.cpp'; then $(CYGPATH_W) 'ui/haiku/gens/gens_menu.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/haiku/gens/gens_menu.cpp'; fi`

ui/haiku/controller_config/gens-cc_window.o: ui/haiku/controller_config/cc_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/haiku/controller_config/gens-cc_window.o -MD -MP -MF ui/haiku/controller_config/$(DEPDIR)/gens-cc_window.Tpo -c -o ui/haiku/controller_config/gens-cc_window.o `test -f 'ui/haiku/controller_config/cc_window.cpp' || echo '$(srcdir)/'`ui/haiku/controller_config/cc_window.cpp
	$(AM_V_at)$(am__mv) ui/haiku/controller_config/$(DEPDIR)/gens-cc_window.Tpo ui/haiku/controller_config/$(DEPDIR)/gens-cc_window.Po
#	$(AM_V_CXX)source='ui/haiku/controller_config/cc_window.cpp' object='ui/haiku/controller_config/gens-cc_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/haiku/controller_config/gens-cc_window.o `test -f 'ui/haiku/controller_config/cc_window.cpp' || echo '$(srcdir)/'`ui/haiku/controller_config/cc_window.cpp

ui/haiku/controller_config/gens-cc_window.obj: ui/haiku/controller_config/cc_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/haiku/controller_config/gens-cc_window.obj -MD -MP -MF ui/haiku/controller_config/$(DEPDIR)/gens-cc_window.Tpo -c -o ui/haiku/controller_config/gens-cc_window.obj `if test -f 'ui/haiku/controller_config/cc_window.cpp'; then $(CYGPATH_W) 'ui/haiku/controller_config/cc_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/haiku/controller_config/cc_window.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/haiku/controller_config/$(DEPDIR)/gens-cc_window.Tpo ui/haiku/controller_config/$(DEPDIR)/gens-cc_window.Po
#	$(AM_V_CXX)source='ui/haiku/controller_config/cc_window.cpp' object='ui/haiku/controller_config/gens-cc_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/haiku/controller_config/gens-cc_window.obj `if test -f 'ui/haiku/controller_config/cc_window.cpp'; then $(CYGPATH_W) 'ui/haiku/controller_config/cc_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/haiku/controller_config/cc_window.cpp'; fi`

ui/haiku/bios_misc_files/gens-bmf_window.o: ui/haiku/bios_misc_files/bmf_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/haiku/bios_misc_files/gens-bmf_window.o -MD -MP -MF ui/haiku/bios_misc_files/$(DEPDIR)/gens-bmf_window.Tpo -c -o ui/haiku/bios_misc_files/gens-bmf_window.o `test -f 'ui/haiku/bios_misc_files/bmf_window.cpp' || echo '$(srcdir)/'`ui/haiku/bios_misc_files/bmf_window.cpp
	$(AM_V_at)$(am__mv) ui/haiku/bios_misc_files/$(DEPDIR)/gens-bmf_window.Tpo ui/haiku/bios_misc_files/$(DEPDIR)/gens-bmf_window.Po
#	$(AM_V_CXX)source='ui/haiku/bios_misc_files/bmf_window.cpp' object='ui/haiku/bios_misc_files/gens-bmf_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/haiku/bios_misc_files/gens-bmf_window.o `test -f 'ui/haiku/bios_misc_files/bmf_window.cpp' || echo '$(srcdir)/'`ui/haiku/bios_misc_files/bmf_window.cpp

ui/haiku/bios_misc_files/gens-bmf_window.obj: ui/haiku/bios_misc_files/bmf_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/haiku/bios_misc_files/gens-bmf_window.obj -MD -MP -MF ui/haiku/bios_misc_files/$(DEPDIR)/gens-bmf_window.Tpo -c -o ui/haiku/bios_misc_files/gens-bmf_window.obj `if test -f 'ui/haiku/bios_misc_files/bmf_window.cpp'; then $(CYGPATH_W) 'ui/haiku/bios_misc_files/bmf_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/haiku/bios_misc_files/bmf_window.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/haiku/bios_misc_files/$(DEPDIR)/gens-bmf_window.Tpo ui/haiku/bios_misc_files/$(DEPDIR)/gens-bmf_window.Po
#	$(AM_V_CXX)source='ui/haiku/bios_misc_files/bmf_window.cpp' object='ui/haiku/bios_misc_files/gens-bmf_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/haiku/bios_misc_files/gens-bmf_window.obj `if test -f 'ui/haiku/bios_misc_files/bmf_window.cpp'; then $(CYGPATH_W) 'ui/haiku/bios_misc_files/bmf_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/haiku/bios_misc_files/bmf_window.cpp'; fi`

ui/haiku/directory_config/gens-dir_window.o: ui/haiku/directory_config/dir_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/haiku/directory_config/gens-dir_window.o -MD -MP -MF ui/haiku/directory_config/$(DEPDIR)/gens-dir_window.Tpo -c -o ui/haiku/directory_config/gens-dir_window.o `test -f 'ui/haiku/directory_config/dir_window.cpp' || echo '$(srcdir)/'`ui/haiku/directory_config/dir_window.cpp
	$(AM_V_at)$(am__mv) ui/haiku/directory_config/$(DEPDIR)/gens-dir_window.Tpo ui/haiku/directory_config/$(DEPDIR)/gens-dir_window.Po
#	$(AM_V_CXX)source='ui/haiku/directory_config/dir_window.cpp' object='ui/haiku/directory_config/gens-dir_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/haiku/directory_config/gens-dir_window.o `test -f 'ui/haiku/directory_config/dir_window.cpp' || echo '$(srcdir)/'`ui/haiku/directory_config/dir_window.cpp

ui/haiku/directory_config/gens-dir_window.obj: ui/haiku/directory_config/dir_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/haiku/directory_config/gens-dir_window.obj -MD -MP -MF ui/haiku/directory_config/$(DEPDIR)/gens-dir_window.Tpo -c -o ui/haiku/directory_config/gens-dir_window.obj `if test -f 'ui/haiku/directory_config/dir_window.cpp'; then $(CYGPATH_W) 'ui/haiku/directory_config/dir_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/haiku/directory_config/dir_window.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/haiku/directory_config/$(DEPDIR)/gens-dir_window.Tpo ui/haiku/directory_config/$(DEPDIR)/gens-dir_window.Po
#	$(AM_V_CXX)source='ui/haiku/directory_config/dir_window.cpp' object='ui/haiku/directory_config/gens-dir_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/haiku/directory_config/gens-dir_window.obj `if test -f 'ui/haiku/directory_config/dir_window.cpp'; then $(CYGPATH_W) 'ui/haiku/directory_config/dir_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/haiku/directory_config/dir_window.cpp'; fi`

ui/haiku/general_options/gens-genopt_window.o: ui/haiku/general_options/genopt_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/haiku/general_options/gens-genopt_window.o -MD -MP -MF ui/haiku/general_options/$(DEPDIR)/gens-genopt_window.Tpo -c -o ui/haiku/general_options/gens-genopt_window.o `test -f 'ui/haiku/general_options/genopt_window.cpp' || echo '$(srcdir)/'`ui/haiku/general_options/genopt_window.cpp
	$(AM_V_at)$(am__mv) ui/haiku/general_options/$(DEPDIR)/gens-genopt_window.Tpo ui/haiku/general_options/$(DEPDIR)/gens-genopt_window.Po
#	$(AM_V_CXX)source='ui/haiku/general_options/genopt_window.cpp' object='ui/haiku/general_options/gens-genopt_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/haiku/general_options/gens-genopt_window.o `test -f 'ui/haiku/general_options/genopt_window.cpp' || echo '$(srcdir)/'`ui/haiku/general_options/genopt_window.cpp

ui/haiku/general_options/gens-genopt_window.obj: ui/haiku/general_options/genopt_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/haiku/general_options/gens-genopt_window.obj -MD -MP -MF ui/haiku/general_options/$(DEPDIR)/gens-genopt_window.Tpo -c -o ui/haiku/general_options/gens-genopt_window.obj `if test -f 'ui/haiku/general_options/genopt_window.cpp'; then $(CYGPATH_W) 'ui/haiku/general_options/genopt_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/haiku/general_options/genopt_window.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/haiku/general_options/$(DEPDIR)/gens-genopt_window.Tpo ui/haiku/general_options/$(DEPDIR)/gens-genopt_window.Po
#	$(AM_V_CXX)source='ui/haiku/general_options/genopt_window.cpp' object='ui/haiku/general_options/gens-genopt_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/haiku/general_options/gens-genopt_window.obj `if test -f 'ui/haiku/general_options/genopt_window.cpp'; then $(CYGPATH_W) 'ui/haiku/general_options/genopt_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/haiku/general_options/genopt_window.cpp'; fi`

ui/haiku/color_adjust/gens-ca_window.o: ui/haiku/color_adjust/ca_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/haiku/color_adjust/gens-ca_window.o -MD -MP -MF ui/haiku/color_adjust/$(DEPDIR)/gens-ca_window.Tpo -c -o ui/haiku/color_adjust/gens-ca_window.o `test -f 'ui/haiku/color_adjust/ca_window.cpp' || echo '$(srcdir)/'`ui/haiku/color_adjust/ca_window.cpp
	$(AM_V_at)$(am__mv) ui/haiku/color_adjust/$(DEPDIR)/gens-ca_window.Tpo ui/haiku/color_adjust/$(DEPDIR)/gens-ca_window.Po
#	$(AM_V_CXX)source='ui/haiku/color_adjust/ca_window.cpp' object='ui/haiku/color_adjust/gens-ca_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/haiku/color_adjust/gens-ca_window.o `test -f 'ui/haiku/color_adjust/ca_window.cpp' || echo '$(srcdir)/'`ui/haiku/color_adjust/ca_window.cpp

ui/haiku/color_adjust/gens-ca_window.obj: ui/haiku/color_adjust/ca_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/haiku/color_adjust/gens-ca_window.obj -MD -MP -MF ui/haiku/color_adjust/$(DEPDIR)/gens-ca_window.Tpo -c -o ui/haiku/color_adjust/gens-ca_window.obj `if test -f 'ui/haiku/color_adjust/ca_window.cpp'; then $(CYGPATH_W) 'ui/haiku/color_adjust/ca_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/haiku/color_adjust/ca_window.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/haiku/color_adjust/$(DEPDIR)/gens-ca_window.Tpo ui/haiku/color_adjust/$(DEPDIR)/gens-ca_window.Po
#	$(AM_V_CXX)source='ui/haiku/color_adjust/ca_window.cpp' object='ui/haiku/color_adjust/gens-ca_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/haiku/color_adjust/gens-ca_window.obj `if test -f 'ui/haiku/color_adjust/ca_window.cpp'; then $(CYGPATH_W) 'ui/haiku/color_adjust/ca_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/haiku/color_adjust/ca_window.cpp'; fi`

ui/haiku/country_code/gens-ccode_window.o: ui/haiku/country_code/ccode_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/haiku/country_code/gens-ccode_window.o -MD -MP -MF ui/haiku/country_code/$(DEPDIR)/gens-ccode_window.Tpo -c -o ui/haiku/country_code/gens-ccode_window.o `test -f 'ui/haiku/country_code/ccode_window.cpp' || echo '$(srcdir)/'`ui/haiku/country_code/ccode_window.cpp
	$(AM_V_at)$(am__mv) ui/haiku/country_code/$(DEPDIR)/gens-ccode_window.Tpo ui/haiku/country_code/$(DEPDIR)/gens-ccode_window.Po
#	$(AM_V_CXX)source='ui/haiku/country_code/ccode_window.cpp' object='ui/haiku/country_code/gens-ccode_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/haiku/country_code/gens-ccode_window.o `test -f 'ui/haiku/country_code/ccode_window.cpp' || echo '$(srcdir)/'`ui/haiku/country_code/ccode_window.cpp

ui/haiku/country_code/gens-ccode_window.obj: ui/haiku/country_code/ccode_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/haiku/country_code/gens-ccode_window.obj -MD -MP -MF ui/haiku/country_code/$(DEPDIR)/gens-ccode_window.Tpo -c -o ui/haiku/country_code/gens-ccode_window.obj `if test -f 'ui/haiku/country_code/ccode_window.cpp'; then $(CYGPATH_W) 'ui/haiku/country_code/ccode_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/haiku/country_code/ccode_window.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/haiku/country_code/$(DEPDIR)/gens-ccode_window.Tpo ui/haiku/country_code/$(DEPDIR)/gens-ccode_window.Po
#	$(AM_V_CXX)source='ui/haiku/country_code/ccode_window.cpp' object='ui/haiku/country_code/gens-ccode_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/haiku/country_code/gens-ccode_window.obj `if test -f 'ui/haiku/country_code/ccode_window.cpp'; then $(CYGPATH_W) 'ui/haiku/country_code/ccode_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/haiku/country_code/ccode_window.cpp'; fi`

ui/haiku/zip_select/gens-zipsel_dialog.o: ui/haiku/zip_select/zipsel_dialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/haiku/zip_select/gens-zipsel_dialog.o -MD -MP -MF ui/haiku/zip_select/$(DEPDIR)/gens-zipsel_dialog.Tpo -c -o ui/haiku/zip_select/gens-zipsel_dialog.o `test -f 'ui/haiku/zip_select/zipsel_dialog.cpp' || echo '$(srcdir)/'`ui/haiku/zip_select/zipsel_dialog.cpp
	$(AM_V_at)$(am__mv) ui/haiku/zip_select/$(DEPDIR)/gens-zipsel_dialog.Tpo ui/haiku/zip_select/$(DEPDIR)/gens-zipsel_dialog.Po
#	$(AM_V_CXX)source='ui/haiku/zip_select/zipsel_dialog.cpp' object='ui/haiku/zip_select/gens-zipsel_dialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/haiku/zip_select/gens-zipsel_dialog.o `test -f 'ui/haiku/zip_select/zipsel_dialog.cpp' || echo '$(srcdir)/'`ui/haiku/zip_select/zipsel_dialog.cpp

ui/haiku/zip_select/gens-zipsel_dialog.obj: ui/haiku/zip_select/zipsel_dialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/haiku/zip_select/gens-zipsel_dialog.obj -MD -MP -MF ui/haiku/zip_select/$(DEPDIR)/gens-zipsel_dialog.Tpo -c -o ui/haiku/zip_select/gens-zipsel_dialog.obj `if test -f 'ui/haiku/zip_select/zipsel_dialog.cpp'; then $(CYGPATH_W) 'ui/haiku/zip_select/zipsel_dialog.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/haiku/zip_select/zipsel_dialog.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/haiku/zip_select/$(DEPDIR)/gens-zipsel_dialog.Tpo ui/haiku/zip_select/$(DEPDIR)/gens-zipsel_dialog.Po
#	$(AM_V_CXX)source='ui/haiku/zip_select/zipsel_dialog.cpp' object='ui/haiku/zip_select/gens-zipsel_dialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/haiku/zip_select/gens-zipsel_dialog.obj `if test -f 'ui/haiku/zip_select/zipsel_dialog.cpp'; then $(CYGPATH_W) 'ui/haiku/zip_select/zipsel_dialog.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/haiku/zip_select/zipsel_dialog.cpp'; fi`

ui/haiku/plugin_manager/gens-pmgr_window.o: ui/haiku/plugin_manager/pmgr_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/haiku/plugin_manager/gens-pmgr_window.o -MD -MP -MF ui/haiku/plugin_manager/$(DEPDIR)/gens-pmgr_window.Tpo -c -o ui/haiku/plugin_manager/gens-pmgr_window.o `test -f 'ui/haiku/plugin_manager/pmgr_window.cpp' || echo '$(srcdir)/'`ui/haiku/plugin_manager/pmgr_window.cpp
	$(AM_V_at)$(am__mv) ui/haiku/plugin_manager/$(DEPDIR)/gens-pmgr_window.Tpo ui/haiku/plugin_manager/$(DEPDIR)/gens-pmgr_window.Po
#	$(AM_V_CXX)source='ui/haiku/plugin_manager/pmgr_window.cpp' object='ui/haiku/plugin_manager/gens-pmgr_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/haiku/plugin_manager/gens-pmgr_window.o `test -f 'ui/haiku/plugin_manager/pmgr_window.cpp' || echo '$(srcdir)/'`ui/haiku/plugin_manager/pmgr_window.cpp

ui/haiku/plugin_manager/gens-pmgr_window.obj: ui/haiku/plugin_manager/pmgr_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/haiku/plugin_manager/gens-pmgr_window.obj -MD -MP -MF ui/haiku/plugin_manager/$(DEPDIR)/gens-pmgr_window.Tpo -c -o ui/haiku/plugin_manager/gens-pmgr_window.obj `if test -f 'ui/haiku/plugin_manager/pmgr_window.cpp'; then $(CYGPATH_W) 'ui/haiku/plugin_manager/pmgr_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/haiku/plugin_manager/pmgr_window.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/haiku/plugin_manager/$(DEPDIR)/gens-pmgr_window.Tpo ui/haiku/plugin_manager/$(DEPDIR)/gens-pmgr_window.Po
#	$(AM_V_CXX)source='ui/haiku/plugin_manager/pmgr_window.cpp' object='ui/haiku/plugin_manager/gens-pmgr_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/haiku/plugin_manager/gens-pmgr_window.obj `if test -f 'ui/haiku/plugin_manager/pmgr_window.cpp'; then $(CYGPATH_W) 'ui/haiku/plugin_manager/pmgr_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/haiku/plugin_manager/pmgr_window.cpp'; fi`

ui/haiku/about/gens-about_window.o: ui/haiku/about/about_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/haiku/about/gens-about_window.o -MD -MP -MF ui/haiku/about/$(DEPDIR)/gens-about_window.Tpo -c -o ui/haiku/about/gens-about_window.o `test -f 'ui/haiku/about/about_window.cpp' || echo '$(srcdir)/'`ui/haiku/about/about_window.cpp
	$(AM_V_at)$(am__mv) ui/haiku/about/$(DEPDIR)/gens-about_window.Tpo ui/haiku/about/$(DEPDIR)/gens-about_window.Po
#	$(AM_V_CXX)source='ui/haiku/about/about_window.cpp' object='ui/haiku/about/gens-about_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/haiku/about/gens-about_window.o `test -f 'ui/haiku/about/about_window.cpp' || echo '$(srcdir)/'`ui/haiku/about/about_window.cpp

ui/haiku/about/gens-about_window.obj: ui/haiku/about/about_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -MT ui/haiku/about/gens-about_window.obj -MD -MP -MF ui/haiku/about/$(DEPDIR)/gens-about_window.Tpo -c -o ui/haiku/about/gens-about_window.obj `if test -f 'ui/haiku/about/about_window.cpp'; then $(CYGPATH_W) 'ui/haiku/about/about_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/haiku/about/about_window.cpp'; fi`
	$(AM_V_at)$(am__mv) ui/haiku/about/$(DEPDIR)/gens-about_window.Tpo ui/haiku/about/$(DEPDIR)/gens-about_window.Po
#	$(AM_V_CXX)source='ui/haiku/about/about_window.cpp' object='ui/haiku/about/gens-about_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gens_CXXFLAGS) $(CXXFLAGS) -c -o ui/haiku/about/gens-about_window.obj `if test -f 'ui/haiku/about/about_window.cpp'; then $(CYGPATH_W) 'ui/haiku/about/about_window.cpp'; else $(CYGPATH_W) '$(srcdir)/ui/haiku/about/about_window.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f audio/$(DEPDIR)/$(am__dirstamp)
	-rm -f audio/$(am__dirstamp)
	-rm -f charset/$(DEPDIR)/$(am__dirstamp)
	-rm -f charset/$(am__dirstamp)
	-rm -f debugger/$(DEPDIR)/$(am__dirstamp)
	-rm -f debugger/$(am__dirstamp)
	-rm -f emulator/$(DEPDIR)/$(am__dirstamp)
	-rm -f emulator/$(am__dirstamp)
	-rm -f gens_core/cpu/68k/$(DEPDIR)/$(am__dirstamp)
	-rm -f gens_core/cpu/68k/$(am__dirstamp)
	-rm -f gens_core/cpu/sh2/$(DEPDIR)/$(am__dirstamp)
	-rm -f gens_core/cpu/sh2/$(am__dirstamp)
	-rm -f gens_core/cpu/z80/$(DEPDIR)/$(am__dirstamp)
	-rm -f gens_core/cpu/z80/$(am__dirstamp)
	-rm -f gens_core/gfx/$(DEPDIR)/$(am__dirstamp)
	-rm -f gens_core/gfx/$(am__dirstamp)
	-rm -f gens_core/io/$(DEPDIR)/$(am__dirstamp)
	-rm -f gens_core/io/$(am__dirstamp)
	-rm -f gens_core/mem/$(DEPDIR)/$(am__dirstamp)
	-rm -f gens_core/mem/$(am__dirstamp)
	-rm -f gens_core/misc/$(DEPDIR)/$(am__dirstamp)
	-rm -f gens_core/misc/$(am__dirstamp)
	-rm -f gens_core/sound/$(DEPDIR)/$(am__dirstamp)
	-rm -f gens_core/sound/$(am__dirstamp)
	-rm -f gens_core/vdp/$(DEPDIR)/$(am__dirstamp)
	-rm -f gens_core/vdp/$(am__dirstamp)
	-rm -f input/$(DEPDIR)/$(am__dirstamp)
	-rm -f input/$(am__dirstamp)
	-rm -f macros/$(DEPDIR)/$(am__dirstamp)
	-rm -f macros/$(am__dirstamp)
	-rm -f plugins/$(DEPDIR)/$(am__dirstamp)
	-rm -f plugins/$(am__dirstamp)
	-rm -f plugins/reg/$(DEPDIR)/$(am__dirstamp)
	-rm -f plugins/reg/$(am__dirstamp)
	-rm -f port/$(DEPDIR)/$(am__dirstamp)
	-rm -f port/$(am__dirstamp)
	-rm -f segacd/$(DEPDIR)/$(am__dirstamp)
	-rm -f segacd/$(am__dirstamp)
	-rm -f ui/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/$(am__dirstamp)
	-rm -f ui/common/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/common/$(am__dirstamp)
	-rm -f ui/common/gens/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/common/gens/$(am__dirstamp)
	-rm -f ui/gtk/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/gtk/$(am__dirstamp)
	-rm -f ui/gtk/about/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/gtk/about/$(am__dirstamp)
	-rm -f ui/gtk/bios_misc_files/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/gtk/bios_misc_files/$(am__dirstamp)
	-rm -f ui/gtk/color_adjust/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/gtk/color_adjust/$(am__dirstamp)
	-rm -f ui/gtk/controller_config/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/gtk/controller_config/$(am__dirstamp)
	-rm -f ui/gtk/country_code/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/gtk/country_code/$(am__dirstamp)
	-rm -f ui/gtk/directory_config/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/gtk/directory_config/$(am__dirstamp)
	-rm -f ui/gtk/general_options/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/gtk/general_options/$(am__dirstamp)
	-rm -f ui/gtk/gens/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/gtk/gens/$(am__dirstamp)
	-rm -f ui/gtk/opengl_resolution/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/gtk/opengl_resolution/$(am__dirstamp)
	-rm -f ui/gtk/plugin_manager/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/gtk/plugin_manager/$(am__dirstamp)
	-rm -f ui/gtk/select_cdrom/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/gtk/select_cdrom/$(am__dirstamp)
	-rm -f ui/gtk/zip_select/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/gtk/zip_select/$(am__dirstamp)
	-rm -f ui/haiku/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/haiku/$(am__dirstamp)
	-rm -f ui/haiku/about/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/haiku/about/$(am__dirstamp)
	-rm -f ui/haiku/bios_misc_files/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/haiku/bios_misc_files/$(am__dirstamp)
	-rm -f ui/haiku/color_adjust/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/haiku/color_adjust/$(am__dirstamp)
	-rm -f ui/haiku/controller_config/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/haiku/controller_config/$(am__dirstamp)
	-rm -f ui/haiku/country_code/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/haiku/country_code/$(am__dirstamp)
	-rm -f ui/haiku/directory_config/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/haiku/directory_config/$(am__dirstamp)
	-rm -f ui/haiku/general_options/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/haiku/general_options/$(am__dirstamp)
	-rm -f ui/haiku/gens/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/haiku/gens/$(am__dirstamp)
	-rm -f ui/haiku/plugin_manager/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/haiku/plugin_manager/$(am__dirstamp)
	-rm -f ui/haiku/zip_select/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/haiku/zip_select/$(am__dirstamp)
	-rm -f ui/win32/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/win32/$(am__dirstamp)
	-rm -f ui/win32/about/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/win32/about/$(am__dirstamp)
	-rm -f ui/win32/bios_misc_files/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/win32/bios_misc_files/$(am__dirstamp)
	-rm -f ui/win32/color_adjust/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/win32/color_adjust/$(am__dirstamp)
	-rm -f ui/win32/controller_config/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/win32/controller_config/$(am__dirstamp)
	-rm -f ui/win32/country_code/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/win32/country_code/$(am__dirstamp)
	-rm -f ui/win32/directory_config/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/win32/directory_config/$(am__dirstamp)
	-rm -f ui/win32/general_options/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/win32/general_options/$(am__dirstamp)
	-rm -f ui/win32/gens/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/win32/gens/$(am__dirstamp)
	-rm -f ui/win32/plugin_manager/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/win32/plugin_manager/$(am__dirstamp)
	-rm -f ui/win32/select_cdrom/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/win32/select_cdrom/$(am__dirstamp)
	-rm -f ui/win32/zip_select/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/win32/zip_select/$(am__dirstamp)
	-rm -f util/file/$(DEPDIR)/$(am__dirstamp)
	-rm -f util/file/$(am__dirstamp)
	-rm -f util/file/decompressor/$(DEPDIR)/$(am__dirstamp)
	-rm -f util/file/decompressor/$(am__dirstamp)
	-rm -f util/gfx/$(DEPDIR)/$(am__dirstamp)
	-rm -f util/gfx/$(am__dirstamp)
	-rm -f util/sound/$(DEPDIR)/$(am__dirstamp)
	-rm -f util/sound/$(am__dirstamp)
	-rm -f video/$(DEPDIR)/$(am__dirstamp)
	-rm -f video/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf audio/$(DEPDIR) charset/$(DEPDIR) debugger/$(DEPDIR) emulator/$(DEPDIR) gens_core/cpu/68k/$(DEPDIR) gens_core/cpu/sh2/$(DEPDIR) gens_core/cpu/z80/$(DEPDIR) gens_core/gfx/$(DEPDIR) gens_core/io/$(DEPDIR) gens_core/mem/$(DEPDIR) gens_core/misc/$(DEPDIR) gens_core/sound/$(DEPDIR) gens_core/vdp/$(DEPDIR) input/$(DEPDIR) macros/$(DEPDIR) plugins/$(DEPDIR) plugins/reg/$(DEPDIR) port/$(DEPDIR) segacd/$(DEPDIR) ui/$(DEPDIR) ui/common/$(DEPDIR) ui/common/gens/$(DEPDIR) ui/gtk/$(DEPDIR) ui/gtk/about/$(DEPDIR) ui/gtk/bios_misc_files/$(DEPDIR) ui/gtk/color_adjust/$(DEPDIR) ui/gtk/controller_config/$(DEPDIR) ui/gtk/country_code/$(DEPDIR) ui/gtk/directory_config/$(DEPDIR) ui/gtk/general_options/$(DEPDIR) ui/gtk/gens/$(DEPDIR) ui/gtk/opengl_resolution/$(DEPDIR) ui/gtk/plugin_manager/$(DEPDIR) ui/gtk/select_cdrom/$(DEPDIR) ui/gtk/zip_select/$(DEPDIR) ui/haiku/$(DEPDIR) ui/haiku/about/$(DEPDIR) ui/haiku/bios_misc_files/$(DEPDIR) ui/haiku/color_adjust/$(DEPDIR) ui/haiku/controller_config/$(DEPDIR) ui/haiku/country_code/$(DEPDIR) ui/haiku/directory_config/$(DEPDIR) ui/haiku/general_options/$(DEPDIR) ui/haiku/gens/$(DEPDIR) ui/haiku/plugin_manager/$(DEPDIR) ui/haiku/zip_select/$(DEPDIR) ui/win32/$(DEPDIR) ui/win32/about/$(DEPDIR) ui/win32/bios_misc_files/$(DEPDIR) ui/win32/color_adjust/$(DEPDIR) ui/win32/controller_config/$(DEPDIR) ui/win32/country_code/$(DEPDIR) ui/win32/directory_config/$(DEPDIR) ui/win32/general_options/$(DEPDIR) ui/win32/gens/$(DEPDIR) ui/win32/plugin_manager/$(DEPDIR) ui/win32/select_cdrom/$(DEPDIR) ui/win32/zip_select/$(DEPDIR) util/file/$(DEPDIR) util/file/decompressor/$(DEPDIR) util/gfx/$(DEPDIR) util/sound/$(DEPDIR) video/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf audio/$(DEPDIR) charset/$(DEPDIR) debugger/$(DEPDIR) emulator/$(DEPDIR) gens_core/cpu/68k/$(DEPDIR) gens_core/cpu/sh2/$(DEPDIR) gens_core/cpu/z80/$(DEPDIR) gens_core/gfx/$(DEPDIR) gens_core/io/$(DEPDIR) gens_core/mem/$(DEPDIR) gens_core/misc/$(DEPDIR) gens_core/sound/$(DEPDIR) gens_core/vdp/$(DEPDIR) input/$(DEPDIR) macros/$(DEPDIR) plugins/$(DEPDIR) plugins/reg/$(DEPDIR) port/$(DEPDIR) segacd/$(DEPDIR) ui/$(DEPDIR) ui/common/$(DEPDIR) ui/common/gens/$(DEPDIR) ui/gtk/$(DEPDIR) ui/gtk/about/$(DEPDIR) ui/gtk/bios_misc_files/$(DEPDIR) ui/gtk/color_adjust/$(DEPDIR) ui/gtk/controller_config/$(DEPDIR) ui/gtk/country_code/$(DEPDIR) ui/gtk/directory_config/$(DEPDIR) ui/gtk/general_options/$(DEPDIR) ui/gtk/gens/$(DEPDIR) ui/gtk/opengl_resolution/$(DEPDIR) ui/gtk/plugin_manager/$(DEPDIR) ui/gtk/select_cdrom/$(DEPDIR) ui/gtk/zip_select/$(DEPDIR) ui/haiku/$(DEPDIR) ui/haiku/about/$(DEPDIR) ui/haiku/bios_misc_files/$(DEPDIR) ui/haiku/color_adjust/$(DEPDIR) ui/haiku/controller_config/$(DEPDIR) ui/haiku/country_code/$(DEPDIR) ui/haiku/directory_config/$(DEPDIR) ui/haiku/general_options/$(DEPDIR) ui/haiku/gens/$(DEPDIR) ui/haiku/plugin_manager/$(DEPDIR) ui/haiku/zip_select/$(DEPDIR) ui/win32/$(DEPDIR) ui/win32/about/$(DEPDIR) ui/win32/bios_misc_files/$(DEPDIR) ui/win32/color_adjust/$(DEPDIR) ui/win32/controller_config/$(DEPDIR) ui/win32/country_code/$(DEPDIR) ui/win32/directory_config/$(DEPDIR) ui/win32/general_options/$(DEPDIR) ui/win32/gens/$(DEPDIR) ui/win32/plugin_manager/$(DEPDIR) ui/win32/select_cdrom/$(DEPDIR) ui/win32/zip_select/$(DEPDIR) util/file/$(DEPDIR) util/file/decompressor/$(DEPDIR) util/gfx/$(DEPDIR) util/sound/$(DEPDIR) video/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: $(am__recursive_targets) install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-am clean clean-binPROGRAMS clean-generic clean-libtool \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS


# x86 assembly language (using gcc)
%.o: %.S
	$(CC) -g -O2 -c $< -o $@

# x86 assembly language (using nasm)
%.o: %.asm
	mkdir -p gens_core/gfx/ gens_core/io/ gens_core/mem/ gens_core/misc/ ;
	mkdir -p gens_core/sound/ gens_core/cpu/sh2/ gens_core/vdp/ gens_core/cpu/z80/ ;
	$(NASM) $< -o $@

# Win32 resources
.rc.o:
	$(RC) -I. -I$(top_builddir) $(DEFS) $< -o $@
%.o: %.rc
	$(RC) -I. -I$(top_builddir) $(DEFS) $< -o $@

# OS-specific includes

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
